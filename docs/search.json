[{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Concentration-Time Profile Simulation Examples","text":"vignette provides three examples use ToCS app generate concentration-time profiles, example different parameters selected. begin, open app using methods described README file. correctly accessed app screen looks like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"model-states","dir":"Articles","previous_headings":"","what":"Model States","title":"Concentration-Time Profile Simulation Examples","text":"jumping several examples, define output states users see plots tables generated ToCS module. , list model chosen output states. Agutlumen = Amount chemical gut lumen Ccompartment = Plasma concentration chemical main absorption compartment Ametabolized = Amount chemical metabolized main compartment AUC = Area curve plasma concentration Aintestine = Amount chemical intestine Cliver = Concentration chemical liver Csyscomp = Concentration chemical systemic compartment Cplasma = Concentration chemical plasma Atubules = Amount chemical excreted systemic compartment tubules Ametabolized = Amount chemical metabolized liver AUC = Area curve plasma concentration Agutlumen = Amount chemical gut lumen Cgut = Concentration chemical gut Cliver = Concentration chemical liver Cven = Concentration chemical veins Clung = Concentration chemical lung Cart = Concentration chemical arteries Crest = Concentration chemical rest body Ckidney = Concentration chemical kidney Cplasma = Concentration chemical plasma Atubules = Amount chemical excreted kidney tubules Ametabolized = Amount chemical metabolized liver AUC = Area curve plasma concentration outputs pbtk model maternal concentrations amounts plus: Cadipose = Concentration chemical adipose tissue Rblood2plasma = Dynamic maternal ratio blood plasma (unitless) fAUC = Fetal area curve fetal plasma concentration Cplacenta = Concentration chemical placenta Cfliver = Concentration chemical fetal liver Cfven = Concentration chemical fetal veins Cfart = Concentration chemical fetal arteries Cfgut = Concentration chemical fetal gut Cflung = Concentration chemical fetal lung Cfrest = Concentration chemical fetal rest body Cfthyroid = Concentration chemical fetal thyroid Cfkidney = Concentration chemical fetal kidney Cfbrain = Concentration chemical fetal brain Cfplasma = Concentration chemical fetal plasma Rfblood2plasma = Dynamic fetal ratio blood plasma (unitless) Qcardiac = Amount blood flowing cardiac tissue (L/day) Qthyroid = Amount blood flowing thyroid tissue (L/day) Amount outputs units umol, concentration outputs uM. area curve outputs units uM*days. units specified defined. user can also check figure captions units. user wants details models formulations, encouraged check httk documentation (https://cran.r-project.org/web/packages/httk/index.html).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"example-1","dir":"Articles","previous_headings":"","what":"Example 1","title":"Concentration-Time Profile Simulation Examples","text":"Let’s say want run simulation outputs human concentration-time profiles course one day four compounds: Abamectin (CAS: 71751-41-2), Bisphenol-(CAS: 80-05-7), Cyanazine (CAS: 21725-46-2), Dimethoate (CAS: 60-51-5). simulation single 5 mg/kg oral exposure compound use PBTK model without including silico generated parameters place vitro data.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"general-parameters-tab","dir":"Articles","previous_headings":"Example 1","what":"General Parameters Tab","title":"Concentration-Time Profile Simulation Examples","text":"Since main output want concentration-time profiles, select Concentration-time profiles drop menu Output card. Species card, select Human species. Thus, completed first tab look like page .   Now, move Model Specifications tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"model-specifications-tab","dir":"Articles","previous_headings":"Example 1","what":"Model Specifications Tab","title":"Concentration-Time Profile Simulation Examples","text":"Dosing card, leave first two drop menus default values. dosing frequency, select Single Dose drop menu. prompts appearance textbox can input number mg/kg administered. change value 5 since want single 5 mg/kg exposure. Model card, select pbtk pbtk model first drop menu. Since want use silico generated parameters simulation, select second drop menu Model card. Finally, since want run simulation one day, edit bottom box Model card 1 instead default value 10. Now Model Specifications tab completed look like image , can proceed Compound Selection tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"compound-selection-tab","dir":"Articles","previous_headings":"Example 1","what":"Compound Selection Tab","title":"Concentration-Time Profile Simulation Examples","text":"Since want simulate four compounds (abamectin, bisphenol-, cyanazine, dimethoate), keep first drop menu Preloaded Compounds card Choose available chemicals selection try searching second drop menu see program able simulate chemicals current data httk. see available compounds, click empty box center column. either scrolling typing textbox, see names four compounds also available, select . Since compounds need available, need upload CSV file Uploaded Data card leave untouched. , proceed next tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"advanced-optional-parameters-tab","dir":"Articles","previous_headings":"Example 1","what":"Advanced (Optional) Parameters Tab","title":"Concentration-Time Profile Simulation Examples","text":"simplicity example, leave selections inputs tab alone proceed next final tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"run-simulation-tab","dir":"Articles","previous_headings":"Example 1","what":"Run Simulation Tab","title":"Concentration-Time Profile Simulation Examples","text":"input selections complete correct compounds appear Selected Compounds card, shown image . Therefore, hit Run Simulation button Actions card ToCS can compute solution. output appear Results window complete. Depending number compounds selected simulate, results may take several seconds populate.   image shows first drop Results card simulation complete. user sees complete time course curves four chemicals model compartments overlaying . legend figure located bottom right corner, figure description describing y-axis subplot located figure. user also option download figure clicking Download Figure 1.   second drop Results card, seen , shows user plots seen first drop tab compound separate plot. user option download individual plots zip file. figure caption also located last plot tab.   third drop Results card allows user download time course simulation data used generate plots two drop downs . user can also download inputted simulation parameters well chemical data used simulations. interface two download buttons shown .   Opening bottom drop Results card shows toxicokinetic summary including Tmax (time maximal concentration), Cmax (maximal concentration), AUC (area curve) simulated compounds within model compartment. table available download user clicks Download Table 1.   wanted run another simulation, click Reset Session button Actions card, clear parameter inputs simulations return interface General Parameters tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"example-2","dir":"Articles","previous_headings":"","what":"Example 2","title":"Concentration-Time Profile Simulation Examples","text":"Let’s say want run simulation outputs rat concentration-time profiles course three days five compounds: Valproic Acid (CAS: 99-66-1), Benzoic Acid (CAS: 65-85-0), Ethanol (CAS: 64-17-5), Titanium Dioxide (CAS: 13463-67-7), Advantame (CAS: 714229-20-6). simulation three oral exposures day every eight hours 2 mg/kg compound. use 3-compartment model without including silico generated parameters missing vitro data.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"general-parameters-tab-1","dir":"Articles","previous_headings":"Example 2","what":"General Parameters Tab","title":"Concentration-Time Profile Simulation Examples","text":"example 1, select Concentration-time profiles desired output Output card. time, however, select Rat species first drop Species card. Let’s say , example, want use rat vitro data instead using human vitro data compounds missing rat data. Thus, select second drop menu Species card. first tab now look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"model-specifications-tab-1","dir":"Articles","previous_headings":"Example 2","what":"Model Specifications Tab","title":"Concentration-Time Profile Simulation Examples","text":"Dosing card, leave first two drop menus default selections. dosing frequency (third) drop menu, select Multiple Doses. fourth drop menu appear asking whether want multiple doses evenly distributed throughout day. Since want administer 2 mg/kg dose every 8 hours, select Yes drop menu. Finally, two additional user options appear. first one asks user specify amount chemical exposure per administration, enter 2 box. second one slider user specify frequency dose, move slider 8 hours. Model card, select 3compartment model first drop menu. second drop menu, select since want use silico generated parameters. Finally, enter 3 final box Model card since want run simulation three days. Therefore, final interface Model Specifications tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"compound-selection-tab-1","dir":"Articles","previous_headings":"Example 2","what":"Compound Selection Tab","title":"Concentration-Time Profile Simulation Examples","text":"first try search compounds desire simulate keeping first drop menu Preloaded Compounds card Choose available chemicals searching second drop menu. Typing chemical names CAS numbers shows three five desired chemicals (valproic acid, benzoic acid, ethanol) present preloaded compounds list two chemicals (titanium dioxide advantame). Therefore, select valproic acid, benzoic acid, ethanol Preloaded Compounds card upload remaining two compounds Uploaded Data card. get chemical information titanium dioxide advantame program, copy SampleCSV.csv file Uploaded Physical-Chemical File Folder Instructions card enter appropriate chemical information compound. See Introduction ToCS vignette information upload instructions. purpose example, use fictional chemical data upload following csv file clicking Browse Uploaded Data card.  csv file chemical information titanium dioxide advantame. Data chemical identifiers molecular weight (MW) fictional.  three compounds selected Preloaded Compounds card two compounds uploaded Uploaded Data card (csv file name CSV_CTPvignette.csv), proceed next tab. final Compound Selection tab look like image .","code":"#> Warning: package 'kableExtra' was built under R version 4.4.2"},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"advanced-optional-parameters-tab-1","dir":"Articles","previous_headings":"Example 2","what":"Advanced (Optional) Parameters Tab","title":"Concentration-Time Profile Simulation Examples","text":"Suppose want customize parameters just basic simulation information needed. example, let’s say want change starting amount compound gut lumen gut 10 umol instead 0 umol. , select Yes, enter initial amounts first drop menu Model Conditions card. Consequently, additional seven text boxes appear drop . Since want change amounts gut lumen gut, change first two text boxes 10 instead 0. changes want make, leave remaining selections proceed final tab, Run Simulation. completed advanced parameters page look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"run-simulation-tab-1","dir":"Articles","previous_headings":"Example 2","what":"Run Simulation Tab","title":"Concentration-Time Profile Simulation Examples","text":"Now ’ve filled simulation information correct compounds appear Selected Compounds card. Thus, click Run Simulation button Actions card. image completed simulation shown . first tab illustrates time course plots five compounds model compartment. user option download plot clicking Download Figure 1.   closing Multi-Curve Time Course Plot drop , view Individual Time-Course Plots drop see plots shown drop separate plots (one figure per compound). user can download individual plots clicking Download Individual Compound Plots button, plots download zip file.   final image shows user’s option download simulation results well simulation parameters used generate solution. fourth drop tab shows table simulation summary statistics compound model compartment. user option download table clicking Download Table 1.    Example 1, suggest user clicks Reset Session button Actions card user wishes run new simulation.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"example-3","dir":"Articles","previous_headings":"Example 2","what":"Example 3","title":"Concentration-Time Profile Simulation Examples","text":"Let’s say want run simulation outputs rat concentration-time profiles two days three compounds: Docusate sodium (CAS: 577-11-7), Phenol (CAS: 108-95-2), Potassium Benzoate (CAS: 582-25-2). simulation three oral exposures day, exposures happen hours 0, 6, 12 every day 1 mg/kg hours 0 6 0.2 mg/kg hour 12. use 1-compartment model include compounds silico generated parameters place missing vitro data. like output every hour simulation.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"general-parameters-tab-2","dir":"Articles","previous_headings":"Example 2 > Example 3","what":"General Parameters Tab","title":"Concentration-Time Profile Simulation Examples","text":"previous examples, select Concentration-time profiles desired output Output card. example 2, select Rat species first drop Species card. Now, suppose okay substituting human vitro data compounds missing rat vitro data, select Yes second drop menu Species card. first tab now look like page .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"model-specifications-tab-2","dir":"Articles","previous_headings":"Example 2 > Example 3","what":"Model Specifications Tab","title":"Concentration-Time Profile Simulation Examples","text":"Dosing card, keep first two drop downs default values. third drop , select Multiple Doses since want give three doses per day. , since doses want give evenly distributed throughout day, select resulting fourth drop menu. Finally, fifth box appears enter dosing regime. enter times (days) want administer compounds first, list amount compound dosing time directly . Since want administer compounds hours 0, 6, 12 day two days, first part list enter 0, 0.25, 0.5, 1, 1.25, 1.5. , second part list comprised dosing amounts, 1 mg/kg first two doses day 0.2 mg/kg last dose day, enter 1, 1, 0.2, 1, 1, 0.2 second part list. Model card, select 1compartment first drop menu. second drop menu, select Yes since want include compounds silico generated parameters (hepatic clearance, fraction unbound) compound list. Finally, enter 2 last box Model card since want run simulation two days. completed Model Specification card appear image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"compound-selection-tab-2","dir":"Articles","previous_headings":"Example 2 > Example 3","what":"Compound Selection Tab","title":"Concentration-Time Profile Simulation Examples","text":"loading silico generated parameters ToCS, Preloaded Compounds card take moments load. , keep first drop menu Preloaded Compounds card Choose available chemicals selection type compound names CAS numbers compound second search bar, can select three compounds. completed Compound Selection tab look like image .   Note General Parameters tab selected using human vitro data place missing rat vitro data, docusate sodium potassium benzoate available simulation since rat vitro data.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"advanced-optional-parameters-tab-2","dir":"Articles","previous_headings":"Example 2 > Example 3","what":"Advanced (Optional) Parameters Tab","title":"Concentration-Time Profile Simulation Examples","text":"Since want output solution every hour, add list output times (days) textbox Output Specification card right page. time separated comma, can enter times either whole numbers, decimals, fractions. Since customizations want make, completed Advanced Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Concentration-Time_Profiles.html","id":"run-simulation-tab-2","dir":"Articles","previous_headings":"Example 2 > Example 3","what":"Run Simulation Tab","title":"Concentration-Time Profile Simulation Examples","text":"Now previous tabs completed three compounds want simulate shown Selected Compounds card, hit Run Simulation Actions card. simulation complete, show image . shows three simulated compounds overlaying model compartment solution plotted times specified previous tab (every hour). user option download figure clicking Download Figure 1 button top drop menu.   , see results individual time course plots drop menu. user option download indvidual plots zip file clicking Download Individual Time Course Plots button.   two final tabs shown image give user options download outputted simulation data, simulation parameters, toxicokinetic summary including Tmax, Cmax, AUC data compound within model compartment.   previous examples, suggest user clicks Reset Session button Actions card user wishes run new simulation.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Introduction_to_ToCS.html","id":"app-description-and-purpose","dir":"Articles","previous_headings":"","what":"App Description and Purpose","title":"Introduction to the ToCS App","text":"ToCS designed easy use computational tool generates toxicokinetic information based little chemical data user-selected compounds. app built using U.S. EPA’s high-throughput toxicokinetics (httk) R package (https://cran.r-project.org/web/packages/httk/index.html), provides format run many package’s main functions without need know R. interface offers vast majority input parameter customizations can made httk functions, users ToCS can either provide basic simulation information needed deep dive customization model parameters. GUIs utilize httk created (Integrated Chemical Environment (ICE), https://ice.ntp.niehs.nih.gov/), unique Calculates area curve (AUC) time maximum concentration model compartments Offers computation analytical steady state concentrations oral equivalent doses (OEDs) model tissue compartments, just plasma Predicts bioactivity exposure ratio (BER) plots OEDs exposure estimates given user-uploaded chemical exposure data, can used prioritize chemicals risk assessment Provides estimates TK parameters including half-lives also total plasma clearances, volumes distribution, elimination rates, partition coefficients Estimates number days takes compounds reach plasma steady state Allows customization simulations beyond basic model parameters Utilizes recent httk version (2.5.0) Allows non-uniform chemical exposure (dosing), can beneficial users interested food chemicals Offers simulations dog, rabbit, mouse species addition human rats Includes option include silico-generated parameters within httk vitro hepatic clearance, fraction unbound plasma, /caco-2 membrane permeability missing Offers option convert nominal bioactive concentration free concentration vitro IVIVE simulations (recommended) Allows user declare desired quantile predicted OEDs view generated OED samples subset food-related compounds (direct indirect food additives) users can easily view select app’s interface 5 main tabs, user toggles left right filling information tab moving next one. final tab allows user submit parameters app app outputs plots, tables, download features input. , walk interface features tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Introduction_to_ToCS.html","id":"general-parameters-tab","dir":"Articles","previous_headings":"","what":"General Parameters Tab","title":"Introduction to the ToCS App","text":"General Parameters tab (shown image ) acts home page GUI. Instructions card reminds user app’s basic workflow, access vignettes (GUI examples), report bugs. Output card user select main output GUI one four output modules: Generates ADME time course data, plots concentration curves time, provides summary statistics time maximal concentration (Tmax), maximal concentration (Cmax), area curve (AUC) model compartments across chemical Produces table plot analytical steady state concentration desired concentration tissue selected compounds well table estimating time (days) takes reach steady state behavior compounds Generates table plot OEDs (external dose needed produce internal bioactive concentration) simulated chemicals. user uploads chemical exposure data, table bioactivity exposure ratios (BERs) plot BERs produced suggest chemical prioritization risk assessment. Additionally, exposure estimates plotted OED estimate distribution Calculates tables plots TK parameters including half-life, total plasma clearance, elimination rate, volume distribution, tissue unbound plasma partition coefficients selected chemicals. module selected determines available user selections remaining tabs well layout output Run Simulation tab. moving Model Specifications tab, user must specify species wish simulate (choosing human, rat, mouse, rabbit, dog). user chooses non-human species, another drop appear Species card users select whether want substitute human vitro data selected animal’s vitro data available (though animal’s physiology still used). user made selections drop downs page, proceed Model Specifications tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Introduction_to_ToCS.html","id":"model-specifications-tab","dir":"Articles","previous_headings":"","what":"Model Specifications Tab","title":"Introduction to the ToCS App","text":"tab (shown image ) different selections depending output chosen General Parameters tab. However, Dosing Model cards always present. Dosing card specifies dosing scenario user’s simulation, applicable. Model card user select basic model specifications needed run model. five different models first drop Model card may appear: steady state plasma model describing rest body compartment 3compartment model resulting iv dosing empirical plasma model following compartments: gut lumen main absorption compartment condensed version pbtk model following compartments: gut lumen, gut, liver, rest body physiologically based model following compartments: gut lumen, gut, liver, lung, kidney, arterial venous blood, rest body extension pbtk model include adipose, thyroid, placenta compartments well entire fetus model rest body compartment collective term lumping remaining body tissues together. depth look model, user review httk documentation (https://cran.r-project.org/web/packages/httk/index.html) related publication (https://www.jstatsoft.org/article/view/v079i04). Also always appearing Model card option user include silico generated parameters (hepatic clearance, fraction unbound plasma, caco-2 permeability) compounds missing vitro data. available silico parameters come Sipes2017, Pradeep2020, Dawson2021, Honda2023 data sets httk. user can find information origin methods datasets reviewing httk documentation. user selects Yes drop , increased number compounds become available simulate. silico parameters override vitro parameters. selections made tab, move Compound Selection tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Introduction_to_ToCS.html","id":"compound-selection-tab","dir":"Articles","previous_headings":"","what":"Compound Selection Tab","title":"Introduction to the ToCS App","text":"layout tab (shown image ) primarily looks modules allows user select compounds want simulate upload additional data appropriate simulation selected. least one compound MUST selected. Preloaded Compounds card contains two drop lists: first specifying types compounds user wants able select (either available compounds food relevant compounds ), second list chemicals (dependent first drop selection) already present httk enough data run desired simulations. user need upload data simulate compounds appear list. drop list displayed format “CASRN, Compound Name”, user can search list using either chemical identifier (though searching CASRN recommended since compounds can multiple names). select compound, just click drop list. Multiple compounds may selected. Note portion compound list initially visible scrolling due size list, application check entire list user searches chemical identifier.   Uploaded Data card, users may upload chemicals available drop menu Preloaded Compounds card clicking Browse button selecting CSV file. Users follow directions Instructions card download Uploaded Physical-Chemical File Folder. folder contains four files. Users review files, beginning Instructions.pdf, successfully upload new chemicals. main file, SampleCSV.csv, contains exact file format user needs upload new chemicals. Columns csv file must exact names exact order. strongly recommended users copy SampleCSV file new spreadsheet replace sample chemical information chemical information. See sample csv file .  sample csv file upload GUI simulate chemicals already available preloaded list.  columns csv file must contain data, following columns MUST data uploaded chemicals matter output module run: Compound (compound name, chemical identifier) CAS (Chemical abstracts service registry number (CASRN), chemical identifier) DTXSID (DSSTox substance identifier, chemical identifier) logP (log10 octanol:water partition coefficient, log10 unitless fraction) MW (molecular weight, g/mol) Clint (intrinsic hepatic clearance, uL/min/10^6 hepatocytes) Funbound.plasma (fraction unbound presence plasma proteins, unitless fraction) information can found RequiredData.pdf file Uploaded Physical-Chemical File Folder. definitions columns SampleCSV.csv file can found DataDescriptions.pdf folder. user either selected compounds Preloaded Compounds card uploaded compounds Uploaded Data card (), may proceed Advanced (Optional) Parameters tab skip Run Simulation tab. Let’s say example going simulate chemicals SampleCSV.csv, omit upload Compound Selection tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Introduction_to_ToCS.html","id":"advanced-optional-parameters-tab","dir":"Articles","previous_headings":"","what":"Advanced (Optional) Parameters Tab","title":"Introduction to the ToCS App","text":"Users may customize available drop downs, sliders, text boxes tab may skip customizing options entirely app keep options default values. options available page different depending output module chosen, layout always include Model Conditions, Model Solver, Bioavailability Output Specification cards. user customize desired selections proceed Run Simulation tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Introduction_to_ToCS.html","id":"run-simulation-tab","dir":"Articles","previous_headings":"","what":"Run Simulation Tab","title":"Introduction to the ToCS App","text":"final tab one user gets view output simulation. sample initial view tab user runs simulation. user see selected chemicals Selected Compounds card. chemicals missing, return Compound Selection tab select missing chemicals. newly selected chemicals now appear Run Simulation tab. user ready run simulation, press Run Simulation button Actions tab. Depending module chosen number chemicals selected, results may take seconds generate. appear, populate Results card. example, first drop labeled Multi-Curve Time Course Plot, shown image , automatically opened user can view result simulation finished.   remaining drop downs automatically closed. user can open close drop using arrow side drop . particular example, four main outputs (drop downs) result simulation. Results card look different depending output module originally selected, drop menu offer download button user download output. Also Run Simulation tab Reset Session button Actions card. highly recommended click Reset Session button user wants adapt input selections run new simulation. help user avoid errors.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Introduction_to_ToCS.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"Introduction to the ToCS App","text":"vignettes provided intended user guides run GUI. strongly recommended consult running simulation. remaining vignette works several examples output module. view vignettes prior ToCS available CRAN using online application, visit GitHub page (github.com/KristenWindoloski/ToCS/tree/main/vignettes) click PDF vignette files. ToCS package available CRAN, type R console view vignettes R RStudio visit ToCS CRAN page. user runs error, either gray red text appear Compound Selection Run Simulation tabs. gray error text appears, user typically forgotten enter selection click button, user follow instructions error statement. red error text appears, user report error ToCS GitHub page (https://github.com/KristenWindoloski/ToCS/issues).","code":"vignette(package = \"ToCS\")"},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"IVIVE Simulation Examples","text":"vignette provides three examples use ToCS app generate oral equivalent doses (OEDs) vitro vivo extrapolation (IVIVE), example different parameters selected. Two three examples also incorporate chemical exposure data generate bioactivity exposure ratios chemical prioritization. begin, open app using methods described README file. correctly accessed app screen looks like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"example-1","dir":"Articles","previous_headings":"Introduction","what":"Example 1","title":"IVIVE Simulation Examples","text":"Let’s say want perform IVIVE eight chemicals bioactivity data . Since IVIVE produces OED bioactive concentration, assume want transform nominal bioactivity data free concentration vitro. solution outputted, want 5th dose quantile human plasma OED calculated pbtk model. Assume also chemical exposure estimates eight chemicals.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"general-parameters-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"General Parameters Tab","title":"IVIVE Simulation Examples","text":"Since want perform IVIVE, select vitro vivo extrapolation (IVIVE) option drop menu Output card. Species card, select Human first drop . Thus, completed General Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"model-specifications-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Model Specifications Tab","title":"IVIVE Simulation Examples","text":"Dosing card, see user specifications made module. However, several user choices made Model card. Since want use pbtk model IVIVE, select pbtk first drop . second drop select decide make compounds silico generated parameters available example. , third drop menu asks user whether want return single OED per compound (selected quantile) OED samples per compound. Since want 5th OED quantile (95th steady state concentration quantile), select return specified dose quantile (default). prompts appearance additional numeric input box want enter desired steady state concentration quantile. Since want 95th steady state concentration quantile (5th OED quantile), leave input 0.95. Thus, completed Model Specifications tab look like two images .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"compound-selection-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Compound Selection Tab","title":"IVIVE Simulation Examples","text":"Different modules vignettes, first drop menu Preloaded Compounds card user select set assumptions implement regarding vitro vivo bioactivity well metabolic clearance. user can select following options: Default assumptions applied (listed ) customizable Advanced Parameters tab Restrictive metabolic clearance (protein binding taken account liver clearance) Treats total specified concentration tissue bioactive vivo Treats nominal concentration vitro bioactive Restrictive metabolic clearance (protein binding taken account liver clearance) Treats unbound (free) venous plasma concentration vivo bioactive Treats unbound (free) concentration vitro bioactive Restrictive metabolic clearance (protein binding taken account liver clearance) Treats unbound (free) venous plasma concentration vivo bioactive Treats nominal concentration vitro bioactive Restrictive metabolic clearance (protein binding taken account liver clearance) Treats total venous plasma concentration vivo bioactive Treats nominal concentration vitro bioactive Non-restrictive metabolic clearance (protein binding taken account liver clearance) Treats total specified tissue concentration vivo bioactive Treats nominal concentration vitro bioactive details, see EPA’s httk documentation /following publication https://doi.org/10.1371/journal.pone.0217564. Since want use unbound (free) concentration vitro bioactive instead nominal concentration, select Honda1 assumption first drop menu. keep second drop menu Preloaded Compounds card Choose available chemicals. , box asks user specify fraction fetal bovine serum. apply assumption 0.1 bioactivity assays desired compounds leave box 0.1. Another box also appears contains list preloaded compounds can select . search eight compounds like simulate see present preloaded list. Thus, select compounds. Uploaded Data card right interface, three datasets can uploaded. first one need upload physical-chemical data compounds want simulate available preloaded compounds list. However, need upload anything compounds wanted already available. second spot upload file required IVIVE simulations. , must upload CSV file bioactive concentrations (uM units) compound selected simulate. Therefore, upload following csv table. Note table must following exact format.  csv file bioactivity data eight chemicals. values calculated 5th percentile AC50s (active calls ) compound, list AC50s taken cHTS assay database ICE.  third spot upload CSV file chemical exposure estimates, optional. Uploading data allow user visualize exposure estimates model-outputted OEDs well generate bioactivity exposure ratios, can guide chemical prioritization potential risk. Suppose following exposure data file:  csv file exposure data (mg/kg BW/day) eight chemicals. exposure estimates gathered EPA CompTox Dashboard. NHANES estimates used available. Otherwise, EPA’s SEEM3 model predictions used.  help exposure file formatting, please refer Introduction ToCS vignette /Exposure Data File Folder left-side Instructions card interface. Following selection compounds simulate well uploading bioactivity exposure data files, completed Compound Selection page look like image .","code":"#> Warning: package 'kableExtra' was built under R version 4.4.2"},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"advanced-optional-parameters-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Advanced (Optional) Parameters Tab","title":"IVIVE Simulation Examples","text":"leave options tab default values proceed final Run Simulation tab. Advanced Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"run-simulation-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Run Simulation Tab","title":"IVIVE Simulation Examples","text":"Now user parameter selections made compounds appear Select Compounds card, click Run Simulation button. simulation complete, user’s interface look like image . first tab shows table OED compound. table available download user user clicks Download Table 1 button. user also able download simulation parameters chemical information used simulation clicking Download OED Simulation Parameters tab.   image completed OED plot tab, shows OED (blue) selected quantile compound plotted ascending order. plot also shows exposure data estimates (pink) uploaded exposure data file next respective chemical users can compare oral equivalent dose needed bioactivity exposure estimate. plot shown uses linear y-axis, can see, makes challenging visually see difference smaller OEDs well distribution exposure estimates.   Therefore, can click box Actions card change scale y-axis log10 scale. results image shown , allows user view differences magnitudes OEDs exposure estimates. Two chemicals three exposure estimates available (lower, median, upper), clearly seen median pink dot bars extending directions, remaining chemicals two exposure estimates uploaded (median upper). chemicals show pink dot represents median exposure one bar reaches upper exposure limit. user can download either linear log10 scale plot clicking Download Figure 1 button.   image shows bioactivity exposure ratio (BER) table output calculated OEDs uploaded exposure estimates. computed OED divided upper exposure estimate. Table 1, users can download table clicking “Download Table 2” button.   final output IVIVE module given shows plot BER chemical. red dotted line plot indicates threshold chemical prioritization (BER = 1), chemicals fall threshold prioritized assessment. simulation though, BERs greater one. previous plot, user opportunity download plot clicking “Download Figure 2” button plot.   wanted run another simulation, click Reset Session button Actions button, clear parameter inputs simulations return interface General Parameters tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"example-2","dir":"Articles","previous_headings":"Introduction","what":"Example 2","title":"IVIVE Simulation Examples","text":"Let’s say want perform human IVIVE ten chemicals bioactivity data . Assume want use nominal plasma vitro bioactivity data bioactive concentration instead free concentration vitro, want use restrictive clearance. solution outputted, suppose want view generated plasma OED samples calculated 3compartmentss model. Also suppose chemical exposure estimates ten chemicals like use analysis.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"general-parameters-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"General Parameters Tab","title":"IVIVE Simulation Examples","text":"Since want perform IVIVE, select vitro vivo extrapolation (IVIVE) option drop menu Output card. Species card, select Human first drop . Thus, completed General Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"model-specifications-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Model Specifications Tab","title":"IVIVE Simulation Examples","text":"Dosing card, options select . Model card, select 3compartmentss first drop . second drop , select Yes decide make compounds silico generated parameters (hepatic clearance, fraction unbound plasma) also available example. , third drop menu asks user whether want return single OED per compound (selected quantile) OED samples per compound. Since want output generated OED samples, select Return OED samples (also return 5th dose quantile). Thus, completed Model Specifications tab look like two images .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"compound-selection-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Compound Selection Tab","title":"IVIVE Simulation Examples","text":"first example, first drop menu Preloaded Compounds card user select set simulations assumptions implement. See example 1 descriptions assumptions. Since want use nominal concentration vitro bioactive restrictive clearance (protein binding taking account liver clearance), select NULL first drop menu (note also selected Honda3 result). keep second drop menu Preloaded Compounds card Choose available chemicals box contains list preloaded compounds can select . search ten compounds want simulate see present preloaded list. Thus, select compounds. Uploaded Data card, ignore first file selection option since compounds simulate found preloaded compounds list. second file selection option, required upload CSV file bioactivity data selected compound. Therefore, upload following csv table. csv file must exact format table .  csv file bioactivity data ten chemicals. values calculated 5th percentile AC50s (active calls ) compound, list AC50s taken cHTS assay database ICE. Abamectin AC50s, one entered fill data set.  formatting instructions, please either download Bioactivity Data File Folder left side page consult Introduction ToCS vignette. final file upload option Uploaded Data card provides user opportunity upload chemical exposure data. Thus, upload following CSV file:  csv file exposure estimate data (mg/kg BW/day) ten chemicals. exposure estimates gathered EPA CompTox Dashboard. NHANES estimates used available. Otherwise, EPA’s SEEM3 SEEM2 model predictions used.  details format file, please review Introduction ToCS vignette /Exposure Data File Folder upload area interface. completed Compound Selection tab look like images .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"advanced-optional-parameters-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Advanced (Optional) Parameters Tab","title":"IVIVE Simulation Examples","text":"speed computation time program, let’s change number Monte Carlo samples generated compound (Model Conditions card) 1000 500. Also, since want output plasma OED, keep second drop menu plasma. Thus, completed Advanced Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"run-simulation-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Run Simulation Tab","title":"IVIVE Simulation Examples","text":"Now user parameter selections made compounds appear Select Compounds card, click Run Simulation button. simulation complete, user’s interface look like image . first tab shows table generated OEDs compound (based different steady state concentrations obtained Monte Carlo simulations). first row table contains 5th quantile plasma OED, rows indicate sample number corresponding plasma OED sample. user can view various pages samples clicking Next button bottom table. table available download user user clicks Download Table 1 button. user also able download simulation parameters chemical information used simulation clicking Download OED Simulation Parameters tab.   image completed OED plot tab, shows boxplots describing distribution OED samples simulated compound line ranges exposure estimate distributions (purple) next chemical (though look like singular points due linear y-axis). black dots outlying samples, large red dots represent 5th quantile OED OED table previous drop tab. plot shown uses linear y-axis, can see, makes challenging visually see distribution OED samples exposure estimates.   Therefore, can click box Actions card change scale y-axis log10 scale. results image shown , allows user clearly view compare OED sample distributions exposure estimates compounds. description exposure estimates example 1. user can download either linear log10 scale plot clicking Download Figure 1 button.   table shows calculated bioactivity exposure ratios (BERs) chemicals included simulation exposure data. BER calculated quotient 5th quantile OED (red dot OED plot) upper exposure estimate data point. Users can download table clicking Download Table 2 button table.   image shows final output IVIVE module plot bioactivity exposure ratio (BER) chemical. can see plot, BERs simulation >> 1 (visually seen dotted red line), considered risk current data used simulation. Users can download plot clicking Download Figure 2 button plot.   wanted run another simulation, click Reset Session button Actions button, clear parameter inputs simulations return interface General Parameters tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"example-3","dir":"Articles","previous_headings":"Introduction","what":"Example 3","title":"IVIVE Simulation Examples","text":"Let’s say want perform human IVIVE obtain 10th quantile liver OEDs using 3compartment model. use nominal bioactivity data eight compounds used example 1, want include restrictive clearance model. upload chemical exposure data example.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"general-parameters-tab-2","dir":"Articles","previous_headings":"Introduction > Example 3","what":"General Parameters Tab","title":"IVIVE Simulation Examples","text":"Since want perform IVIVE, select vitro vivo extrapolation (IVIVE) option drop menu Output card. Species card, select Human first drop . Thus, completed General Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"model-specifications-tab-2","dir":"Articles","previous_headings":"Introduction > Example 3","what":"Model Specifications Tab","title":"IVIVE Simulation Examples","text":"Dosing card, options select . Model card, select 3compartment first drop . second drop , select decide make compounds vitro data available example. , third drop menu asks user whether want return single OED per compound (selected quantile) OED samples per compound. Since want output 10th quantile OED, select return specified dose quantile (default). results appearance another input box. final box Model card, enter steady state concentration quantile desire use OED calculation (0.90). return 10th quantile OED simulation results. Thus, completed Model Specifications tab look like two images .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"compound-selection-tab-2","dir":"Articles","previous_headings":"Introduction > Example 3","what":"Compound Selection Tab","title":"IVIVE Simulation Examples","text":"first example, first drop menu Preloaded Compounds card user select set simulations assumptions implement. See example 1 descriptions assumptions. example 2, select NULL first drop menu since wanted use 1) nominal vitro concentration bioactive, 2) restrictive clearance, 3) liver tissue bioactive vivo. keep second drop menu Preloaded Compounds card Choose available chemicals box , ’s list preloaded compounds can select . search eight compounds want select see present preloaded list. Thus, select compounds. Uploaded Data card, ignore first file upload option since compounds want simulate available preloaded list middle column. second file upload bioactivity data required, upload following csv table bioactive concentrations compounds:  csv file bioactivity data eight chemicals. values calculated 5th percentile AC50s (active calls ) compound, list AC50s taken cHTS assay database ICE.  formatting instructions, please either download Bioactivity Data File Folder left side page consult Introduction ToCS vignette. final file upload option Uploaded Data card provides user opportunity upload chemical exposure data. However, suppose chemical exposure data upload simulation. Therefore, leave blank. completed Compound Selection tab look like images .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"advanced-optional-parameters-tab-2","dir":"Articles","previous_headings":"Introduction > Example 3","what":"Advanced (Optional) Parameters Tab","title":"IVIVE Simulation Examples","text":"Since want output OED liver, select tissue second drop menu Output Specification card specifying output concentration type. prompts appearance third drop menu. select liver menu since want liver OED. changes parameters page made example. Thus, completed Advanced Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/IVIVE.html","id":"run-simulation-tab-2","dir":"Articles","previous_headings":"Introduction > Example 3","what":"Run Simulation Tab","title":"IVIVE Simulation Examples","text":"Now user parameter selections made compounds appear Select Compounds card, click Run Simulation button. simulation complete, user’s interface look like image . first tab shows table OED compound. table available download user user clicks Download Table 1 button. user also able download simulation parameters chemical information used simulation clicking Download OED Simulation Parameters tab.   image completed OED plot tab, shows plot 10th quantile OEDs using liver steady state concentration OED calculation. plot shown uses linear y-axis, can see, makes challenging visually notice magnitude smaller OEDs.   Therefore, can click box Actions card change scale y-axis log10 scale. results image shown , allows user view differences magnitudes OEDs. user can download either linear log10 scale plot clicking Download Figure 1 button.   final two tabs IVIVE module exhibit bioactivity exposure ratio (BER), applicable simulation. Since chemical exposure data uploaded Advanced Parameters tab, BERs calculated simulation. user wanted calculate BERs simulation, need upload chemical exposure previous tab.   wanted run another simulation, click Reset Session button Actions button, clear parameter inputs simulations return interface General Parameters tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Parameter Calculations Examples","text":"vignette provides two examples use ToCS app generate steady state concentrations, example different parameters selected. begin, open app using methods described README file. correctly accessed app screen looks like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"example-1","dir":"Articles","previous_headings":"Introduction","what":"Example 1","title":"Parameter Calculations Examples","text":"Let’s say want calculate human TK parameters nine sample chemicals: Acephate (CAS: 30560-19-1) Advantame (CAS: 714229-20-6) Caffeine (CAS: 58-08-2) Carboxin (CAS: 5234-68-4) Phenol (CAS: 108-95-2) Picloram (CAS: 1918-02-1) Pirinixic acid (CAS: 50892-23-4) Titanium dioxide (CAS: 13463-67-7) Triadimenol (CAS: 55219-65-3) without using httk’s preloaded silico parameters hepatic clearance, fraction unbound plasma, caco-2 permeability.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"general-parameters-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"General Parameters Tab","title":"Parameter Calculations Examples","text":"Since want calculate human TK parameters, select Parameter calculations first drop menu Output card Human first drop Species card. completed General Parameters tab look like image . user now move Model Specifications tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"model-specifications-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Model Specifications Tab","title":"Parameter Calculations Examples","text":"shown image , user selections Dosing card. Model card, omit first drop menu leave None models described Introduction ToCS vignette used calculate parameters. Finally, select second drop menu Model card since want program simulate chemicals silico generated parameters. completed tab look like image , user can proceed next tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"compound-selection-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Compound Selection Tab","title":"Parameter Calculations Examples","text":"keep first drop menu Preloaded Compounds card Choose available chemicals second drop , search either compound name CAS nine compounds. two compounds (advantame titanium dioxide) available, select seven available compounds Preloaded Compounds tab. Thus, upload chemical data advantame titanium dioxide. , copy SampleCSV file Uploaded Compound File Folder Instructions card enter appropriate chemical information compound, shown table . See Introduction ToCS vignette information upload instructions. purpose example, use fake chemical data upload following csv file (CSV_PCvignette.csv) clicking Browse Uploaded Data card.  csv file chemical information advantame titanium dioxide. Data chemical identifiers molecular weight (MW) fictional.  Now simulation chemicals uploaded, final Compound Selection tab look like image .","code":"#> Warning: package 'kableExtra' was built under R version 4.4.2"},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"advanced-optional-parameters-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Advanced (Optional) Parameters Tab","title":"Parameter Calculations Examples","text":"Advanced Parameters tab much bare modules, since going customize additional parameters example, leave inputs . Advanced Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"run-simulation-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Run Simulation Tab","title":"Parameter Calculations Examples","text":"Now user selections made desired simulation compounds appear Selected Compounds card, hit Run Simulation button Actions card. page prior simulation completion look like image , five drop downs results appear Results card.   simulation complete, users see group four plots appear Parameter Plots tab Results card. plots show compound’s elimination rate (1/h, top left), volume distribution (L/kg BW, top right), half life (h, bottom left), total plasma clearance (L/h/kg BW, bottom right). users option download figure using Download Figure 1 button. user’s interface look like image .   wanted view plots tab using log10 y-axis, check bottom box Actions card, user see plots image shown makes clearer distinguish parameter values smaller magnitudes.   next drop tab, table parameter values previous tab. user option download table clicking Download Table 1 button. drop tab look like image .   third drop tab, user see 13 plots, one per partition coefficient. compilation plots available download clicking Download Figure 2 button top tab. user’s plots look like image .   Now first drop tab, user can change scale y-axis partition coefficient plots log10 y-axis scale order easier distinguish smaller magnitudes. user can download partition coefficient plot clicking Download Figure 2 button. log10 y-axis scale plots look like image .   fourth drop tab table partition coefficients plots previous tab. Users can download table partition coefficients clicking Download Table 2 button. user’s table look like image .   fifth final tab offers user option download user parameter selection chemical information used generate simulation. user can download information clicking Download Simulation Parameters button. user’s screen look like image .   vignettes, suggest user clicks Reset Session button want run another simulation.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"example-2","dir":"Articles","previous_headings":"Introduction","what":"Example 2","title":"Parameter Calculations Examples","text":"example, let’s say want calculate rat TK parameters five unknown sample chemicals, allow chemicals included selection enough data inclusion silico parameters. also customize several advanced parameters within example.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"general-parameters-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"General Parameters Tab","title":"Parameter Calculations Examples","text":"previous example, select Parameter calculations first drop menu Output card. However, example, select Rat first drop Species card. , suppose want use rat vitro data instead allowing human data substitute missing vitro rat data, select second drop Species card. completed General Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"model-specifications-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Model Specifications Tab","title":"Parameter Calculations Examples","text":"selections page example 1. first drop menu Model card remains , second drop menu, select include chemical options silico generated parameters place vitro data. Model Specifications tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"compound-selection-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Compound Selection Tab","title":"Parameter Calculations Examples","text":"keep first drop menu Preloaded Compounds card Choose available chemicals select five compounds drop menu Preloaded Compounds card simulate: Bisphenol-(CAS: 80-05-7) Butylparaben (CAS: 94-26-8) Norethindrone (CAS: 68-22-4) Propylparaben (CAS: 94-13-3) Zoxamide (CAS: 156052-68-5) , since additional compounds want simulate, advance next tab. completed Compound Selection page look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"advanced-parameters-tab","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Advanced Parameters Tab","title":"Parameter Calculations Examples","text":"example, decide change default values advanced parameters Model Conditions card. First, suppose want lower p-value threshold vitro intrinsic hepatic clearance rate. Thus, set first box 0.01 instead 0.05. , fourth drop box, suppose want include protein binding accounting liver clearance. Therefore, select , include protein binding. finally, suppose want adjust fraction unbound presence plasma proteins lipid binding. Therefore, select , adjust fraction unbound plasma. completed Advanced Parameters tab look like two images .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Parameter_Calculations.html","id":"run-simulation-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Run Simulation Tab","title":"Parameter Calculations Examples","text":"Now user selections made compounds appear Selected Compounds card, can hit Run Simulation button Actions card initiate simulation. image Run Simulation tab look like simulation complete. plots show compound’s elimination rate (1/h, top left), volume distribution (L/kg BW, top right), half life (h, bottom left), total plasma clearance (L/h/kg BW, bottom right). Users option download figure clicking Download Figure 1 button.   Since impossible tell volume distribution half life values four five compounds plot , change y-axis scale log10 y-axis clicking checkbox Actions tab. , plots look like image , allows user clearly see magnitude parameter predictions.   second drop menu shown image , parameter values plots shown previous tab stated table. Users can download table clicking Download Table 1 button top tab.   third drop menu Results card 13 partition coefficient plots one value per compound, shown image . Users can download plots clicking Download Figure 2 button top tab.   plots first results tab, users can transform scale y-axis log10 scale checking box Actions card. produce image shown give user better visual understanding partition coefficients compare one another.   fourth drop menu (shown image ), parameter values plots shown previous tab stated table. Users can download table clicking Download Table 1 button top tab.   final drop tab Results card gives user option download model parameters chemical information 5 chemicals.   previous example, suggest user clicks Reset Session button want run another simulation.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Steady State Concentration Simulation Examples","text":"vignette provides two examples use ToCS app generate steady state concentrations, example different parameters selected. begin, open app using methods described README file. correctly accessed app screen looks like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"example-1","dir":"Articles","previous_headings":"Introduction","what":"Example 1","title":"Steady State Concentration Simulation Examples","text":"example, let’s say want generate human steady state concentrations whole body plasma. want use constant daily dose 1 mg/kg BW PBTK model make compounds silico generated parameters (hepatic clearance, fraction unbound plasma) also available selection. specific chemicals mind, just select chemicals preloaded list chemicals.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"general-parameters-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"General Parameters Tab","title":"Steady State Concentration Simulation Examples","text":"Output card, select Steady state concentrations since type simulation want run. Species card, select Human first drop menu. completed General Parameters card shown image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"model-specifications-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Model Specifications Tab","title":"Steady State Concentration Simulation Examples","text":"Dosing card, leave total daily dose default value 1 mg/kg BW. Model card, select pbtk first drop use pbtk model. second drop , select Yes since want include compounds silico generated parameters selection availability next page. Thus, completed model specifications tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"compound-selection-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Compound Selection Tab","title":"Steady State Concentration Simulation Examples","text":"Since selected load silico generated parameters, Preloaded Compounds card take moments load. loaded, keep first drop menu Preloaded Compounds card Choose available chemicals search list select 10 compounds: Abamectin (CAS: 71751-41-2) Aldicarb (CAS: 116-06-3) Captan (CAS: 133-06-2) Fenarimol (CAS: 60168-88-9) Hexanedioic acid (CAS: 124-04-9) Isoborneol (CAS: 124-76-5) Pyrene (CAS: 129-00-0) Sodium Cyclamate (CAS: 139-05-9) Thiabendazole (CAS: 148-79-8) Tribufos (CAS: 78-48-8) leave Uploaded Data card , completed Compound Selection tab look like image . Note selected previous Model Specifications tab using silico generated parameters captan, hexanedioic acid, isoborneol, sodium cyclamate available simulation Preloaded Compounds card (.e. compounds use silico generated parameters instead human vitro data).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"advanced-optional-parameters-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Advanced (Optional) Parameters Tab","title":"Steady State Concentration Simulation Examples","text":"Since want output steady state concentrations whole body plasma, leave selections Output Specification card default values. also leave remaining three cards default values proceed final tab. Advanced Parameters tab look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"run-simulation-tab","dir":"Articles","previous_headings":"Introduction > Example 1","what":"Run Simulation Tab","title":"Steady State Concentration Simulation Examples","text":"Now ’ve completed selections compounds selected appear Selected Compounds card, hit Run Simulation button Actions card shown image . simulation take moments complete.   image shows Run Simulation tab look like simulation finished. first drop bar Results card shows single plot analytical steady state concentration selected compound ascending order linear y-axis. Users option download steady state concentration plot clicking Download Figure 1 button top plot.   user wants see steady state concentrations plot log10 y-axis, user can check box bottom Actions tab shown blue image . , plot first drop transform y-axis log10 scale. user select plotting view vast difference magnitudes steady state concentrations across compounds challenging visualize smaller concentrations.   second drop tab contains table numerical values steady state concentrations plotted previous tab. table available download user clicks Download Table 1 button top tab. user also able download simulation parameters used generate steady state concentrations clicking Download Simulation Parameters button.   final drop tab Results card contains table steady state characteristics compounds. simulation generates table determines number days (CssDay) takes compound come within certain percentage analytical steady state value table tab , average concentration last day simulation (AvgConc), ratio average concentration analytical steady state concentration (RatioAvgAnalytical), maximal concentration simulation (MaxConc). user can download table clicking Download Table 2 button top tab. table look like image .   user wanted run new simulation, suggest clicking Reset Session button Actions card, reset parameter values return user starting interface.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"example-2","dir":"Articles","previous_headings":"Introduction","what":"Example 2","title":"Steady State Concentration Simulation Examples","text":"example, let’s say want generate human steady state blood concentrations liver constant daily dose 2 mg/kg BW using 1compartment model without silico generated parameters hepatic clearance, fraction unbound plasma, caco-2 permeability. Suppose want generate concentrations following compounds: Valproic Acid (CAS: 99-66-1), Endosulfan (CAS: 115-29-7), Abamectin (CAS: 71751-41-2), Titanium Dioxide (CAS: 13463-67-7), Advantame (CAS: 714229-20-6).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"general-parameters-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"General Parameters Tab","title":"Steady State Concentration Simulation Examples","text":"select parameters drop downs General Parameters tab Example 1, shown . Now, user can continue Model Specifications tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"model-specifications-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Model Specifications Tab","title":"Steady State Concentration Simulation Examples","text":"Dosing card, enter 2 text box 2 mg/kg BW dose. Model card, select 1compartment simulation model first drop menu. second drop , select since want include compounds use silico parameters place missing vitro parameters. completed Model Specifications card look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"compound-selection-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Compound Selection Tab","title":"Steady State Concentration Simulation Examples","text":"keep first drop menu Preloaded Compounds card Choose available chemicals second drop menu, search five compounds three (valproic acid, endosulfan, abamectin) available. remaining two, titanium dioxide advantame, uploaded Uploaded Compounds card. Therefore, upload chemical information titanium dioxide advantame copying SampleCSV file Uploaded Compound File Folder Instructions card entering appropriate chemical information compound. See Introduction ToCS vignette information upload instructions. purpose example, use fake chemical data upload following csv file clicking Browse Uploaded Compounds card.  csv file chemical information titanium dioxide advantame. Data chemical identifiers molecular weight (MW) fictional.  three compounds selected Preloaded Compounds card two compounds uploaded Uploaded Compounds card (csv file name CSV_SSvignette.csv), proceed next tab. final Compound Selection tab look like image .","code":"#> Warning: package 'kableExtra' was built under R version 4.4.2"},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"advanced-optional-parameters-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Advanced (Optional) Parameters Tab","title":"Steady State Concentration Simulation Examples","text":"Since want steady state blood concentrations liver, customize second third drop menus Output Specification cards blood liver, respectively. customizations want make page, final Advanced Parameters page look like image .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/articles/Steady_State_Concentrations.html","id":"run-simulation-tab-1","dir":"Articles","previous_headings":"Introduction > Example 2","what":"Run Simulation Tab","title":"Steady State Concentration Simulation Examples","text":"Now user selections made selected compounds appear Selected Compounds card, ready run simulation. , hit Run Simulation button simulation complete, results look like image . plot shows steady state concentration five selected compounds user option download figure clicking Download Figure 1 button.   Now, given outputted plot doesn’t provide much visual information since four five compound steady state concentrations significantly smaller largest one, alter figure checking bottom box Actions card, change y-axis log10 scale shown image . new plot provides much clearer visual steady state concentration value compounds. Note log10 scale checkbox can checked user hits Run Simulation button well.   second drop tab Results card shows table steady state concentrations plotted first tab, seen image . user option download table clicking Download Table 1 button directly tab. concentrations shown ascending order.   final tab Results card shows steady state characteristics compound, seen image . description columns table explained Example 1 figure caption. table can downloaded user user clicks Download Table 2 button.   previous example, suggest user clicks Reset Session button want run another simulation.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kristen Leonard. Author, maintainer.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leonard K (2025). ToCS: Toxicokinetic Chemical Simulator. R package version 0.0.0.9000, https://kristenwindoloski.github.io/ToCS/, https://github.com/KristenWindoloski/ToCS.","code":"@Manual{,   title = {ToCS: Toxicokinetic Chemical Simulator},   author = {Kristen Leonard},   year = {2025},   note = {R package version 0.0.0.9000, https://kristenwindoloski.github.io/ToCS/},   url = {https://github.com/KristenWindoloski/ToCS}, }"},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Toxicokinetic Chemical Simulator","text":"ToCS -development R package web application serves graphical user interface (GUI) high-throughput simulation chemical toxicokinetics (TK) vitro vivo extrapolation (IVIVE). GUI builds upon EPA’s httk R package (https://cran.r-project.org/web/packages/httk/index.html, https://www.jstatsoft.org/article/view/v079i04), utilizes general mathematical models make high-throughput toxicokinetic predictions chemicals little available data. GUI easy--use computational toxicology tool predict: Generates ADME time course data, plots concentration curves time, provides summary statistics time maximal concentration (Tmax), maximal concentration (Cmax), area curve (AUC) model compartments across chemical Produces table plot analytical steady state concentration desired concentration tissue selected compounds well table estimating time (days) takes reach steady state behavior compounds Generates table plot OEDs (oral equivalent dose, external dose needed produce internal bioactive concentration) simulated chemicals. exposure data provided user, GUI also plot exposure data OEDs well calculate bioactivity exposure ratio, can used prioritize chemicals risk evaluation Calculates tables plots TK parameters including half-life, total plasma clearance, elimination rate, volume distribution, partition coefficients selected chemicals without need know R programming. GUIs created use httk (Integrated Chemical Environment (ICE), https://ice.ntp.niehs.nih.gov/) share similar outputs GUI, ToCS unique : Offers computation analytical steady state concentrations oral equivalent doses (OEDs) model tissue compartments, just plasma Offers chemical prioritization suggestions calculation bioactivity exposure ratio user uploads chemical exposure estimates Calculates area curve (AUC) time maximum concentration model compartments Provides estimates TK parameters including half-lives also total plasma clearances, volumes distribution, elimination rates, partition coefficients Estimates number days takes compounds reach plasma steady state Allows customization simulations beyond basic model parameters Utilizes recent httk version (2.4.0) Allows non-uniform chemical exposure (dosing), can beneficial users interested food chemicals Offers simulations dog, rabbit, mouse species addition human rats Includes option include silico-generated parameters within httk vitro hepatic clearance, fraction unbound plasma, /caco-2 membrane permeability missing Offers option convert nominal bioactive concentration free concentration vitro IVIVE simulations (recommended) Allows user declare desired quantile predicted OEDs view generated OED samples subset food-related compounds (direct indirect food additives) users can easily view select . ToCS toxicokinetics application can used scientists little modeling programming backgrounds, requires small amount user input generate basic simulations. desired, simulations can highly customizable Advanced Parameters tab ToCS.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Toxicokinetic Chemical Simulator","text":"several ways users can access ToCS GUI. user selects options 1) 3), user also need free statistical computing language, R, installed computer (https://www.r-project.org/). Although optional, users may also want install RStudio (https://posit.co/download/rstudio-desktop/) user-friendly programming environment R code. following ways user can access ToCS GUI: Go https://github.com/KristenWindoloski/ToCS click green Code button. user familar Git, can clone ToCS Git repository local computer. Otherwise, user click Download Zip. Wherever user saves folder, double click ToCS_main folder. Inside folder folder called ToCS-main. Move inner folder desired location (desktop, Documents, etc.). Open R RStudio. ToCS package uses 15 packages (listed DESCRIPTION file), need installed user’s local computer. install package X listed Depends Imports DESCRIPTION file, type following R command line (console) Open ToCS project folder clicking File -> Open Project. search ToCS-main folder extracted downloaded zip file. Select ToCS-main. opens ToCS project R. Next, load files project directory R pressing Ctrl+Shift+L typing following R command line (console) open GUI, type following R command line (console) Using online application (currently unavailable) Open R RStudio. Type following R command line: , type following R command line: three methods (available) result ToCS interface appearing. user successfully opens app, screen look like image .  opening interface ToCS app. interface, user fills drop downs, text boxes, selections five main tabs top GUI moving left right. user completed selections, run simulation receive results final tab, Run Simulation. section provides starting example users get familiar ToCS software. Additional examples major output module GUI can found ToCS vignettes (https://github.com/KristenWindoloski/ToCS/tree/main/vignettes).","code":"install.packages(\"X\") devtools::load_all(.) run_ToCS() install.packages(\"ToCS\") ToCS()"},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"concentration-time-profile-example","dir":"","previous_headings":"","what":"Concentration-Time Profile Example","title":"Toxicokinetic Chemical Simulator","text":"Let’s say want run simulation outputs human concentration-time profiles course one day four compounds: Abamectin (CAS: 71751-41-2), Bisphenol-(CAS: 80-05-7), Cyanazine (CAS: 21725-46-2), Dimethoate (CAS: 60-51-5). simulation single 5 mg/kg oral exposure compound use PBTK model without including silico generated parameters place vitro data (hepatic clearance, fraction unbound plasma, caco-2 permeability).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"general-parameters-tab","dir":"","previous_headings":"Concentration-Time Profile Example","what":"General Parameters Tab","title":"Toxicokinetic Chemical Simulator","text":"Since main output want concentration-time profiles, select Concentration-time profiles drop menu Output card. Species card, select Human species. Thus, first tab look like page .  completed opening interface ToCS app.  Now, move Model Specifications tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"model-specifications-tab","dir":"","previous_headings":"Concentration-Time Profile Example","what":"Model Specifications Tab","title":"Toxicokinetic Chemical Simulator","text":"Dosing card, leave first two drop menus default values. dosing frequency, select Single Dose drop menu. prompts appearance textbox can input number mg/kg administered. change value 5 since want single 5 mg/kg exposure. Model card, select pbtk pbtk model first drop menu. Since want use silico generated parameters simulation, select second drop menu Model card. Finally, since want run simulation one day, edit bottom box Model card 1 instead default value 10. Now Model Specifications tab completed look like image , can proceed Compound Selection tab.  completed model specifications tab pbtk model single oral dose 5 mg/kg.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"compound-selection-tab","dir":"","previous_headings":"Concentration-Time Profile Example","what":"Compound Selection Tab","title":"Toxicokinetic Chemical Simulator","text":"Since want simulate four compounds (abamectin, bisphenol-, cyanazine, dimethoate), try searching drop menu Preloaded Compounds card see program able simulate chemicals current data httk. see available compounds, click empty box center column. can see already drop menu image Abamectin available, click compound. Remember user can search compound either CAS number chemical name.  compound selection tab’s list available preloaded compounds based previous user selections.  either scrolling typing textbox, see names three compounds also available, select . Since compounds need available, need upload CSV file chemical data Uploaded Data card leave untouched. , final Compound Selection tab look like image proceed next tab.  completed compound selection card example 1.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"advanced-optional-parameters-tab","dir":"","previous_headings":"Concentration-Time Profile Example","what":"Advanced (Optional) Parameters Tab","title":"Toxicokinetic Chemical Simulator","text":"simplicity example, leave selections inputs tab alone proceed next final tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"run-simulation-tab","dir":"","previous_headings":"Concentration-Time Profile Example","what":"Run Simulation Tab","title":"Toxicokinetic Chemical Simulator","text":"input selections complete correct compounds appear Selected Compounds card, shown image . Therefore, hit Run Simulation button Actions card ToCS can compute solution. output appear Results window complete. Depending number compounds selected simulate, results may take several seconds populate.  run simulations tab appearance “Run Simulation” button Actions card clicked.  image shows first drop Results card simulation complete. user sees complete time course curves four chemicals model compartments overlaying . legend figure located bottom right corner, figure description describing y-axis subplot located figure. user also option download figure clicking Download Figure 1.  multi-curve plot output download option example 1.  second drop Results card, seen , shows user plots seen first drop tab compound separate plot. user option download individual plots zip file. figure caption also located last plot tab.  individual plots output download option example 1.  third drop Results card allows user download time course simulation data used generate plots two drop downs . user can also download inputted simulation parameters well chemical data used simulations. interface two download buttons shown .  simulation data download feature example 1.  Opening bottom drop Results card shows toxicokinetic summary including Tmax (time maximal concentration), Cmax (maximal concentration), AUC (area curve) simulated compounds within model compartment. table available download user clicks Download Table 1.  toxicokinetic (TK) summary drop table example 1.  user wanted run another simulation, recommended click Reset Session button Actions card, clear parameter inputs simulations return interface General Parameters tab.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/index.html","id":"getting-help","dir":"","previous_headings":"Concentration-Time Profile Example","what":"Getting Help","title":"Toxicokinetic Chemical Simulator","text":"vignettes provided intended user guides run GUI. strongly recommended consult running simulation. remaining vignette works several examples output module. view vignettes prior ToCS available CRAN using online application, visit GitHub page (https://github.com/KristenWindoloski/ToCS/tree/main/vignettes) click PDF vignette files. ToCS package available CRAN, type R console view vignettes R RStudio visit ToCS CRAN page. user runs error, either gray red text appear Compound Selection Run Simulation tabs. gray error text appears, user typically forgotten enter selection click button, user follow instructions error statement. red error text appears, user report error ToCS GitHub page (https://github.com/KristenWindoloski/ToCS/issues).","code":"vignette(package = \"ToCS\")"},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://kristenwindoloski.github.io/ToCS/reference/addrule_adme_ics.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a validation rule to an ADME module initial condition input identifier — addrule_adme_ics","title":"Add a validation rule to an ADME module initial condition input identifier — addrule_adme_ics","text":"function checks identifier inputted user. , error message returned.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/addrule_adme_ics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a validation rule to an ADME module initial condition input identifier — addrule_adme_ics","text":"","code":"addrule_adme_ics(iv_adme, identifier)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/addrule_adme_ics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a validation rule to an ADME module initial condition input identifier — addrule_adme_ics","text":"iv_adme ADME shinyvalidate input validator object identifier vector initial condition names","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/addrule_adme_ics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a validation rule to an ADME module initial condition input identifier — addrule_adme_ics","text":"ADME shinyvalidate input validator object new rule input initial condition box required (.e. left blank)","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/adme_ic_errormess.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an error message for an ADME initial condition input identifier and pause the application from computing — adme_ic_errormess","title":"Add an error message for an ADME initial condition input identifier and pause the application from computing — adme_ic_errormess","text":"function checks initial condition boxes concentration-time profile module left blank. , computation halted user fixes error.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/adme_ic_errormess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an error message for an ADME initial condition input identifier and pause the application from computing — adme_ic_errormess","text":"","code":"adme_ic_errormess(identifier, pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/adme_ic_errormess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an error message for an ADME initial condition input identifier and pause the application from computing — adme_ic_errormess","text":"identifier name initial condition compartment pars() list pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/adme_ic_errormess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an error message for an ADME initial condition input identifier and pause the application from computing — adme_ic_errormess","text":"empty message user parameter NA","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the concentration-time profile individual plots — ADME_IndPlt_server","title":"Server function for the concentration-time profile individual plots — ADME_IndPlt_server","text":"function generates outputs defined ADME_IndPlt_ui() function. connects download button, plot text, plot, plot caption elements fill spaces.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the concentration-time profile individual plots — ADME_IndPlt_server","text":"","code":"ADME_IndPlt_server(id, adme_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the concentration-time profile individual plots — ADME_IndPlt_server","text":"id Shiny identifier name; must id used ADME_IndPlt_ui() adme_args Shiny reactive list output modsol() shiny parameters pars()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the concentration-time profile individual plots — ADME_IndPlt_server","text":"Server outputs concentration-time profile individual plots drop includes four elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the concentration-time profile individual plots — ADME_IndPlt_ui","title":"User interface function for the concentration-time profile individual plots — ADME_IndPlt_ui","text":"function outputs user interface concentration-time profile individual plots drop results card 'Run Simulation' tab. interface four outputs: plot download button, plotting text (applicable), plots, plotting caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the concentration-time profile individual plots — ADME_IndPlt_ui","text":"","code":"ADME_IndPlt_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the concentration-time profile individual plots — ADME_IndPlt_ui","text":"id Shiny identifier name; must id used ADME_IndPlt_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_IndPlt_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the concentration-time profile individual plots — ADME_IndPlt_ui","text":"User interface individual plots drop four elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the concentration-time profile multi-plot output — ADME_MultPlt_server","title":"Server function for the concentration-time profile multi-plot output — ADME_MultPlt_server","text":"function generates outputs defined ADME_MultPlt_ui() function. connects download button, plot, plot caption elements fill spaces.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the concentration-time profile multi-plot output — ADME_MultPlt_server","text":"","code":"ADME_MultPlt_server(id, adme_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the concentration-time profile multi-plot output — ADME_MultPlt_server","text":"id Shiny identifier name; must id used ADME_MultPlt_ui() adme_args Shiny reactive list output modsol() shiny parameters pars()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the concentration-time profile multi-plot output — ADME_MultPlt_server","text":"Server outputs concentration-time profile multi-plot drop includes three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the concentration-time profile multi-plot output — ADME_MultPlt_ui","title":"User interface function for the concentration-time profile multi-plot output — ADME_MultPlt_ui","text":"function outputs user interface concentration-time profile multi-plot drop results card 'Run Simulation' tab. interface three outputs: download plot button, plot, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the concentration-time profile multi-plot output — ADME_MultPlt_ui","text":"","code":"ADME_MultPlt_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the concentration-time profile multi-plot output — ADME_MultPlt_ui","text":"id Shiny identifier name; must id used ADME_MultPlt_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_MultPlt_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the concentration-time profile multi-plot output — ADME_MultPlt_ui","text":"User interface multi-plot drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Main server function to set up the 'Results' card under the concentration-time profile module's 'Run Simulation' tab — ADME_server","title":"Main server function to set up the 'Results' card under the concentration-time profile module's 'Run Simulation' tab — ADME_server","text":"#' @description function calculates concentration-time profile's solution outputs contents UI objects concentration-time profiles' 'Results' card 'Run Simulation' tab. contents UI object (drop ) filled four separate server modules.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main server function to set up the 'Results' card under the concentration-time profile module's 'Run Simulation' tab — ADME_server","text":"","code":"ADME_server(id, pars, runsim)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main server function to set up the 'Results' card under the concentration-time profile module's 'Run Simulation' tab — ADME_server","text":"id Shiny identifier name; must id used ADME_ui() pars list user input parameters entire app runsim Action button titled 'Run Simulation' pressed user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main server function to set up the 'Results' card under the concentration-time profile module's 'Run Simulation' tab — ADME_server","text":"four server outputs fill main concentration-time profile user interface function consisting two plots, two download buttons, one table concentration-time profile results","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the concentration-time profile data download — ADME_TCData_server","title":"Server function for the concentration-time profile data download — ADME_TCData_server","text":"function generates outputs defined ADME_TCData_ui() function. connects two download buttons data download.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the concentration-time profile data download — ADME_TCData_server","text":"","code":"ADME_TCData_server(id, adme_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the concentration-time profile data download — ADME_TCData_server","text":"id Shiny identifier name; must id used ADME_TCData_ui() adme_args Shiny reactive list output modsol() shiny parameters pars()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the concentration-time profile data download — ADME_TCData_server","text":"Server outputs concentration-time profile data download drop includes two elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the concentration-time profile data download — ADME_TCData_ui","title":"User interface function for the concentration-time profile data download — ADME_TCData_ui","text":"function outputs user interface concentration-time profile data download drop results card 'Run Simulation' tab. interface two outputs: download button concentration-time profile data download button simulation parameters.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the concentration-time profile data download — ADME_TCData_ui","text":"","code":"ADME_TCData_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the concentration-time profile data download — ADME_TCData_ui","text":"id Shiny identifier name; must id used ADME_TCData_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TCData_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the concentration-time profile data download — ADME_TCData_ui","text":"User interface data download drop two download buttons","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_server","title":"Server function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_server","text":"function generates outputs defined ADME_TKTable_ui() function. connects download button, data table, caption defined UI outputs fill spots.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_server","text":"","code":"ADME_TKTable_server(id, adme_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_server","text":"id Shiny identifier name; must id used ADME_TKTable_ui() adme_args Shiny reactive list output modsol() shiny parameters pars()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_server","text":"Server outputs concentration-time profile toxicokinetic summary drop includes three outputs","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_ui","title":"User interface function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_ui","text":"function outputs user interface concentration-time profile toxicokinetic table drop results card 'Run Simulation' tab. interface three outputs: download button download table, table toxicokinetic summary statistics, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_ui","text":"","code":"ADME_TKTable_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_ui","text":"id Shiny identifier name; must id used ADME_TKTable_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_TKTable_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the concentration-time profile toxicokinetic summary table output — ADME_TKTable_ui","text":"User interface toxicokinetic summary table drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Main user interface function to set up the 'Results' card under the concentration-time profiles module's 'Run Simulation' tab — ADME_ui","title":"Main user interface function to set up the 'Results' card under the concentration-time profiles module's 'Run Simulation' tab — ADME_ui","text":"#' @description function outputs structure user interface concentration- time profile 'Results' card 'Run Simulation' tab. Four drop tabs appear: single plot compound concentrations model compartments, multiple plots one plot per compound, download option users download time course data simulation parameters, table toxicokinetic summary statistics (Cmax, Tmax, AUC). user interface contents drop filled separate UI module.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main user interface function to set up the 'Results' card under the concentration-time profiles module's 'Run Simulation' tab — ADME_ui","text":"","code":"ADME_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main user interface function to set up the 'Results' card under the concentration-time profiles module's 'Run Simulation' tab — ADME_ui","text":"id Shiny identifier name; must id used ADME_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ADME_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main user interface function to set up the 'Results' card under the concentration-time profiles module's 'Run Simulation' tab — ADME_ui","text":"Four user interface drop tabs identifying space two plots, two download buttons, one table concentration-time profile results.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/app_server.html","id":null,"dir":"Reference","previous_headings":"","what":"App server function — app_server","title":"App server function — app_server","text":"function top-level server function ToCS application dictates outputs displayed app_ui function. Calls server functions stem function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/app_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App server function — app_server","text":"","code":"app_server(input, output, session)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/app_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"App server function — app_server","text":"input Input objects user interface output Output objects server session Session identifier","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/app_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App server function — app_server","text":"Various server outputs","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/app_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"App ui function — app_ui","title":"App ui function — app_ui","text":"function top-level ui function ToCS application dictates outputs app_server function displayed. Calls ui functions stem function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/app_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App ui function — app_ui","text":"","code":"app_ui()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/app_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"App ui function — app_ui","text":"User interface","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_Bioavailability.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Bioavailability' card on the 'Advanced Parameters' tab — AP_Bioavailability","title":"User interface for the 'Bioavailability' card on the 'Advanced Parameters' tab — AP_Bioavailability","text":"function outputs user interface 'Bioavailability' card 'Advanced Parameters' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_Bioavailability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Bioavailability' card on the 'Advanced Parameters' tab — AP_Bioavailability","text":"","code":"AP_Bioavailability()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_Bioavailability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Bioavailability' card on the 'Advanced Parameters' tab — AP_Bioavailability","text":"'Bioavailability' card offers users option customize five bioavailability parameters, unless parameter calculations module function chosen","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_ModelConditions.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Model Conditions' card on the 'Advanced Parameters' tab — AP_ModelConditions","title":"User interface for the 'Model Conditions' card on the 'Advanced Parameters' tab — AP_ModelConditions","text":"function outputs user interface 'Model Conditions' card 'Advanced Parameters' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_ModelConditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Model Conditions' card on the 'Advanced Parameters' tab — AP_ModelConditions","text":"","code":"AP_ModelConditions(ic_names, ic_comps)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_ModelConditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface for the 'Model Conditions' card on the 'Advanced Parameters' tab — AP_ModelConditions","text":"ic_names vector compartment identifier name used httk ic_comps vector written compartment name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_ModelConditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Model Conditions' card on the 'Advanced Parameters' tab — AP_ModelConditions","text":"'Model Conditions' card allows user select various different model conditions depending upon module function chosen","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_ModelSolver.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Model Solver' card on the 'Advanced Parameters' tab — AP_ModelSolver","title":"User interface for the 'Model Solver' card on the 'Advanced Parameters' tab — AP_ModelSolver","text":"function outputs user interface 'Model Solver' card 'Advanced Parameters' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_ModelSolver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Model Solver' card on the 'Advanced Parameters' tab — AP_ModelSolver","text":"","code":"AP_ModelSolver()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_ModelSolver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Model Solver' card on the 'Advanced Parameters' tab — AP_ModelSolver","text":"'Model Solver' card allows user options select various solver conditions concentration-time profiles module function chosen","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_OutputSpecification.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Output Specification' card on the 'Advanced Parameters' tab — AP_OutputSpecification","title":"User interface for the 'Output Specification' card on the 'Advanced Parameters' tab — AP_OutputSpecification","text":"function outputs user interface 'Output Specification' card 'Advanced Parameters' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_OutputSpecification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Output Specification' card on the 'Advanced Parameters' tab — AP_OutputSpecification","text":"","code":"AP_OutputSpecification()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AP_OutputSpecification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Output Specification' card on the 'Advanced Parameters' tab — AP_OutputSpecification","text":"'Output Specification' card offers users different selection options regarding output different module functions chosen","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AssignArrayNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign dimension names to the model solution and toxicokinetic (TK) summary arrays — AssignArrayNames","title":"Assign dimension names to the model solution and toxicokinetic (TK) summary arrays — AssignArrayNames","text":"function names rows, columns, pages model solution TK summary arrays","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AssignArrayNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign dimension names to the model solution and toxicokinetic (TK) summary arrays — AssignArrayNames","text":"","code":"AssignArrayNames(sol, modsol, tk_sum_array, pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AssignArrayNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign dimension names to the model solution and toxicokinetic (TK) summary arrays — AssignArrayNames","text":"sol solution array compounds; page array matrix concentration-time solution solve_model particular compound modsol matrix resulting solve_model, rows represent time step columns represent model compartment tk_sum_array array TK summary data page array represents TK summary particular compound rows representing model compartment columns Tmax, Cmax, AUC pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/AssignArrayNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign dimension names to the model solution and toxicokinetic (TK) summary arrays — AssignArrayNames","text":"list two arrays, model solution array TK summary array","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BERplotting.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the bioactivity exposure ratio (BER) for all simulated chemicals — BERplotting","title":"Plot the bioactivity exposure ratio (BER) for all simulated chemicals — BERplotting","text":"function plots bioactivity exposure ratios (BERs) list chemicals. compounds arranged ascending order plotted using ggplot2. red line also plotted BER = 1, indicating threshold compounds red line prioritized assessment.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BERplotting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the bioactivity exposure ratio (BER) for all simulated chemicals — BERplotting","text":"","code":"BERplotting(BERdata)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BERplotting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the bioactivity exposure ratio (BER) for all simulated chemicals — BERplotting","text":"BERdata data frame chemical names BER values","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BERplotting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the bioactivity exposure ratio (BER) for all simulated chemicals — BERplotting","text":"ggplot plotting object BERs plotted red line indicating chemical prioritization cutoff","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the BER plot — BER_Plot_server","title":"Server function for the BER plot — BER_Plot_server","text":"function generates outputs defined IVIVE_Table_ui() function. connects download buttons plot download, generates plot content, creates text plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the BER plot — BER_Plot_server","text":"","code":"BER_Plot_server(id, ivive_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the BER plot — BER_Plot_server","text":"id Shiny identifier name; must id used BER_Plot_ui() ivive_args Shiny reactive list output IVIVEsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the BER plot — BER_Plot_server","text":"Server outputs BER plot drop includes three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the BER plot — BER_Plot_ui","title":"User interface function for the BER plot — BER_Plot_ui","text":"function outputs user interface BER plot drop results card 'Run Simulation' tab. interface three outputs: plot download button, plot BER values, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the BER plot — BER_Plot_ui","text":"","code":"BER_Plot_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the BER plot — BER_Plot_ui","text":"id Shiny identifier name; must id used BER_Plot_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Plot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the BER plot — BER_Plot_ui","text":"User interface BER plot drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the IVIVE dose table — BER_Table_server","title":"Server function for the IVIVE dose table — BER_Table_server","text":"#' @description function generates outputs defined BER_Table_ui() function. connects download buttons table download, fills data table content, creates text table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the IVIVE dose table — BER_Table_server","text":"","code":"BER_Table_server(id, ivive_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the IVIVE dose table — BER_Table_server","text":"id Shiny identifier name; must id used BER_Table_ui() ivive_args Shiny reactive list output IVIVEsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the IVIVE dose table — BER_Table_server","text":"Server outputs BER table drop includes three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the BER table — BER_Table_ui","title":"User interface function for the BER table — BER_Table_ui","text":"#' @description function outputs user interface BER table drop results card 'Run Simulation' tab. interface three outputs: table download button, table calculated BERs, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the BER table — BER_Table_ui","text":"","code":"BER_Table_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the BER table — BER_Table_ui","text":"id Shiny identifier name; must id used BER_Table_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BER_Table_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the BER table — BER_Table_ui","text":"User interface BER table drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Bind_Chem_Data.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine simulation parameters and chemical-physical compound data data frames — Bind_Chem_Data","title":"Combine simulation parameters and chemical-physical compound data data frames — Bind_Chem_Data","text":"function adds columns chemical-physical compound data (found chem.physical_and_invitro.data data frame httk R package) simulated compounds simulation parameters data frame. Thus, row outputted data frame shows simulation parameters chemical data used simulate single compound ToCS.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Bind_Chem_Data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine simulation parameters and chemical-physical compound data data frames — Bind_Chem_Data","text":"","code":"Bind_Chem_Data(pars, pars_df)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Bind_Chem_Data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine simulation parameters and chemical-physical compound data data frames — Bind_Chem_Data","text":"pars list user input parameters entire app pars_df data frame simulation parameters generated StorePars_ADME() function, row represents one compound.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Bind_Chem_Data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine simulation parameters and chemical-physical compound data data frames — Bind_Chem_Data","text":"data frame relevant simulation parameters chosen user physical-chemical data used simulated compounds","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BioUpload_Check.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the uploaded bioactivity file have the correct formatting and data type as well as no missing data? — BioUpload_Check","title":"Does the uploaded bioactivity file have the correct formatting and data type as well as no missing data? — BioUpload_Check","text":"function checks whether uploaded file bioactivity data correct format, contains missing data, correct type data. , error message displayed user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BioUpload_Check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the uploaded bioactivity file have the correct formatting and data type as well as no missing data? — BioUpload_Check","text":"","code":"BioUpload_Check(value, input)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BioUpload_Check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the uploaded bioactivity file have the correct formatting and data type as well as no missing data? — BioUpload_Check","text":"value Shiny input ID corresponding input object input reactive inputs associated session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/BioUpload_Check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the uploaded bioactivity file have the correct formatting and data type as well as no missing data? — BioUpload_Check","text":"uploaded bioactivity file missing data incorrect formatting, function returns message detailing problem. aspects bioactivity file appropriate, message outputted.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcAnalyticCss.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the analytical steady state concentration of a chemical — CalcAnalyticCss","title":"Calculate the analytical steady state concentration of a chemical — CalcAnalyticCss","text":"function calculates analytical steady state concentration individual compound using user-selected parameters. 'httk' function calc_analytic_css used generate output.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcAnalyticCss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the analytical steady state concentration of a chemical — CalcAnalyticCss","text":"","code":"CalcAnalyticCss(pars, i)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcAnalyticCss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the analytical steady state concentration of a chemical — CalcAnalyticCss","text":"pars list user input parameters entire app Chemical index simulated chemicals list","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcAnalyticCss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the analytical steady state concentration of a chemical — CalcAnalyticCss","text":"numerical value representing analytical steady state concentration specified units","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcClearance.html","id":null,"dir":"Reference","previous_headings":"","what":"This function calculates the total plasma clearance of a chemical — CalcClearance","title":"This function calculates the total plasma clearance of a chemical — CalcClearance","text":"#' @description function calculates total plasma clearance compound using 'httk' package's 'calc_total_clearance' function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcClearance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function calculates the total plasma clearance of a chemical — CalcClearance","text":"","code":"CalcClearance(pars, i)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcClearance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function calculates the total plasma clearance of a chemical — CalcClearance","text":"pars list user input parameters entire app numerical value representing index number compound simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcClearance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function calculates the total plasma clearance of a chemical — CalcClearance","text":"numerical value, plasma total clearance compound ","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcCssDay.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the day steady state is reached — CalcCssDay","title":"Calculate the day steady state is reached — CalcCssDay","text":"function calculates days steady state individual compound well related steady state attributes using user-selected parameters. 'httk' function calc_css used generate output.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcCssDay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the day steady state is reached — CalcCssDay","text":"","code":"CalcCssDay(pars, i)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcCssDay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the day steady state is reached — CalcCssDay","text":"pars list user input parameters entire app Chemical index simulated chemicals list","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcCssDay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the day steady state is reached — CalcCssDay","text":"list composed average concentration end simulation, fraction true steady state reached steady state day, maximum concentration simulation, day steady state reached","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcElimRate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the elimination rate of a chemical — CalcElimRate","title":"Calculate the elimination rate of a chemical — CalcElimRate","text":"function calculates elimination rate compound using 'httk' package's 'calc_elimination_rate' function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcElimRate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the elimination rate of a chemical — CalcElimRate","text":"","code":"CalcElimRate(pars, i)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcElimRate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the elimination rate of a chemical — CalcElimRate","text":"pars list user input parameters entire app numerical value representing index number compound simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcElimRate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the elimination rate of a chemical — CalcElimRate","text":"numerical value, elimination rate compound ","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcHalfLife.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the half-life of a chemical — CalcHalfLife","title":"Calculate the half-life of a chemical — CalcHalfLife","text":"#' @description function calculates half-life compound using 'httk' package's 'calc_half_life' function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcHalfLife.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the half-life of a chemical — CalcHalfLife","text":"","code":"CalcHalfLife(pars, i)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcHalfLife.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the half-life of a chemical — CalcHalfLife","text":"pars list user input parameters entire app numerical value representing index number compound simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcHalfLife.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the half-life of a chemical — CalcHalfLife","text":"numerical value, half-life compound ","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcOED.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the oral equivalent dose (OED) of a chemical — CalcOED","title":"Calculate the oral equivalent dose (OED) of a chemical — CalcOED","text":"function calculates oral equivalent dose (OED) chemical given bioactive concentration. 'httk' package function 'calc_mc_oral_equiv\" used generate either single OED vector OEDs depending whether user wants specific quantile returned OED samples returned.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcOED.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the oral equivalent dose (OED) of a chemical — CalcOED","text":"","code":"CalcOED(i, pars, bioactive_df)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcOED.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the oral equivalent dose (OED) of a chemical — CalcOED","text":"Index indicating chemical list simulate pars list user input parameters entire app bioactive_df data frame chemical name, CAS number, bioactive concentration (uM units) chemical simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcOED.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the oral equivalent dose (OED) of a chemical — CalcOED","text":"numeric value vector values, depending parameter","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcPCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the partition coefficients of a chemical — CalcPCs","title":"Calculate the partition coefficients of a chemical — CalcPCs","text":"function calculates tissue unbound plasma partition coefficients given chemical. done using 'httk' package's 'predict_partitioning_schmitt' function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcPCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the partition coefficients of a chemical — CalcPCs","text":"","code":"CalcPCs(pars, i)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcPCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the partition coefficients of a chemical — CalcPCs","text":"pars list user input parameters entire app numerical value representing index number compound simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcPCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the partition coefficients of a chemical — CalcPCs","text":"list, consists partition coefficients compound ","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcVdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the volume of distribution of a chemical — CalcVdist","title":"Calculate the volume of distribution of a chemical — CalcVdist","text":"#' @description function calculates volume distribution compound using 'httk' package's 'calc_vdist' function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcVdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the volume of distribution of a chemical — CalcVdist","text":"","code":"CalcVdist(pars, i)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcVdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the volume of distribution of a chemical — CalcVdist","text":"pars list user input parameters entire app numerical value representing index number compound simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CalcVdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the volume of distribution of a chemical — CalcVdist","text":"numerical value, volume distribution compound ","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_False.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the oral equivalent dose and bioactivity exposure ratio when OED samples are not returned — Calc_OEDBER_RS_False","title":"Calculate the oral equivalent dose and bioactivity exposure ratio when OED samples are not returned — Calc_OEDBER_RS_False","text":"function calculates oral equivalent dose (OED) bioactivity exposure (BER) ratio user wants specific quantile OED returned. BER calculated using OED quantile selected user. exposure data uploaded user, BER calculated.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_False.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the oral equivalent dose and bioactivity exposure ratio when OED samples are not returned — Calc_OEDBER_RS_False","text":"","code":"Calc_OEDBER_RS_False(n, pars, bioactive_conc, exposuredata)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_False.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the oral equivalent dose and bioactivity exposure ratio when OED samples are not returned — Calc_OEDBER_RS_False","text":"n number compounds simulated pars list user input parameters entire app bioactive_conc data frame chemical names, CAS numbers, bioactive concentrations exposuredata data frame chemical names, CAS numbers, upper, median, lower exposure estimate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_False.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the oral equivalent dose and bioactivity exposure ratio when OED samples are not returned — Calc_OEDBER_RS_False","text":"list two elements: data frame oral equivalent doses data frame bioactivity exposure ratios","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_True.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the oral equivalent doses and bioactivity exposure ratio when OED samples are returned — Calc_OEDBER_RS_True","title":"Calculate the oral equivalent doses and bioactivity exposure ratio when OED samples are returned — Calc_OEDBER_RS_True","text":"function calculates array oral equivalent dose (OED) samples 5th quantile OED well data frame bioactivity exposure ratios (BERs). BER calculated using 5th quantile OED. exposure data uploaded user, bioactivity exposure ratios returned.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_True.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the oral equivalent doses and bioactivity exposure ratio when OED samples are returned — Calc_OEDBER_RS_True","text":"","code":"Calc_OEDBER_RS_True(n, pars, bioactive_conc, exposuredata)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_True.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the oral equivalent doses and bioactivity exposure ratio when OED samples are returned — Calc_OEDBER_RS_True","text":"n number compounds simulated pars list user input parameters entire app bioactive_conc data frame chemical names, CAS numbers, bioactive concentrations exposuredata data frame chemical names, CAS numbers, upper, median, lower exposure estimate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Calc_OEDBER_RS_True.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the oral equivalent doses and bioactivity exposure ratio when OED samples are returned — Calc_OEDBER_RS_True","text":"list two elements: array oral equivalent doses data frame bioactivity exposure ratios","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/caption_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the text for a figure/table caption — caption_text","title":"Create the text for a figure/table caption — caption_text","text":"function correct AUC output concentration go caption concentration-time profiles module plot table.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/caption_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the text for a figure/table caption — caption_text","text":"","code":"caption_text(func, model)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/caption_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the text for a figure/table caption — caption_text","text":"func User selection input$func ID; either \"Concentration-time profiles\", \"Steady state concentrations\", \"vitro vivo extrapolation (IVIVE)\", \"Parameter calculations\" model User selection input$model ID; either \"3compartmentss\", \"Schmitt\",\"1compartment\",\"3compartment\", \"pbtk\" \"fetal_pbtk\"","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/caption_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the text for a figure/table caption — caption_text","text":"string text describing returned concentration model.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/checkboxInput_Log.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a checkbox for the user to click if the user wants a log10 y-axis on their respective plots — checkboxInput_Log","title":"Generates a checkbox for the user to click if the user wants a log10 y-axis on their respective plots — checkboxInput_Log","text":"Generates checkbox user click user wants log10 y-axis respective plots","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/checkboxInput_Log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a checkbox for the user to click if the user wants a log10 y-axis on their respective plots — checkboxInput_Log","text":"","code":"checkboxInput_Log(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/checkboxInput_Log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a checkbox for the user to click if the user wants a log10 y-axis on their respective plots — checkboxInput_Log","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/checkboxInput_Log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a checkbox for the user to click if the user wants a log10 y-axis on their respective plots — checkboxInput_Log","text":"checkbox input","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/checkboxInput_Log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a checkbox for the user to click if the user wants a log10 y-axis on their respective plots — checkboxInput_Log","text":"","code":"checkboxInput_Log(\"logscale\") #> <div class=\"form-group shiny-input-container\"> #>   <div class=\"checkbox\"> #>     <label> #>       <input id=\"logscale\" type=\"checkbox\" class=\"shiny-input-checkbox\"/> #>       <span>Check the box to display plots with a log10 scale y-axis.<\/span> #>     <\/label> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompileCompLst.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a list of all chemicals to simulate — CompileCompLst","title":"Compile a list of all chemicals to simulate — CompileCompLst","text":"function creates data frame chemical names alphabetical order simulate. checks function's input parameters validity. , applicable, user's uploaded file chemical data uploaded merged preloaded chemicals selected user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompileCompLst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a list of all chemicals to simulate — CompileCompLst","text":"","code":"CompileCompLst(   func,   spec,   defaulthuman,   model,   insilico,   preloadcomps,   file,   honda )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompileCompLst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a list of all chemicals to simulate — CompileCompLst","text":"func User selection input$func ID; either \"Concentration-time profiles\", \"Steady state concentrations\", \"vitro vivo extrapolation (IVIVE)\", \"Parameter calculations\" spec User selection input$spec ID; either \"Dog\",\"Human\",\"Mouse\", \"Rabbit\",\"Rat\" defaulthuman User selection input$defaulttoHuman; either \"Yes\" using human vitro data place animal data \"\" using animal data model User selection input$model ID; either \"3compartmentss\", \"Schmitt\",\"1compartment\",\"3compartment\", \"pbtk\" \"fetal_pbtk\" insilico User selection input$insilicopars ID; either \"Yes, load silico parameters\" \", load silico parameters\" preloadcomps list preloaded compounds selected user form \"CASRN, compound name\" file file physical-chemical data uploaded user honda User selection input$HondaIVIVE ID; either \"NULL\",\"Honda1\", \"Honda2\",\"Honda3\",\"Honda4\"","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompileCompLst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a list of all chemicals to simulate — CompileCompLst","text":"data frame single column compound names alphabetical order","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompilePars.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse together the input ID name of a user selection — CompilePars","title":"Parse together the input ID name of a user selection — CompilePars","text":"Compile input ID name user-selected parameter","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompilePars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse together the input ID name of a user selection — CompilePars","text":"","code":"CompilePars(VarName, input)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompilePars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse together the input ID name of a user selection — CompilePars","text":"VarName name parameter input 'input' object used prefix ID's (entered 'input')","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompilePars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse together the input ID name of a user selection — CompilePars","text":"value given parameter","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompoundList.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a data frame of compound names to simulate (both compounds uploaded by the user and any preloaded httk compounds selected) — CompoundList","title":"Compile a data frame of compound names to simulate (both compounds uploaded by the user and any preloaded httk compounds selected) — CompoundList","text":"function compiles list chemical names user wants simulate. combines preloaded compounds selected user uploaded compounds user uploaded CSV file. Compounds arranged ascending order name.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompoundList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a data frame of compound names to simulate (both compounds uploaded by the user and any preloaded httk compounds selected) — CompoundList","text":"","code":"CompoundList(preload_comp, uploaded_comps)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompoundList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a data frame of compound names to simulate (both compounds uploaded by the user and any preloaded httk compounds selected) — CompoundList","text":"preload_comp vector selected compounds preloaded compounds drop list uploaded_comps CSV file uploaded user compounds physical-chemical data, compounds already available preloaded compounds drop list","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CompoundList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a data frame of compound names to simulate (both compounds uploaded by the user and any preloaded httk compounds selected) — CompoundList","text":"data frame names compounds user wants simulate","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ConvertBioactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a bioactive concentration from a nominal concentration to a free concentration in vitro — ConvertBioactive","title":"Convert a bioactive concentration from a nominal concentration to a free concentration in vitro — ConvertBioactive","text":"function converts nominal bioactive concentrations free concentration vitro, user selects 'Honda1' IVIVE assumption. chosen, assumption uses 'httk' package's 'armitage_eval' function perform conversion. 'Honda1' assumption chosen, original 'bioactive_df' data frame returned.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ConvertBioactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a bioactive concentration from a nominal concentration to a free concentration in vitro — ConvertBioactive","text":"","code":"ConvertBioactive(pars, bioactive_df)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ConvertBioactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a bioactive concentration from a nominal concentration to a free concentration in vitro — ConvertBioactive","text":"pars list user input parameters entire app bioactive_df data frame chemical name, CAS number, bioactive concentration (uM units) chemical simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ConvertBioactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a bioactive concentration from a nominal concentration to a free concentration in vitro — ConvertBioactive","text":"data frame chemical name, CAS number, bioactive concentration","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Individ_Subplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single concentration-time profile curve using ggplot2 — Create_Individ_Subplot","title":"Generate a single concentration-time profile curve using ggplot2 — Create_Individ_Subplot","text":"function generates ggplot plotting object displays concentration-time profile curve ith compound jth model compartment outputted httk's solve_model function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Individ_Subplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single concentration-time profile curve using ggplot2 — Create_Individ_Subplot","text":"","code":"Create_Individ_Subplot(i, j, comp_sol, compound_names, plt_colors, col_names)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Individ_Subplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single concentration-time profile curve using ggplot2 — Create_Individ_Subplot","text":"Index corresponding ith compound simulated j Index corresponding jth model compartment comp_sol data frame matrix solution concentration-time profiles compound ; format output 'httk' package's solve_model function compound_names vector compound names simulated order simulation plt_colors data frame colors entry hexadecimal RGB triplet one compound col_names vector outputted model compartments, columns comp_sol","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Individ_Subplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single concentration-time profile curve using ggplot2 — Create_Individ_Subplot","text":"ggplot2 plotting object concentration-time profile curve compartment j compound .","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Plotting_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat the ADME solution array for a specific compartment — Create_Plotting_df","title":"Reformat the ADME solution array for a specific compartment — Create_Plotting_df","text":"function rearranges concentration-time profile solution array (page represents compound, column model compartment, row time point) data frame three columns (time, yvalues, compound name) ith model compartment.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Plotting_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat the ADME solution array for a specific compartment — Create_Plotting_df","text":"","code":"Create_Plotting_df(i, n, sol_array, chemnames, numtimes)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Plotting_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat the ADME solution array for a specific compartment — Create_Plotting_df","text":"number representing index current model state plotted n number representing number compounds plotted sol_array array (row = time steps, column = model state, sheet = compound) model solution code chemnames vector containing names compounds simulated numtimes vector containing times solution evaluated","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Create_Plotting_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat the ADME solution array for a specific compartment — Create_Plotting_df","text":"data frame concentration-time profile data compartment contains three columns: time, yvalues, compound.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_Instructions.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Instructions' card on the 'Compound Selection' tab — CS_Instructions","title":"User interface for the 'Instructions' card on the 'Compound Selection' tab — CS_Instructions","text":"function outputs user interface 'Instructions' card 'Compound Selection' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_Instructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Instructions' card on the 'Compound Selection' tab — CS_Instructions","text":"","code":"CS_Instructions()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_Instructions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Instructions' card on the 'Compound Selection' tab — CS_Instructions","text":"'Instructions' card instructions selecting uploading compound data, including folders sample data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_PreloadedCompounds.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Preloaded Compounds' card on the 'Compound Selection' tab — CS_PreloadedCompounds","title":"User interface for the 'Preloaded Compounds' card on the 'Compound Selection' tab — CS_PreloadedCompounds","text":"function outputs user interface 'Preloaded Compounds' card 'Compound Selection' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_PreloadedCompounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Preloaded Compounds' card on the 'Compound Selection' tab — CS_PreloadedCompounds","text":"","code":"CS_PreloadedCompounds()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_PreloadedCompounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Preloaded Compounds' card on the 'Compound Selection' tab — CS_PreloadedCompounds","text":"'Preloaded Compounds' card allows user select desired chemicals simulate list well chemical-related simulation preferences","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_UploadedData.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Uploaded Data' card on the 'Compound Selection' tab — CS_UploadedData","title":"User interface for the 'Uploaded Data' card on the 'Compound Selection' tab — CS_UploadedData","text":"function outputs user interface 'UploadedData' card 'Compound Selection' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_UploadedData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Uploaded Data' card on the 'Compound Selection' tab — CS_UploadedData","text":"","code":"CS_UploadedData()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/CS_UploadedData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Uploaded Data' card on the 'Compound Selection' tab — CS_UploadedData","text":"'Uploaded Data' card gives user option upload file new chemicals data. IVIVE module chosen, users can also upload bioactivity exposure data.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DataInputType.html","id":null,"dir":"Reference","previous_headings":"","what":"Are the entries in the uploaded compound data file the correct kind of data? — DataInputType","title":"Are the entries in the uploaded compound data file the correct kind of data? — DataInputType","text":"function checks data types uploaded compounds file appropriate column data (.e. character, numeric, logical).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DataInputType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are the entries in the uploaded compound data file the correct kind of data? — DataInputType","text":"","code":"DataInputType(file, column_names)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DataInputType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are the entries in the uploaded compound data file the correct kind of data? — DataInputType","text":"file data frame compound physical-chemical data uploaded user column_names vector column names 'file' data frame","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DataInputType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are the entries in the uploaded compound data file the correct kind of data? — DataInputType","text":"data type 'file' appropriate data type column, function returns message detailing incorrect data type. data types appropriate 'file', message outputted.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DataTypeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a list of acceptable input data types for the compound file user upload — DataTypeList","title":"Generate a list of acceptable input data types for the compound file user upload — DataTypeList","text":"function produces list acceptable data types column data user's uploaded compound file.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DataTypeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a list of acceptable input data types for the compound file user upload — DataTypeList","text":"","code":"DataTypeList()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DataTypeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a list of acceptable input data types for the compound file user upload — DataTypeList","text":"list acceptable data types column 'httk' package's chem.physical_and_invitro.data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DosingPar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of dosing parameters — DosingPar","title":"Create a list of dosing parameters — DosingPar","text":"function creates list dosing parameters based user selections outputted list appropriate form pass httk's solve_model function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DosingPar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of dosing parameters — DosingPar","text":"","code":"DosingPar(   dosenum,   initdose,   multdose,   multdosetime,   multdoseamount,   multdoseodd )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DosingPar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of dosing parameters — DosingPar","text":"dosenum user's selection number doses administer, either \"Single dose\" \"Multiple doses\" initdose positive number; user's input amount initial dose administer multdose user's selection kind multiple dosing simulate, either \"Yes\" \"\" multdosetime positive number; user's slider selection often administer reoccurring doses multdoseamount positive number; user's selection amount dose give evenly spaced intervals multdoseodd list numbers; user's text input list times administer dose dose administer time","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/DosingPar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of dosing parameters — DosingPar","text":"list dosing information taken httk's solve_model function. list five entries: initial.dose, doses.per.day, daily.dose, dosing.matrix, forcings.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Dosing_Output.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn dosing parameters into a format that can be outputted by a list in the simulation parameters data frame — Dosing_Output","title":"Turn dosing parameters into a format that can be outputted by a list in the simulation parameters data frame — Dosing_Output","text":"function converts user-selected dosing parameters acceptably formatted list export user want download simulation parameters.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Dosing_Output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn dosing parameters into a format that can be outputted by a list in the simulation parameters data frame — Dosing_Output","text":"","code":"Dosing_Output(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Dosing_Output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn dosing parameters into a format that can be outputted by a list in the simulation parameters data frame — Dosing_Output","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Dosing_Output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn dosing parameters into a format that can be outputted by a list in the simulation parameters data frame — Dosing_Output","text":"list dosing parameters (initial.dose, doses.per.day, daily.dose, dosing.matrix)","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ExposureUpload_Check.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the uploaded exposure file have the correct formatting and data type as well as no missing required data? — ExposureUpload_Check","title":"Does the uploaded exposure file have the correct formatting and data type as well as no missing required data? — ExposureUpload_Check","text":"function checks whether uploaded file exposure data correct format, contains missing data, correct type data. , error message displayed user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ExposureUpload_Check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the uploaded exposure file have the correct formatting and data type as well as no missing required data? — ExposureUpload_Check","text":"","code":"ExposureUpload_Check(value, input)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ExposureUpload_Check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the uploaded exposure file have the correct formatting and data type as well as no missing required data? — ExposureUpload_Check","text":"value Shiny input ID corresponding input object input reactive inputs associated session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ExposureUpload_Check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the uploaded exposure file have the correct formatting and data type as well as no missing required data? — ExposureUpload_Check","text":"uploaded exposure file missing needed data incorrect formatting, function returns message detailing problem. aspects exposure file appropriate, message outputted.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fetal_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Was the human species selected when running the fetal_pbtk model? — fetal_cond","title":"Was the human species selected when running the fetal_pbtk model? — fetal_cond","text":"function tells user order run fetal_pbtk model, human species must chosen.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fetal_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Was the human species selected when running the fetal_pbtk model? — fetal_cond","text":"","code":"fetal_cond(   value,   input,   message = \"The 'Human' species must be selected to run the fetal_pbtk model\" )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fetal_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Was the human species selected when running the fetal_pbtk model? — fetal_cond","text":"value Shiny input ID corresponding input object input reactive inputs associated session message character string return user condition true","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fetal_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Was the human species selected when running the fetal_pbtk model? — fetal_cond","text":"condition FALSE, return message. condition TRUE, return nothing.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_BioactiveConc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a browser and file upload box for the user to upload a CSV file of bioactivity data for the selected compounds during the in vitro in vivo extrapolation (IVIVE) simulation — fileInput_BioactiveConc","title":"Generates a browser and file upload box for the user to upload a CSV file of bioactivity data for the selected compounds during the in vitro in vivo extrapolation (IVIVE) simulation — fileInput_BioactiveConc","text":"Generates browser file upload box user upload CSV file bioactivity data selected compounds vitro vivo extrapolation (IVIVE) simulation","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_BioactiveConc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a browser and file upload box for the user to upload a CSV file of bioactivity data for the selected compounds during the in vitro in vivo extrapolation (IVIVE) simulation — fileInput_BioactiveConc","text":"","code":"fileInput_BioactiveConc(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_BioactiveConc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a browser and file upload box for the user to upload a CSV file of bioactivity data for the selected compounds during the in vitro in vivo extrapolation (IVIVE) simulation — fileInput_BioactiveConc","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_BioactiveConc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a browser and file upload box for the user to upload a CSV file of bioactivity data for the selected compounds during the in vitro in vivo extrapolation (IVIVE) simulation — fileInput_BioactiveConc","text":"browser file upload box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_BioactiveConc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a browser and file upload box for the user to upload a CSV file of bioactivity data for the selected compounds during the in vitro in vivo extrapolation (IVIVE) simulation — fileInput_BioactiveConc","text":"","code":"fileInput_BioactiveConc(\"BioactiveFile\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"BioactiveFile-label\" for=\"BioactiveFile\">Upload a CSV file with in vitro bioactive concentrations (uM units) #>             for all selected compounds. Download the 'Bioactivity Data File Folder' #>             under the 'Instructions' card for file formatting instructions.<\/label> #>   <div class=\"input-group\"> #>     <label class=\"input-group-btn input-group-prepend\"> #>       <span class=\"btn btn-default btn-file\"> #>         Browse... #>         <input id=\"BioactiveFile\" class=\"shiny-input-file\" name=\"BioactiveFile\" type=\"file\" style=\"position: absolute !important; top: -99999px !important; left: -99999px !important;\" accept=\".csv\"/> #>       <\/span> #>     <\/label> #>     <input type=\"text\" class=\"form-control\" placeholder=\"No file selected\" readonly=\"readonly\"/> #>   <\/div> #>   <div id=\"BioactiveFile_progress\" class=\"progress active shiny-file-input-progress\"> #>     <div class=\"progress-bar\"><\/div> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_ExposureData.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a browse and upload box for users to upload a CSV file of exposure data for in vitro in vivo extrapolation (IVIVE) simulations — fileInput_ExposureData","title":"Generates a browse and upload box for users to upload a CSV file of exposure data for in vitro in vivo extrapolation (IVIVE) simulations — fileInput_ExposureData","text":"Generates browse upload box users upload CSV file exposure data vitro vivo extrapolation (IVIVE) simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_ExposureData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a browse and upload box for users to upload a CSV file of exposure data for in vitro in vivo extrapolation (IVIVE) simulations — fileInput_ExposureData","text":"","code":"fileInput_ExposureData(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_ExposureData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a browse and upload box for users to upload a CSV file of exposure data for in vitro in vivo extrapolation (IVIVE) simulations — fileInput_ExposureData","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_ExposureData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a browse and upload box for users to upload a CSV file of exposure data for in vitro in vivo extrapolation (IVIVE) simulations — fileInput_ExposureData","text":"browse file upload box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_ExposureData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a browse and upload box for users to upload a CSV file of exposure data for in vitro in vivo extrapolation (IVIVE) simulations — fileInput_ExposureData","text":"","code":"fileInput_ExposureData(\"fileExposure\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"fileExposure-label\" for=\"fileExposure\">Upload a CSV file of exposure data for all selected compounds (optional). #>                    Download the 'Exposure Data File Folder' under the 'Instructions' card #>                    for file formatting instructions.<\/label> #>   <div class=\"input-group\"> #>     <label class=\"input-group-btn input-group-prepend\"> #>       <span class=\"btn btn-default btn-file\"> #>         Browse... #>         <input id=\"fileExposure\" class=\"shiny-input-file\" name=\"fileExposure\" type=\"file\" style=\"position: absolute !important; top: -99999px !important; left: -99999px !important;\" accept=\".csv\"/> #>       <\/span> #>     <\/label> #>     <input type=\"text\" class=\"form-control\" placeholder=\"No file selected\" readonly=\"readonly\"/> #>   <\/div> #>   <div id=\"fileExposure_progress\" class=\"progress active shiny-file-input-progress\"> #>     <div class=\"progress-bar\"><\/div> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_UploadedComps.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the user upload option to upload compounds and their physical-chemical data — fileInput_UploadedComps","title":"Generate the user upload option to upload compounds and their physical-chemical data — fileInput_UploadedComps","text":"Generate user upload option upload compounds physical-chemical data","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_UploadedComps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the user upload option to upload compounds and their physical-chemical data — fileInput_UploadedComps","text":"","code":"fileInput_UploadedComps(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_UploadedComps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the user upload option to upload compounds and their physical-chemical data — fileInput_UploadedComps","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_UploadedComps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the user upload option to upload compounds and their physical-chemical data — fileInput_UploadedComps","text":"browser file upload box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/fileInput_UploadedComps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the user upload option to upload compounds and their physical-chemical data — fileInput_UploadedComps","text":"","code":"fileInput_UploadedComps(\"file1\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"file1-label\" for=\"file1\">Upload a CSV file of physical and chemical data for compounds not #>                     in the preloaded list (if desired). Download the 'Uploaded #>                     Physical-Chemical Data File Folder' under the 'Instructions' card #>                     for file formatting instructions.<\/label> #>   <div class=\"input-group\"> #>     <label class=\"input-group-btn input-group-prepend\"> #>       <span class=\"btn btn-default btn-file\"> #>         Browse... #>         <input id=\"file1\" class=\"shiny-input-file\" name=\"file1\" type=\"file\" style=\"position: absolute !important; top: -99999px !important; left: -99999px !important;\" accept=\".csv\"/> #>       <\/span> #>     <\/label> #>     <input type=\"text\" class=\"form-control\" placeholder=\"No file selected\" readonly=\"readonly\"/> #>   <\/div> #>   <div id=\"file1_progress\" class=\"progress active shiny-file-input-progress\"> #>     <div class=\"progress-bar\"><\/div> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FillExposureData.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NAs in exposure data frame with values — FillExposureData","title":"Replace NAs in exposure data frame with values — FillExposureData","text":"function fills NA values exposure data frame placing small deviation (1e-8) non-NA elements data frame particular chemical. done exposure data can plotted line point ranges.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FillExposureData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NAs in exposure data frame with values — FillExposureData","text":"","code":"FillExposureData(exposure_df)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FillExposureData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NAs in exposure data frame with values — FillExposureData","text":"exposure_df data frame chemical names exposure estimates. '","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FillExposureData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace NAs in exposure data frame with values — FillExposureData","text":"data frame chemical names exposure estimates. NA values outputted data frame.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FSBf_Check.html","id":null,"dir":"Reference","previous_headings":"","what":"Has the user defined an FSBf value? — FSBf_Check","title":"Has the user defined an FSBf value? — FSBf_Check","text":"function checks whether user selected FSBf value.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FSBf_Check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has the user defined an FSBf value? — FSBf_Check","text":"","code":"FSBf_Check(value, input)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FSBf_Check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has the user defined an FSBf value? — FSBf_Check","text":"value Shiny input ID corresponding input object input reactive inputs associated session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/FSBf_Check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Has the user defined an FSBf value? — FSBf_Check","text":"condition FALSE, return message. condition TRUE, return nothing.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GatherInputVars.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile all parameters into one final list — GatherInputVars","title":"Compile all parameters into one final list — GatherInputVars","text":"function puts user-selected parameters modules single parameter list pass functions generate model outputs. list parameters parameter form httk functions can read .","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GatherInputVars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile all parameters into one final list — GatherInputVars","text":"","code":"GatherInputVars(input, compoundlist)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GatherInputVars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile all parameters into one final list — GatherInputVars","text":"input 'input' object used prefix ID's (entered 'input') compoundlist data frame single column alphabetized list compounds simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GatherInputVars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile all parameters into one final list — GatherInputVars","text":"named list parameters GUI used main module functions","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getCASnums.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a vector of CAS numbers to simulate — getCASnums","title":"Generate a vector of CAS numbers to simulate — getCASnums","text":"function creates vector CASRNs available user-selected output, species, model, human vitro data preference.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getCASnums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a vector of CAS numbers to simulate — getCASnums","text":"","code":"getCASnums(func, species, model, defaulttohuman)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getCASnums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a vector of CAS numbers to simulate — getCASnums","text":"func user-selected desired output species user-selected species model user-selected species defaulttohuman user-selected human vitro data preference animal species selected","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getCASnums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a vector of CAS numbers to simulate — getCASnums","text":"vector CASRNs compounds available simulate ToCS","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getPiped.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the final list of available compounds available for simulation — getPiped","title":"Generate the final list of available compounds available for simulation — getPiped","text":"function narrows list compounds getCASnums function taking account IVIVE conditions user selected user interested list food relevant chemicals.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getPiped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the final list of available compounds available for simulation — getPiped","text":"","code":"getPiped(CASnums, honda, comptype)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getPiped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the final list of available compounds available for simulation — getPiped","text":"CASnums CASRN numbers compounds enough data httk simulate user's selected parameters honda selected IVIVE assumption (either NULL, Honda1, Honda2, Honda3, Honda4), applicable comptype user-selected subset compounds search; either \"Choose available chemicals\" \"Choose food relevant chemicals\"","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/getPiped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the final list of available compounds available for simulation — getPiped","text":"vector CASRN compound name pairings compounds enough available data simulate httk","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Instructions.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Instructions' card on the 'General Parameters' tab — GP_Instructions","title":"User interface for the 'Instructions' card on the 'General Parameters' tab — GP_Instructions","text":"function outputs user interface 'Instructions' card 'General Parameters' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Instructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Instructions' card on the 'General Parameters' tab — GP_Instructions","text":"","code":"GP_Instructions()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Instructions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Instructions' card on the 'General Parameters' tab — GP_Instructions","text":"Text instructions user use app, get help, report bugs","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Output.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Output' card on the 'General Parameters' tab — GP_Output","title":"User interface for the 'Output' card on the 'General Parameters' tab — GP_Output","text":"function outputs user interface 'Output' card 'General Parameters' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Output' card on the 'General Parameters' tab — GP_Output","text":"","code":"GP_Output()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Output' card on the 'General Parameters' tab — GP_Output","text":"'Output' card function selection option","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Species.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Species' card on the 'General Parameters' tab — GP_Species","title":"User interface for the 'Species' card on the 'General Parameters' tab — GP_Species","text":"function outputs user interface 'Species' card 'General Parameters' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Species' card on the 'General Parameters' tab — GP_Species","text":"","code":"GP_Species()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/GP_Species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Species' card on the 'General Parameters' tab — GP_Species","text":"'Species' card species selection options","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InitVals_Par.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of initial conditions — InitVals_Par","title":"Create a vector of initial conditions — InitVals_Par","text":"function creates named vector initial conditions selected model concentration-time profile simulations. names correspond model compartments.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InitVals_Par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of initial conditions — InitVals_Par","text":"","code":"InitVals_Par(model, ICopts, pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InitVals_Par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of initial conditions — InitVals_Par","text":"model model user selects ICopts user's selection whether want use initial conditions default, zero model states pars list parameters pass modules","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InitVals_Par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of initial conditions — InitVals_Par","text":"named vector initial conditions specific model","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Children.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate input validation rules for each individual module — InputRules_Children","title":"Generate input validation rules for each individual module — InputRules_Children","text":"function generates rules input selection user must follow program run. includes leaving parameters blank, correct type input, formatted correctly. file uploads, checks inputted file. Error messages shown user input rules broken.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate input validation rules for each individual module — InputRules_Children","text":"","code":"InputRules_Children(   iv_common,   iv_adme,   iv_ss,   iv_ivive,   iv_pc,   input,   ic_names )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate input validation rules for each individual module — InputRules_Children","text":"iv_common new shiny input validator object common inputs across modules (function, species, default human, model, silico parameters, preloaded compounds, uploaded compounds) iv_adme new shiny input validator object concentration-time profile specific parameters modules iv_ss new shiny input validator object steady state concentrations specific parameters modules iv_ivive new shiny input validator object IVIVE specific parameters modules iv_pc new shiny input validator object parameter calculations specific parameters modules input 'input' object used prefix ID's (entered 'input') ic_names named vector initial condition compartment names. See global.R input_functions.R information.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate input validation rules for each individual module — InputRules_Children","text":"Validation rules attached child input validator","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Parents.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine common validation rules and individual module validation rules into a single comprehensive input validator for each module — InputRules_Parents","title":"Combine common validation rules and individual module validation rules into a single comprehensive input validator for each module — InputRules_Parents","text":"function combines common input rules across modules module-specific rules, creates 'parent' validation function houses input parameter rules module.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Parents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine common validation rules and individual module validation rules into a single comprehensive input validator for each module — InputRules_Parents","text":"","code":"InputRules_Parents(   parent_adme_iv,   iv_adme,   parent_ss_iv,   iv_ss,   parent_ivive_iv,   iv_ivive,   parent_pc_iv,   iv_pc,   iv_common )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Parents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine common validation rules and individual module validation rules into a single comprehensive input validator for each module — InputRules_Parents","text":"parent_adme_iv new shiny input validator object concentration- time profile module inputs iv_adme shiny input validator object concentration-time profile specific parameters modules parent_ss_iv new shiny input validator object steady state concentration module inputs iv_ss shiny input validator object steady state concentrations specific parameters modules parent_ivive_iv new shiny input validator object IVIVE module inputs iv_ivive shiny input validator object IVIVE specific parameters modules parent_pc_iv new shiny input validator object parameter calculations module inputs iv_pc shiny input validator object parameter calculations specific parameters modules iv_common shiny input validator object common inputs across modules (function, species, default human, model, silico parameters, preloaded compounds, uploaded compounds)","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/InputRules_Parents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine common validation rules and individual module validation rules into a single comprehensive input validator for each module — InputRules_Parents","text":"Validation rules attached four parent input validators","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_CompSelect_Part1.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text to notify user that they must select or upload at least one compound to simulate — Instructions_CompSelect_Part1","title":"Generate text to notify user that they must select or upload at least one compound to simulate — Instructions_CompSelect_Part1","text":"Generate text notify user must select upload least one compound simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_CompSelect_Part1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text to notify user that they must select or upload at least one compound to simulate — Instructions_CompSelect_Part1","text":"","code":"Instructions_CompSelect_Part1()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_CompSelect_Part1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text to notify user that they must select or upload at least one compound to simulate — Instructions_CompSelect_Part1","text":"Text notifying user compound requirements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_CompSelect_Part2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text to notify the user of where to see sample uploaded compound data — Instructions_CompSelect_Part2","title":"Generate text to notify the user of where to see sample uploaded compound data — Instructions_CompSelect_Part2","text":"Generate text notify user see sample uploaded compound data","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_CompSelect_Part2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text to notify the user of where to see sample uploaded compound data — Instructions_CompSelect_Part2","text":"","code":"Instructions_CompSelect_Part2()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_CompSelect_Part2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text to notify the user of where to see sample uploaded compound data — Instructions_CompSelect_Part2","text":"Text notifying user uploaded compound data instructions","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_GenPars.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text for the instructions card under the 'General Parameters' tab — Instructions_GenPars","title":"Generate text for the instructions card under the 'General Parameters' tab — Instructions_GenPars","text":"Generate text instructions card 'General Parameters' tab","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_GenPars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text for the instructions card under the 'General Parameters' tab — Instructions_GenPars","text":"","code":"Instructions_GenPars()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_GenPars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text for the instructions card under the 'General Parameters' tab — Instructions_GenPars","text":"Text describing major uses ToCS, find additional resources, report bugs","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_Reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text for the 'Reset Session' button — Instructions_Reset","title":"Generate text for the 'Reset Session' button — Instructions_Reset","text":"Generate text 'Reset Session' button","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_Reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text for the 'Reset Session' button — Instructions_Reset","text":"","code":"Instructions_Reset()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_Reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text for the 'Reset Session' button — Instructions_Reset","text":"Text notifying user 'Reset Session' button","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_RunSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text for the 'Run Simulation' button — Instructions_RunSim","title":"Generate text for the 'Run Simulation' button — Instructions_RunSim","text":"Generate text 'Run Simulation' button","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_RunSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text for the 'Run Simulation' button — Instructions_RunSim","text":"","code":"Instructions_RunSim()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Instructions_RunSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text for the 'Run Simulation' button — Instructions_RunSim","text":"Text notifying user 'Run Simulation' button","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplotting.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the oral equivalent dose (OED) and exposure data (if applicable) — IVIVEplotting","title":"Plot the oral equivalent dose (OED) and exposure data (if applicable) — IVIVEplotting","text":"function plots OEDs uploaded exposure data. OEDs plotted dependent upon user-selected output type (single OED quantile OED samples). Exposure data (applicable) plotted point range.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplotting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the oral equivalent dose (OED) and exposure data (if applicable) — IVIVEplotting","text":"","code":"IVIVEplotting(OED_data, BioactiveConc, pars, logscale, expdata)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplotting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the oral equivalent dose (OED) and exposure data (if applicable) — IVIVEplotting","text":"OED_data data frame chemical names OEDs (either one per chemical many per chemical samples returned); first output IVIVEsol function BioactiveConc input used pars list user input parameters entire app logscale Checkbox input value indicating user wanted y-axis plots log10 scale expdata data frame chemical names exposure data estimates","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplotting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the oral equivalent dose (OED) and exposure data (if applicable) — IVIVEplotting","text":"ggplot2 plotting object","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_caption.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the caption for the IVIVE plot — IVIVEplot_caption","title":"Generate the caption for the IVIVE plot — IVIVEplot_caption","text":"function generates caption IVIVE oral equivalent dose plot output. caption differs depending whether single OED vector OEDs returned well whether exposure data available.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_caption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the caption for the IVIVE plot — IVIVEplot_caption","text":"","code":"IVIVEplot_caption(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_caption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the caption for the IVIVE plot — IVIVEplot_caption","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_caption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the caption for the IVIVE plot — IVIVEplot_caption","text":"text caption Figure 1","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the title and y-axis label for the IVIVE oral equivalent dose plot — IVIVEplot_labels","title":"Generate the title and y-axis label for the IVIVE oral equivalent dose plot — IVIVEplot_labels","text":"function generates title y-axis expressions oral equivalent dose plot IVIVE module. plot's title dependent upon model chosen, y-axis label dependent upon output concentration tissue output units selected.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the title and y-axis label for the IVIVE oral equivalent dose plot — IVIVEplot_labels","text":"","code":"IVIVEplot_labels(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the title and y-axis label for the IVIVE oral equivalent dose plot — IVIVEplot_labels","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the title and y-axis label for the IVIVE oral equivalent dose plot — IVIVEplot_labels","text":"list two elements: title expression y-axis expression","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_logscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a plot with a linear y-axis to a plot with a log10 y-axis scale — IVIVEplot_logscale","title":"Converts a plot with a linear y-axis to a plot with a log10 y-axis scale — IVIVEplot_logscale","text":"function converts y-axis scale plot object linear log10 y-axis.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_logscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a plot with a linear y-axis to a plot with a log10 y-axis scale — IVIVEplot_logscale","text":"","code":"IVIVEplot_logscale(   plt,   pars,   OEDSamples_df,   combined_df,   OED_data,   expdata,   Q5_OED_df )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_logscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a plot with a linear y-axis to a plot with a log10 y-axis scale — IVIVEplot_logscale","text":"plt complete ggplot2 plotting object pars list user input parameters entire app OEDSamples_df data frame oral equivalent dose samples compound; first list output PlotPrep_df. combined_df data frame OEDs exposure estimates; second output OEDPoint_Exposure_Plot. OED_data data frame compound names OEDs; first output IVIVEsol function arranged ascending order OEDs expdata data frame compound names exposure data estimates; fifth output IVIVEsol function Q5_OED_df data frame compound names 5th quantile OED; second output Plotdf_Prep function","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEplot_logscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a plot with a linear y-axis to a plot with a log10 y-axis scale — IVIVEplot_logscale","text":"plot object OEDs exposure data (applicable) log10 y-axis scale","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEsol.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function to calculate the oral equivalent dose and bioactivity exposure ratio for a list of chemicals — IVIVEsol","title":"Main function to calculate the oral equivalent dose and bioactivity exposure ratio for a list of chemicals — IVIVEsol","text":"function primary function used calculate oral equivalent dose bioactivity exposure ratio list chemicals, applicable. function calls functions actual calculations, returns final output used generate specified outputs IVIVE server functions.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEsol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function to calculate the oral equivalent dose and bioactivity exposure ratio for a list of chemicals — IVIVEsol","text":"","code":"IVIVEsol(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEsol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function to calculate the oral equivalent dose and bioactivity exposure ratio for a list of chemicals — IVIVEsol","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVEsol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function to calculate the oral equivalent dose and bioactivity exposure ratio for a list of chemicals — IVIVEsol","text":"list consisting data frame oral equivalent dose solutions, bioactive concentration data frame, data frame simulation parameters physical-chemical data chemicals simulated, data frame bioactivity exposure ratios (BER), data frame user-uploaded exposure data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the IVIVE dose plot — IVIVE_Plot_server","title":"Server function for the IVIVE dose plot — IVIVE_Plot_server","text":"#' @description function generates outputs defined IVIVE_Plot_ui() function. connects download button plot download, generates IVIVE dose plot, creates text plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the IVIVE dose plot — IVIVE_Plot_server","text":"","code":"IVIVE_Plot_server(id, ivive_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the IVIVE dose plot — IVIVE_Plot_server","text":"id Shiny identifier name; must id used IVIVE_Plot_ui() ivive_args Shiny reactive list output IVIVEsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the IVIVE dose plot — IVIVE_Plot_server","text":"Server outputs IVIVE plot drop includes three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the IVIVE dose plot — IVIVE_Plot_ui","title":"User interface function for the IVIVE dose plot — IVIVE_Plot_ui","text":"#' @description function outputs user interface IVIVE plot drop results card 'Run Simulation' tab. interface three outputs: plot download button, plot calculated IVIVE doses, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the IVIVE dose plot — IVIVE_Plot_ui","text":"","code":"IVIVE_Plot_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the IVIVE dose plot — IVIVE_Plot_ui","text":"id Shiny identifier name; must id used IVIVE_Plot_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Plot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the IVIVE dose plot — IVIVE_Plot_ui","text":"User interface IVIVE plot drop four elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Main server function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_server","title":"Main server function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_server","text":"function calculates IVIVE solution outputs contents UI objects IVIVE 'Results' card 'Run Simulation' tab. contents UI object (drop ) filled four separate server modules.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main server function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_server","text":"","code":"IVIVE_server(id, pars, runsim, logscale)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main server function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_server","text":"id Shiny identifier name; must id used IVIVE_ui() pars list user input parameters entire app runsim Action button titled 'Run Simulation' pressed user logscale Checkbox input value indicating user wanted y-axis plots log10 scale","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main server function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_server","text":"four server outputs fill main IVIVE user interface function consisting two plots two tables IVIVE results","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the IVIVE dose table — IVIVE_Table_server","title":"Server function for the IVIVE dose table — IVIVE_Table_server","text":"function generates outputs defined IVIVE_Table_ui() function. connects download buttons table download, fills data table content, creates text table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the IVIVE dose table — IVIVE_Table_server","text":"","code":"IVIVE_Table_server(id, ivive_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the IVIVE dose table — IVIVE_Table_server","text":"id Shiny identifier name; must id used IVIVE_Table_ui() ivive_args Shiny reactive list output IVIVEsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the IVIVE dose table — IVIVE_Table_server","text":"Server outputs IVIVE table drop includes four elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the IVIVE dose table — IVIVE_Table_ui","title":"User interface function for the IVIVE dose table — IVIVE_Table_ui","text":"function outputs user interface IVIVE table drop results card 'Run Simulation' tab. interface four outputs: table download button, simulation parameters download button, table calculated IVIVE doses, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the IVIVE dose table — IVIVE_Table_ui","text":"","code":"IVIVE_Table_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the IVIVE dose table — IVIVE_Table_ui","text":"id Shiny identifier name; must id used IVIVE_Table_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_Table_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the IVIVE dose table — IVIVE_Table_ui","text":"User interface IVIVE table drop four elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Main user interface function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_ui","title":"Main user interface function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_ui","text":"function outputs structure user interface IVIVE 'Results' card 'Run Simulation' tab. Four drop tabs appear: one oral equivalent dose (OED) table, one OED plot, one bioactivity exposure ratio (BER) table, one BER plot. user interface contents drop filled separate UI module.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main user interface function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_ui","text":"","code":"IVIVE_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main user interface function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_ui","text":"id Shiny identifier name; must id used IVIVE_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/IVIVE_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main user interface function to set up the 'Results' card under the IVIVE module's 'Run Simulation' tab — IVIVE_ui","text":"Four user interface drop tabs identifying space two plots two tables IVIVE results.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/l.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the ToCS app — l","title":"Run the ToCS app — l","text":"Run ToCS app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/l.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the ToCS app — l","text":"","code":"l()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/log10breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create log10 break points for a plot scale — log10breaks","title":"Create log10 break points for a plot scale — log10breaks","text":"function creates vector 10^x breakpoints y-axis plot","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/log10breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create log10 break points for a plot scale — log10breaks","text":"","code":"log10breaks(ydata)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/log10breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create log10 break points for a plot scale — log10breaks","text":"ydata vector y-coordinate data plotted","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/log10breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create log10 break points for a plot scale — log10breaks","text":"vector y-axis breaks","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MissingClintFup.html","id":null,"dir":"Reference","previous_headings":"","what":"Are there any required hepatic clearance (Clint) or fraction unbound in plasma (fup) values missing from the compounds file uploaded by the user? — MissingClintFup","title":"Are there any required hepatic clearance (Clint) or fraction unbound in plasma (fup) values missing from the compounds file uploaded by the user? — MissingClintFup","text":"function checks uploaded file physical-chemical data missing hepatic clearance fraction unbound plasma values. , message returned user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MissingClintFup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are there any required hepatic clearance (Clint) or fraction unbound in plasma (fup) values missing from the compounds file uploaded by the user? — MissingClintFup","text":"","code":"MissingClintFup(file, spec, defaultHuman)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MissingClintFup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are there any required hepatic clearance (Clint) or fraction unbound in plasma (fup) values missing from the compounds file uploaded by the user? — MissingClintFup","text":"file data frame compound physical-chemical data uploaded user spec species selected user; either \"Dog\",\"Human\",\"Mouse\", \"Rabbit\", \"Rat\" defaultHuman default human status selected user; either \"Yes\" user wants use human vitro data place missing animal vitro data \"\" use animal vitro data","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MissingClintFup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are there any required hepatic clearance (Clint) or fraction unbound in plasma (fup) values missing from the compounds file uploaded by the user? — MissingClintFup","text":"required data missing, function returns message detailing missing data. required data present, message outputted.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Model_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of possible models to simulate — Model_Input","title":"Generates a drop down list of possible models to simulate — Model_Input","text":"Generates drop list possible models simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Model_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of possible models to simulate — Model_Input","text":"","code":"Model_Input(func, spec)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Model_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of possible models to simulate — Model_Input","text":"func user-selected output spec user-selected species","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Model_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of possible models to simulate — Model_Input","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Model_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of possible models to simulate — Model_Input","text":"","code":"Model_Input(\"Concentration-time profiles\",\"Human\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"model-label\" for=\"model\">Select a model to simulate.<\/label> #>   <div> #>     <select id=\"model\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"1compartment\">1compartment<\/option> #> <option value=\"3compartment\">3compartment<\/option> #> <option value=\"pbtk\">pbtk<\/option> #> <option value=\"fetal_pbtk\">fetal_pbtk<\/option><\/select> #>     <script type=\"application/json\" data-for=\"model\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div> Model_Input(\"Parameter calculations\",\"Rat\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"model-label\" for=\"model\">Select a model to simulate.<\/label> #>   <div> #>     <select id=\"model\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"Schmitt\">Schmitt<\/option><\/select> #>     <script type=\"application/json\" data-for=\"model\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/modsol.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for the concentration-time profile output — modsol","title":"Main function for the concentration-time profile output — modsol","text":"function main function responsible generating output concentration-time profiles module. function calls Run_ADME_Model function well TKsummary function actually calculate concentration-time profiles toxicokinetic summaries, formats outputs return main module server distribute.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/modsol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for the concentration-time profile output — modsol","text":"","code":"modsol(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/modsol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for the concentration-time profile output — modsol","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/modsol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for the concentration-time profile output — modsol","text":"list three elements containing array concentration-time profile solution, matrix toxicokinetic summary, data frame simulation parameters physical-chemical data compounds used simulation","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MS_Dosing.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Dosing' card on the 'Model Specifications' tab — MS_Dosing","title":"User interface for the 'Dosing' card on the 'Model Specifications' tab — MS_Dosing","text":"function outputs user interface 'Dosing' card 'Model Specifications' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MS_Dosing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Dosing' card on the 'Model Specifications' tab — MS_Dosing","text":"","code":"MS_Dosing()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MS_Dosing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Dosing' card on the 'Model Specifications' tab — MS_Dosing","text":"'Dosing' card dosing selection options depending module function chosen","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MS_Model.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Model' card on the 'Model Specifications' tab — MS_Model","title":"User interface for the 'Model' card on the 'Model Specifications' tab — MS_Model","text":"function outputs user interface 'Model' card 'Model Specifications' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MS_Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Model' card on the 'Model Specifications' tab — MS_Model","text":"","code":"MS_Model()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/MS_Model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Model' card on the 'Model Specifications' tab — MS_Model","text":"'Model' card model selection options depending module function chosen","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_odd.html","id":null,"dir":"Reference","previous_headings":"","what":"Has the user entered dosing amounts and times? — multdose_odd","title":"Has the user entered dosing amounts and times? — multdose_odd","text":"function relays user dosing administration amounts times chosen.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_odd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has the user entered dosing amounts and times? — multdose_odd","text":"","code":"multdose_odd(   value,   input,   message = \"The dosing administration amounts and times must be entered\" )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_odd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has the user entered dosing amounts and times? — multdose_odd","text":"value Shiny input ID corresponding input object input reactive inputs associated session message character string return user condition true","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_odd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Has the user entered dosing amounts and times? — multdose_odd","text":"condition FALSE, return message. condition TRUE, return nothing.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_Select.html","id":null,"dir":"Reference","previous_headings":"","what":"Has the user selected a dosing frequency? — multdose_Select","title":"Has the user selected a dosing frequency? — multdose_Select","text":"function relays user dosing frequency must chosen.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_Select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has the user selected a dosing frequency? — multdose_Select","text":"","code":"multdose_Select(   value,   input,   message = \"The dosing frequency must be selected\" )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_Select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has the user selected a dosing frequency? — multdose_Select","text":"value Shiny input ID corresponding input object input reactive inputs associated session message character string return user condition true","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/multdose_Select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Has the user selected a dosing frequency? — multdose_Select","text":"condition FALSE, return message. condition TRUE, return nothing.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/names_ICs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a vector of model compartment variables and names — names_ICs","title":"Generate a vector of model compartment variables and names — names_ICs","text":"function creates list compartment names variable names compartments model used generate initial condition options user concentration-time profile simulations; used global.R \\ file.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/names_ICs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a vector of model compartment variables and names — names_ICs","text":"","code":"names_ICs()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/names_ICs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a vector of model compartment variables and names — names_ICs","text":"list full compartment names variable names compartments","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/names_ICs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a vector of model compartment variables and names — names_ICs","text":"","code":"names_ICs()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Notify_ParError.html","id":null,"dir":"Reference","previous_headings":"","what":"Notify the user of parameter error — Notify_ParError","title":"Notify the user of parameter error — Notify_ParError","text":"function notifies user missing invalid parameters simulation \"Run Simulation\" button clicked.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Notify_ParError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notify the user of parameter error — Notify_ParError","text":"","code":"Notify_ParError()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Notify_ParError.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Notify the user of parameter error — Notify_ParError","text":"pop-notification user","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/not_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Has the user selected and/or uploaded compounds to simulate? — not_null","title":"Has the user selected and/or uploaded compounds to simulate? — not_null","text":"function determines whether least one compound set user simulated. compound may either pre-available drop list uploaded user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/not_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has the user selected and/or uploaded compounds to simulate? — not_null","text":"","code":"not_null(   value,   input,   message = \"At least one compound must be selected or uploaded\" )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/not_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has the user selected and/or uploaded compounds to simulate? — not_null","text":"value Shiny input ID corresponding input object input reactive inputs associated session message character string return user condition true","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/not_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Has the user selected and/or uploaded compounds to simulate? — not_null","text":"condition FALSE, return message. condition TRUE, return nothing.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box where the user selects their preference on the ratio of distribution coefficient for totally charges species and that of the neutral form — numericInput_Alpha","title":"Generates a numeric input box where the user selects their preference on the ratio of distribution coefficient for totally charges species and that of the neutral form — numericInput_Alpha","text":"Generates numeric input box user selects preference ratio distribution coefficient totally charges species neutral form","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box where the user selects their preference on the ratio of distribution coefficient for totally charges species and that of the neutral form — numericInput_Alpha","text":"","code":"numericInput_Alpha(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box where the user selects their preference on the ratio of distribution coefficient for totally charges species and that of the neutral form — numericInput_Alpha","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box where the user selects their preference on the ratio of distribution coefficient for totally charges species and that of the neutral form — numericInput_Alpha","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box where the user selects their preference on the ratio of distribution coefficient for totally charges species and that of the neutral form — numericInput_Alpha","text":"","code":"numericInput_Alpha(\"AlphaPar\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"AlphaPar-label\" for=\"AlphaPar\">Enter the Ratio of Distribution coefficient D of totally #>                         charged species and that of the neutral form.<\/label> #>   <input id=\"AlphaPar\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0.001\" min=\"0\" step=\"0.001\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_CacoDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box where the user can customize the caco-2 apical-to-basal membrane permeability value if desired — numericInput_CacoDefault","title":"Generates a numeric input box where the user can customize the caco-2 apical-to-basal membrane permeability value if desired — numericInput_CacoDefault","text":"Generates numeric input box user can customize caco-2 apical--basal membrane permeability value desired","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_CacoDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box where the user can customize the caco-2 apical-to-basal membrane permeability value if desired — numericInput_CacoDefault","text":"","code":"numericInput_CacoDefault(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_CacoDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box where the user can customize the caco-2 apical-to-basal membrane permeability value if desired — numericInput_CacoDefault","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_CacoDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box where the user can customize the caco-2 apical-to-basal membrane permeability value if desired — numericInput_CacoDefault","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_CacoDefault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box where the user can customize the caco-2 apical-to-basal membrane permeability value if desired — numericInput_CacoDefault","text":"","code":"numericInput_CacoDefault(\"caco2default\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"caco2default-label\" for=\"caco2default\">Enter a default value for the Caco-2 apical-to-basal #>                         membrane permeability (denoted Caco2.Pab, 10^-6 cm/s).<\/label> #>   <input id=\"caco2default\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1.6\" min=\"0\" step=\"0.1\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ClintPval.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box where the user specifies their preference for the hepatic clearance p-value threshold — numericInput_ClintPval","title":"Generates a numeric input box where the user specifies their preference for the hepatic clearance p-value threshold — numericInput_ClintPval","text":"Generates numeric input box user specifies preference hepatic clearance p-value threshold","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ClintPval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box where the user specifies their preference for the hepatic clearance p-value threshold — numericInput_ClintPval","text":"","code":"numericInput_ClintPval(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ClintPval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box where the user specifies their preference for the hepatic clearance p-value threshold — numericInput_ClintPval","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ClintPval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box where the user specifies their preference for the hepatic clearance p-value threshold — numericInput_ClintPval","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ClintPval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box where the user specifies their preference for the hepatic clearance p-value threshold — numericInput_ClintPval","text":"","code":"numericInput_ClintPval(\"Clint_Pval\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"Clint_Pval-label\" for=\"Clint_Pval\">Enter the p-value threshold for the in vitro #>                         intrinsic hepatic clearance rate where clearance assay #>                         results with p-values above this threshold are set to zero.<\/label> #>   <input id=\"Clint_Pval\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0.05\" min=\"0\" max=\"1\" step=\"0.01\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_DailyDose.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a numeric input box for users to enter the total daily dose administered during steady state concentration simulations — numericInput_DailyDose","title":"Generate a numeric input box for users to enter the total daily dose administered during steady state concentration simulations — numericInput_DailyDose","text":"Generate numeric input box users enter total daily dose administered steady state concentration simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_DailyDose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a numeric input box for users to enter the total daily dose administered during steady state concentration simulations — numericInput_DailyDose","text":"","code":"numericInput_DailyDose(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_DailyDose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a numeric input box for users to enter the total daily dose administered during steady state concentration simulations — numericInput_DailyDose","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_DailyDose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a numeric input box for users to enter the total daily dose administered during steady state concentration simulations — numericInput_DailyDose","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_DailyDose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a numeric input box for users to enter the total daily dose administered during steady state concentration simulations — numericInput_DailyDose","text":"","code":"numericInput_DailyDose(\"dailydose\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"dailydose-label\" for=\"dailydose\">Enter the total daily dose (in mg/kg BW).<\/label> #>   <input id=\"dailydose\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1\" min=\"0\" step=\"1\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_FSBf.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box for the user to customize the fraction of fetal bovine serum used in the in vitro assay for bioactivity data uploaded in in vitro in vivo extrapolation (IVIVE) simulations — numericInput_FSBf","title":"Generates a numeric input box for the user to customize the fraction of fetal bovine serum used in the in vitro assay for bioactivity data uploaded in in vitro in vivo extrapolation (IVIVE) simulations — numericInput_FSBf","text":"Generates numeric input box user customize fraction fetal bovine serum used vitro assay bioactivity data uploaded vitro vivo extrapolation (IVIVE) simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_FSBf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box for the user to customize the fraction of fetal bovine serum used in the in vitro assay for bioactivity data uploaded in in vitro in vivo extrapolation (IVIVE) simulations — numericInput_FSBf","text":"","code":"numericInput_FSBf(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_FSBf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box for the user to customize the fraction of fetal bovine serum used in the in vitro assay for bioactivity data uploaded in in vitro in vivo extrapolation (IVIVE) simulations — numericInput_FSBf","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_FSBf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box for the user to customize the fraction of fetal bovine serum used in the in vitro assay for bioactivity data uploaded in in vitro in vivo extrapolation (IVIVE) simulations — numericInput_FSBf","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_FSBf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box for the user to customize the fraction of fetal bovine serum used in the in vitro assay for bioactivity data uploaded in in vitro in vivo extrapolation (IVIVE) simulations — numericInput_FSBf","text":"","code":"numericInput_FSBf(\"FSBf\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"FSBf-label\" for=\"FSBf\">Enter the volume fraction of fetal bovine serum used #>                         in the in vitro assay.<\/label> #>   <input id=\"FSBf\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0.1\" min=\"0\" max=\"1\" step=\"0.05\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ICvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box for the user to specify the initial condition of a particular model compartment during concentration-time profile simulations — numericInput_ICvalue","title":"Generates a numeric input box for the user to specify the initial condition of a particular model compartment during concentration-time profile simulations — numericInput_ICvalue","text":"Generates numeric input box user specify initial condition particular model compartment concentration-time profile simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ICvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box for the user to specify the initial condition of a particular model compartment during concentration-time profile simulations — numericInput_ICvalue","text":"","code":"numericInput_ICvalue(id, compartment)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ICvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box for the user to specify the initial condition of a particular model compartment during concentration-time profile simulations — numericInput_ICvalue","text":"id Shiny identifier name compartment Model compartment name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ICvalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box for the user to specify the initial condition of a particular model compartment during concentration-time profile simulations — numericInput_ICvalue","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_ICvalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box for the user to specify the initial condition of a particular model compartment during concentration-time profile simulations — numericInput_ICvalue","text":"","code":"numericInput_ICvalue(\"One_gut\",\"gut\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"One_gut-label\" for=\"One_gut\">Enter the initial amount (in umol) of compound(s) #>                                in the gut at t = 0.<\/label> #>   <input id=\"One_gut\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0\" min=\"0\" step=\"1\"/> #> <\/div> numericInput_ICvalue(\"Three_AUC\",\"AUC\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"Three_AUC-label\" for=\"Three_AUC\">Enter the initial area under the curve (in uM*days) #>                                of the AUC at t = 0.<\/label> #>   <input id=\"Three_AUC\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0\" min=\"0\" step=\"1\"/> #> <\/div> numericInput_ICvalue(\"P_liver\",\"liver\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"P_liver-label\" for=\"P_liver\">Enter the initial amount (in umol) of compound(s) #>                                in the liver at t = 0.<\/label> #>   <input id=\"P_liver\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0\" min=\"0\" step=\"1\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_InitialDose.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a numeric input box that has users select the amount of initial dose administered — numericInput_InitialDose","title":"Generate a numeric input box that has users select the amount of initial dose administered — numericInput_InitialDose","text":"Generate numeric input box users select amount initial dose administered","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_InitialDose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a numeric input box that has users select the amount of initial dose administered — numericInput_InitialDose","text":"","code":"numericInput_InitialDose(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_InitialDose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a numeric input box that has users select the amount of initial dose administered — numericInput_InitialDose","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_InitialDose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a numeric input box that has users select the amount of initial dose administered — numericInput_InitialDose","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_InitialDose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a numeric input box that has users select the amount of initial dose administered — numericInput_InitialDose","text":"","code":"numericInput_InitialDose(\"initdose\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"initdose-label\" for=\"initdose\">Enter the dose amount administered (in the specified units).<\/label> #>   <input id=\"initdose\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1\" min=\"0\" step=\"0.01\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MinFub.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box for the user to specify the minimum acceptable fraction unbound in plasma. — numericInput_MinFub","title":"Generates a numeric input box for the user to specify the minimum acceptable fraction unbound in plasma. — numericInput_MinFub","text":"Generates numeric input box user specify minimum acceptable fraction unbound plasma.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MinFub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box for the user to specify the minimum acceptable fraction unbound in plasma. — numericInput_MinFub","text":"","code":"numericInput_MinFub(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MinFub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box for the user to specify the minimum acceptable fraction unbound in plasma. — numericInput_MinFub","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MinFub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box for the user to specify the minimum acceptable fraction unbound in plasma. — numericInput_MinFub","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MinFub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box for the user to specify the minimum acceptable fraction unbound in plasma. — numericInput_MinFub","text":"","code":"numericInput_MinFub(\"min_fub\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"min_fub-label\" for=\"min_fub\">Enter the minimum acceptable chemical fraction unbound #>                         in presence of plasma proteins. All values below this #>                         will be set to this value.<\/label> #>   <input id=\"min_fub\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0.0001\" min=\"0\" max=\"1\" step=\"1e-04\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MultiDoseAmount.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a numeric input box for users to enter the uniform amount of compound administered during each dose of a multiple dose administration regimen for ADME simulations — numericInput_MultiDoseAmount","title":"Generate a numeric input box for users to enter the uniform amount of compound administered during each dose of a multiple dose administration regimen for ADME simulations — numericInput_MultiDoseAmount","text":"Generate numeric input box users enter uniform amount compound administered dose multiple dose administration regimen ADME simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MultiDoseAmount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a numeric input box for users to enter the uniform amount of compound administered during each dose of a multiple dose administration regimen for ADME simulations — numericInput_MultiDoseAmount","text":"","code":"numericInput_MultiDoseAmount(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MultiDoseAmount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a numeric input box for users to enter the uniform amount of compound administered during each dose of a multiple dose administration regimen for ADME simulations — numericInput_MultiDoseAmount","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MultiDoseAmount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a numeric input box for users to enter the uniform amount of compound administered during each dose of a multiple dose administration regimen for ADME simulations — numericInput_MultiDoseAmount","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_MultiDoseAmount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a numeric input box for users to enter the uniform amount of compound administered during each dose of a multiple dose administration regimen for ADME simulations — numericInput_MultiDoseAmount","text":"","code":"numericInput_MultiDoseAmount(\"mult_doseamount\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"mult_doseamount-label\" for=\"mult_doseamount\">Enter the amount administered during every dose #>                         (in the specified units).<\/label> #>   <input id=\"mult_doseamount\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1\" min=\"0\" step=\"1\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box for users to specify the steady state concentration quantile used in the in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Quantile","title":"Generates a numeric input box for users to specify the steady state concentration quantile used in the in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Quantile","text":"Generates numeric input box users specify steady state concentration quantile used vitro vivo extrapolation (IVIVE) simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box for users to specify the steady state concentration quantile used in the in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Quantile","text":"","code":"numericInput_Quantile(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box for users to specify the steady state concentration quantile used in the in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Quantile","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box for users to specify the steady state concentration quantile used in the in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Quantile","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box for users to specify the steady state concentration quantile used in the in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Quantile","text":"","code":"numericInput_Quantile(\"quantile\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"quantile-label\" for=\"quantile\">Enter the steady state concentration quantile (as a decimal) #>                         to be used in the OED calculation. Selecting the 95th #>                         concentration quantile will output the 5th OED quantile.<\/label> #>   <input id=\"quantile\" type=\"number\" class=\"shiny-input-number form-control\" value=\"0.95\" min=\"0\" max=\"1\" step=\"0.05\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box for the user to enter the number of Monte Carlo samples to generate during in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Samples","title":"Generates a numeric input box for the user to enter the number of Monte Carlo samples to generate during in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Samples","text":"Generates numeric input box user enter number Monte Carlo samples generate vitro vivo extrapolation (IVIVE) simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box for the user to enter the number of Monte Carlo samples to generate during in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Samples","text":"","code":"numericInput_Samples(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box for the user to enter the number of Monte Carlo samples to generate during in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Samples","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box for the user to enter the number of Monte Carlo samples to generate during in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Samples","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_Samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box for the user to enter the number of Monte Carlo samples to generate during in vitro in vivo extrapolation (IVIVE) simulations — numericInput_Samples","text":"","code":"numericInput_Samples(\"samples\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"samples-label\" for=\"samples\">Enter the number of Monte Carlo samples generated for #>                         each compound.<\/label> #>   <input id=\"samples\" type=\"number\" class=\"shiny-input-number form-control\" value=\"1000\" min=\"1\" step=\"100\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SimTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box where the user enters the simulation time for concentration-time profile simulations — numericInput_SimTime","title":"Generates a numeric input box where the user enters the simulation time for concentration-time profile simulations — numericInput_SimTime","text":"Generates numeric input box user enters simulation time concentration-time profile simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SimTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box where the user enters the simulation time for concentration-time profile simulations — numericInput_SimTime","text":"","code":"numericInput_SimTime(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SimTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box where the user enters the simulation time for concentration-time profile simulations — numericInput_SimTime","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SimTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box where the user enters the simulation time for concentration-time profile simulations — numericInput_SimTime","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SimTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box where the user enters the simulation time for concentration-time profile simulations — numericInput_SimTime","text":"","code":"numericInput_SimTime(\"simtime\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"simtime-label\" for=\"simtime\">Enter the total simulation time (in days).<\/label> #>   <input id=\"simtime\" type=\"number\" class=\"shiny-input-number form-control\" value=\"10\" min=\"1\" step=\"1\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SolSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a numeric input box for the user to specify the number of solver steps for the ODE solver in the concentration-time profile simulation — numericInput_SolSteps","title":"Generates a numeric input box for the user to specify the number of solver steps for the ODE solver in the concentration-time profile simulation — numericInput_SolSteps","text":"Generates numeric input box user specify number solver steps ODE solver concentration-time profile simulation","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SolSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a numeric input box for the user to specify the number of solver steps for the ODE solver in the concentration-time profile simulation — numericInput_SolSteps","text":"","code":"numericInput_SolSteps(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SolSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a numeric input box for the user to specify the number of solver steps for the ODE solver in the concentration-time profile simulation — numericInput_SolSteps","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SolSteps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a numeric input box for the user to specify the number of solver steps for the ODE solver in the concentration-time profile simulation — numericInput_SolSteps","text":"numeric input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/numericInput_SolSteps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a numeric input box for the user to specify the number of solver steps for the ODE solver in the concentration-time profile simulation — numericInput_SolSteps","text":"","code":"numericInput_SolSteps(\"solversteps\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"solversteps-label\" for=\"solversteps\">Enter the number of time steps per hour for the solver to take.<\/label> #>   <input id=\"solversteps\" type=\"number\" class=\"shiny-input-number form-control\" value=\"4\" min=\"1\" step=\"1\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_Exposure_Plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the oral equivalent dose (OED) for each chemical when the user uploads exposure data — OEDPoint_Exposure_Plot","title":"Plot the oral equivalent dose (OED) for each chemical when the user uploads exposure data — OEDPoint_Exposure_Plot","text":"function generates OED point ggplot object exposure data uploaded user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_Exposure_Plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the oral equivalent dose (OED) for each chemical when the user uploads exposure data — OEDPoint_Exposure_Plot","text":"","code":"OEDPoint_Exposure_Plot(OED_data, expdata, y_exp, title_exp)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_Exposure_Plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the oral equivalent dose (OED) for each chemical when the user uploads exposure data — OEDPoint_Exposure_Plot","text":"OED_data data frame chemical names OEDs expdata data frame chemical names exposure estimates y_exp plot's y-axis label expression title_exp plot's title expression","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_Exposure_Plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the oral equivalent dose (OED) for each chemical when the user uploads exposure data — OEDPoint_Exposure_Plot","text":"list two elements: ggplot2 plotting object data frame OED exposure data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_NoExposure_Plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the oral equivalent dose (OED) for each chemical when there is no exposure data uploaded — OEDPoint_NoExposure_Plot","title":"Plot the oral equivalent dose (OED) for each chemical when there is no exposure data uploaded — OEDPoint_NoExposure_Plot","text":"function generates OED point ggplot object exposure data uploaded user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_NoExposure_Plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the oral equivalent dose (OED) for each chemical when there is no exposure data uploaded — OEDPoint_NoExposure_Plot","text":"","code":"OEDPoint_NoExposure_Plot(OED_data, y_exp, title_exp)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_NoExposure_Plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the oral equivalent dose (OED) for each chemical when there is no exposure data uploaded — OEDPoint_NoExposure_Plot","text":"OED_data data frame chemical names OEDs y_exp plot's y-axis label expression title_exp plot's title expression","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDPoint_NoExposure_Plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the oral equivalent dose (OED) for each chemical when there is no exposure data uploaded — OEDPoint_NoExposure_Plot","text":"ggplot2 plotting object","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_Exposure_Plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the oral equivalent dose samples and user-uploaded exposure data estimates — OEDSample_Exposure_Plot","title":"Plot the oral equivalent dose samples and user-uploaded exposure data estimates — OEDSample_Exposure_Plot","text":"function generates OED samples ggplot object exposure data uploaded user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_Exposure_Plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the oral equivalent dose samples and user-uploaded exposure data estimates — OEDSample_Exposure_Plot","text":"","code":"OEDSample_Exposure_Plot(OEDSamples_df, Q5_OED_df, expdata, y_exp, title_exp)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_Exposure_Plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the oral equivalent dose samples and user-uploaded exposure data estimates — OEDSample_Exposure_Plot","text":"OEDSamples_df data frame chemical names OED samples Q5_OED_df data frame chemical names 5th OED quantile value expdata data frame chemical names exposure estimates y_exp plot's y-axis label expression title_exp plot's title expression","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_Exposure_Plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the oral equivalent dose samples and user-uploaded exposure data estimates — OEDSample_Exposure_Plot","text":"list two elements: ggplot2 plotting object data frame exposure data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_NoExposure_Plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the oral equivalent dose samples when the user does not upload exposure data — OEDSample_NoExposure_Plot","title":"Plot the oral equivalent dose samples when the user does not upload exposure data — OEDSample_NoExposure_Plot","text":"function generates OED samples ggplot object exposure data uploaded user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_NoExposure_Plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the oral equivalent dose samples when the user does not upload exposure data — OEDSample_NoExposure_Plot","text":"","code":"OEDSample_NoExposure_Plot(OEDSamples_df, Q5_OED_df, y_exp, title_exp)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_NoExposure_Plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the oral equivalent dose samples when the user does not upload exposure data — OEDSample_NoExposure_Plot","text":"OEDSamples_df data frame chemical names OED samples Q5_OED_df data frame chemical names 5th OED quantile value y_exp plot's y-axis label expression title_exp plot's title expression","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OEDSample_NoExposure_Plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the oral equivalent dose samples when the user does not upload exposure data — OEDSample_NoExposure_Plot","text":"ggplot2 plotting object","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OutputTimes_Par.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a vector of output times — OutputTimes_Par","title":"Generate a vector of output times — OutputTimes_Par","text":"function creates vector output times concentration-time profiles module. vector entries depend user's model, simulation time, return time specifications.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OutputTimes_Par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a vector of output times — OutputTimes_Par","text":"","code":"OutputTimes_Par(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OutputTimes_Par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a vector of output times — OutputTimes_Par","text":"pars list parameters pass modules","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/OutputTimes_Par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a vector of output times — OutputTimes_Par","text":"vector times output ADME concentration-time profile solution","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ParNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile the names of all user-selected parameters across all modules — ParNames","title":"Compile the names of all user-selected parameters across all modules — ParNames","text":"Compile names user-selected parameters across modules","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ParNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile the names of all user-selected parameters across all modules — ParNames","text":"","code":"ParNames()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/ParNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile the names of all user-selected parameters across all modules — ParNames","text":"list parameter id names","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Parsol.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the elimination rate, volume of distribution, half-life, and total plasma clearance of all selected compounds — Parsol","title":"Calculate the elimination rate, volume of distribution, half-life, and total plasma clearance of all selected compounds — Parsol","text":"function main function calls calculation list compounds' elimination rates, volumes distribution, half lives, total plasma clearances. data frames set function, functions called calculation parameters.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Parsol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the elimination rate, volume of distribution, half-life, and total plasma clearance of all selected compounds — Parsol","text":"","code":"Parsol(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Parsol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the elimination rate, volume of distribution, half-life, and total plasma clearance of all selected compounds — Parsol","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Parsol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the elimination rate, volume of distribution, half-life, and total plasma clearance of all selected compounds — Parsol","text":"list consisting data frame calculated elimination rates, volumes distribution, half life, total clearance measures, data frame calculated partition coefficients, data frame simulation parameters chemical-physical data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the parameter calculations parameter plot — PC_EVPlot_server","title":"Server function for the parameter calculations parameter plot — PC_EVPlot_server","text":"function contains output elements parameter calculations parameter plot. server contains three output elements: download button, plot, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the parameter calculations parameter plot — PC_EVPlot_server","text":"","code":"PC_EVPlot_server(id, pc_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the parameter calculations parameter plot — PC_EVPlot_server","text":"id Shiny identifier name; must id used PC_EVPlot_ui() pc_args Shiny reactive list output Parsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the parameter calculations parameter plot — PC_EVPlot_server","text":"Server outputs parameter plot drop includes three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the parameter calculations parameter plot — PC_EVPlot_ui","title":"User interface function for the parameter calculations parameter plot — PC_EVPlot_ui","text":"function contains user interface elements parameter calculations parameter plot. interface contains three UI elements: download button, plot, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the parameter calculations parameter plot — PC_EVPlot_ui","text":"","code":"PC_EVPlot_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the parameter calculations parameter plot — PC_EVPlot_ui","text":"id Shiny identifier name; must id used PC_EVPlot_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVPlot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the parameter calculations parameter plot — PC_EVPlot_ui","text":"User interface parameter plot drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the parameter calculations parameter table — PC_EVTable_server","title":"Server function for the parameter calculations parameter table — PC_EVTable_server","text":"function contains output elements parameter calculations parameter table. server contains three output elements: table download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the parameter calculations parameter table — PC_EVTable_server","text":"","code":"PC_EVTable_server(id, pc_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the parameter calculations parameter table — PC_EVTable_server","text":"id Shiny identifier name; must id used PC_EVTable_ui() pc_args Shiny reactive list output Parsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the parameter calculations parameter table — PC_EVTable_server","text":"Server outputs parameter table three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the parameter calculation parameter table — PC_EVTable_ui","title":"User interface function for the parameter calculation parameter table — PC_EVTable_ui","text":"function contains user interface elements parameter calculations parameter table. interface contains three UI elements: table download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the parameter calculation parameter table — PC_EVTable_ui","text":"","code":"PC_EVTable_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the parameter calculation parameter table — PC_EVTable_ui","text":"id Shiny identifier name; must id used PC_EVTable_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_EVTable_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the parameter calculation parameter table — PC_EVTable_ui","text":"User interface parameter table drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the parameter calculations simulation parameters — PC_Pars_server","title":"Server function for the parameter calculations simulation parameters — PC_Pars_server","text":"Server function parameter calculations simulation parameters","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the parameter calculations simulation parameters — PC_Pars_server","text":"","code":"PC_Pars_server(id, pc_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the parameter calculations simulation parameters — PC_Pars_server","text":"id Shiny identifier name; must id used PC_Pars_ui() pc_args Shiny reactive list output Parsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the parameter calculations simulation parameters — PC_Pars_server","text":"Server outputs parameter download drop one element","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the paramater calculations simulation parameters download option — PC_Pars_ui","title":"User interface function for the paramater calculations simulation parameters download option — PC_Pars_ui","text":"User interface function paramater calculations simulation parameters download option","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the paramater calculations simulation parameters download option — PC_Pars_ui","text":"","code":"PC_Pars_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the paramater calculations simulation parameters download option — PC_Pars_ui","text":"id Shiny identifier name; must id used PC_Pars_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_Pars_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the paramater calculations simulation parameters download option — PC_Pars_ui","text":"User interface parameter download drop one element","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the parameter calculations partition coefficient plot — PC_PCPlot_server","title":"Server function for the parameter calculations partition coefficient plot — PC_PCPlot_server","text":"function contains output elements parameter calculations partition coefficient plot. server contains three output elements: download button, plot, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the parameter calculations partition coefficient plot — PC_PCPlot_server","text":"","code":"PC_PCPlot_server(id, pc_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the parameter calculations partition coefficient plot — PC_PCPlot_server","text":"id Shiny identifier name; must id used PC_PCPlot_ui() pc_args Shiny reactive list output Parsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the parameter calculations partition coefficient plot — PC_PCPlot_server","text":"Server outputs partition coefficient plot drop includes three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the parameter calculations partition coefficient plot — PC_PCPlot_ui","title":"User interface function for the parameter calculations partition coefficient plot — PC_PCPlot_ui","text":"function contains user interface elements parameter calculations partition coefficient plot. interface contains three UI elements: download button, plot, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the parameter calculations partition coefficient plot — PC_PCPlot_ui","text":"","code":"PC_PCPlot_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the parameter calculations partition coefficient plot — PC_PCPlot_ui","text":"id Shiny identifier name; must id used PC_PCPlot_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCPlot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the parameter calculations partition coefficient plot — PC_PCPlot_ui","text":"User interface partition coefficient plot drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the parameter calculations partition coefficients table — PC_PCTable_server","title":"Server function for the parameter calculations partition coefficients table — PC_PCTable_server","text":"function contains output elements parameter calculations partition coefficient table. server contains three output elements: table download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the parameter calculations partition coefficients table — PC_PCTable_server","text":"","code":"PC_PCTable_server(id, pc_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the parameter calculations partition coefficients table — PC_PCTable_server","text":"id Shiny identifier name; must id used PC_PCTable_ui() pc_args Shiny reactive list output Parsol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the parameter calculations partition coefficients table — PC_PCTable_server","text":"Server outputs partition coefficients table three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface function for the parameter calculations partition coefficients table — PC_PCTable_ui","title":"User interface function for the parameter calculations partition coefficients table — PC_PCTable_ui","text":"function contains user interface elements parameter calculations partition coefficient table. interface contains three UI elements: table download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface function for the parameter calculations partition coefficients table — PC_PCTable_ui","text":"","code":"PC_PCTable_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface function for the parameter calculations partition coefficients table — PC_PCTable_ui","text":"id Shiny identifier name; must id used PC_PCTable_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_PCTable_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface function for the parameter calculations partition coefficients table — PC_PCTable_ui","text":"User interface partition coefficients table drop three elements","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Main server function to set up the 'Results' card under the Parameter Calculation module's Run Simulation' tab — PC_server","title":"Main server function to set up the 'Results' card under the Parameter Calculation module's Run Simulation' tab — PC_server","text":"function acts main function fill user interface parameter calculations module. server outputs include five elements: two plots, two tables, download button. server element server function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main server function to set up the 'Results' card under the Parameter Calculation module's Run Simulation' tab — PC_server","text":"","code":"PC_server(id, pars, runsim, logscale)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main server function to set up the 'Results' card under the Parameter Calculation module's Run Simulation' tab — PC_server","text":"id Shiny identifier name; must id used PC_ui() pars list user input parameters entire app runsim Action button titled 'Run Simulation' pressed user logscale Checkbox input value indicating user wanted y-axis plots log10 scale","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main server function to set up the 'Results' card under the Parameter Calculation module's Run Simulation' tab — PC_server","text":"five server outputs fill main Parameter Calculations user interface function consisting two plots, two tables, download button simulation parameters Parameter Calculation results","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Main user interface function to set up the 'Results' card under the Parameter Calculations module's 'Run Simulation' tab — PC_ui","title":"Main user interface function to set up the 'Results' card under the Parameter Calculations module's 'Run Simulation' tab — PC_ui","text":"#' @description function outputs structure user interface Parameter Calculations 'Results' card 'Run Simulation' tab. Five drop tabs appear: one parameter plot, one parameter table, one partition coefficient plot, one partition coefficient table, one download option simulation parameters. user interface contents drop filled separate UI module.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main user interface function to set up the 'Results' card under the Parameter Calculations module's 'Run Simulation' tab — PC_ui","text":"","code":"PC_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main user interface function to set up the 'Results' card under the Parameter Calculations module's 'Run Simulation' tab — PC_ui","text":"id Shiny identifier name; must id used PC_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PC_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main user interface function to set up the 'Results' card under the Parameter Calculations module's 'Run Simulation' tab — PC_ui","text":"Five user interface drop tabs identifying space two plots, two tables, download button parameter calculation results.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Plotdf_Prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearrange the data frame of compounds and their OED samples by median OED sample and separate the 5th quantile OED for each chemical — Plotdf_Prep","title":"Rearrange the data frame of compounds and their OED samples by median OED sample and separate the 5th quantile OED for each chemical — Plotdf_Prep","text":"function prepares data frames plotting OED OED samples returned instead singular OED per compound. compounds arranged ascending order based median OED sample compound data frame 5th quantile OED arranged order.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Plotdf_Prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearrange the data frame of compounds and their OED samples by median OED sample and separate the 5th quantile OED for each chemical — Plotdf_Prep","text":"","code":"Plotdf_Prep(df, pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Plotdf_Prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearrange the data frame of compounds and their OED samples by median OED sample and separate the 5th quantile OED for each chemical — Plotdf_Prep","text":"df data frame chemical names outputted OED samples IVIVEsol() pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Plotdf_Prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rearrange the data frame of compounds and their OED samples by median OED sample and separate the 5th quantile OED for each chemical — Plotdf_Prep","text":"list two elements: OED samples 5th quantile OEDs arranged median value","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPar.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate plots of calculated elimination rate, volume of distribution, half-life, and total plasma clearance values for a list of chemicals — plotPar","title":"Generate plots of calculated elimination rate, volume of distribution, half-life, and total plasma clearance values for a list of chemicals — plotPar","text":"function generates plots calculated elimination rate, volume distribution, half-life, total plasma clearance values list compounds. plot values arranged ascending order plot log10 y-axis scale, desired user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate plots of calculated elimination rate, volume of distribution, half-life, and total plasma clearance values for a list of chemicals — plotPar","text":"","code":"plotPar(soldata, pars, logscale)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate plots of calculated elimination rate, volume of distribution, half-life, and total plasma clearance values for a list of chemicals — plotPar","text":"soldata data frame calculated elimination rates, volumes distribution, half life, total clearance measures simulated compound. pars list user input parameters entire app logscale Checkbox input value indicating user wanted y-axis plots log10 scale; either 'TRUE' log10 y-axis 'FALSE' linear y-axis","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate plots of calculated elimination rate, volume of distribution, half-life, and total plasma clearance values for a list of chemicals — plotPar","text":"list four ggplot2 objects plots elimination rate, volume distribution, half life, total plasma clearance","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate partition coefficient plots for simulated chemicals — plotPCs","title":"Generate partition coefficient plots for simulated chemicals — plotPCs","text":"function generates plots partition coefficients simulated compounds. plot represents different tissue tissue's partition coefficients arranged ascending order. plots plotted log10 y-axis scale, desired user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate partition coefficient plots for simulated chemicals — plotPCs","text":"","code":"plotPCs(soldata, pars, logscale)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate partition coefficient plots for simulated chemicals — plotPCs","text":"soldata data frame calculated partition coefficients simulated compound. pars list user input parameters entire app logscale Checkbox input value indicating user wanted y-axis plots log10 scale; either 'TRUE' log10 y-axis 'FALSE' linear y-axis","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plotPCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate partition coefficient plots for simulated chemicals — plotPCs","text":"list four ggplot2 objects plots elimination rate, volume distribution, half life, total plasma clearance","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the ggplot2 plotting object for the multi-curve plot — plottingfunc_all","title":"Generate the ggplot2 plotting object for the multi-curve plot — plottingfunc_all","text":"function creates plots (number plots = number model compartments outputted httk's solve_model function) display concentration- time profile curves simulated compounds within model compartment. Plots created using ggplot ggplot2 R package. list plots returned (one plot per compartment plus plot displaying plot legend).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the ggplot2 plotting object for the multi-curve plot — plottingfunc_all","text":"","code":"plottingfunc_all(sol_array)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the ggplot2 plotting object for the multi-curve plot — plottingfunc_all","text":"sol_array concentration-time profile solution array entries signify concentration compound specific time particular compartment. Pages array correspond compounds, rows time points, columns model compartments outputs.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the ggplot2 plotting object for the multi-curve plot — plottingfunc_all","text":"list containing two elements, first one plot list element list representing different compound (plot legends) second element data frame hexadecimal RGB triplet colors defines plotting color compound","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the plots for the individual plots drop down — plottingfunc_individual","title":"Generate the plots for the individual plots drop down — plottingfunc_individual","text":"function creates N plots, N number compounds simulated concentration-time profile simulations. plot list compound consists individual plotting object model compartment.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the plots for the individual plots drop down — plottingfunc_individual","text":"","code":"plottingfunc_individual(sol_array, plt_colors)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the plots for the individual plots drop down — plottingfunc_individual","text":"sol_array concentration-time profile solution array entries signify concentration compound specific time particular compartment. Pages array correspond compounds, rows time points, columns model compartments outputs. plt_colors data frame colors entry hexadecimal RGB triplet one compound","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plottingfunc_individual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the plots for the individual plots drop down — plottingfunc_individual","text":"list contains lists. list element makes one full plotting figure one compound (.e. plot subplots).","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Steady state module plot labeling function — plot_labels","title":"Steady state module plot labeling function — plot_labels","text":"function generates plotting labels (y-axis title expressions) steady state concentrations plot.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Steady state module plot labeling function — plot_labels","text":"","code":"plot_labels(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Steady state module plot labeling function — plot_labels","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Steady state module plot labeling function — plot_labels","text":"list containing plots labels title y-axis.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_logscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a plot with a log10 scale y-axis — plot_logscale","title":"Generate a plot with a log10 scale y-axis — plot_logscale","text":"function transforms given plot y-axis scale log10 scale instead linear scale.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_logscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a plot with a log10 scale y-axis — plot_logscale","text":"","code":"plot_logscale(plt, sol_vec)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_logscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a plot with a log10 scale y-axis — plot_logscale","text":"plt ggplot2 plot object add log10 y-axis sol_vec vector y-values plotted plt","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plot_logscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a plot with a log10 scale y-axis — plot_logscale","text":"plot plt log10 y-axis","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plt_arrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange individual compound plots — plt_arrange","title":"Arrange individual compound plots — plt_arrange","text":"function takes list plots single compound arranges one plot. single final plot stored list rendered called module output.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plt_arrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange individual compound plots — plt_arrange","text":"","code":"plt_arrange(plt_list)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plt_arrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange individual compound plots — plt_arrange","text":"plt_list list individual plots (ggplot2 objects) output, list object main plotting object one compound. compound's plotting object list elements subplot (ggplot2 object) compound's concentration-time profile within specifc model compartment","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/plt_arrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange individual compound plots — plt_arrange","text":"list arranged individual concentration-time profile plots","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadCompsInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the drop down list of preloaded compounds available to simulate in httk — PreloadCompsInput","title":"Generate the drop down list of preloaded compounds available to simulate in httk — PreloadCompsInput","text":"function creates drop list preloaded compounds users select 'Preloaded Compounds' card 'Compound Selection' tab. Four sets silico parameters (three clint fup values, one caco2 values) loaded desired user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadCompsInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the drop down list of preloaded compounds available to simulate in httk — PreloadCompsInput","text":"","code":"PreloadCompsInput(   func,   species,   defaulthuman,   insilico,   model,   honda,   comptype )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadCompsInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the drop down list of preloaded compounds available to simulate in httk — PreloadCompsInput","text":"func user-selected desired output species user-selected species defaulthuman user-selected human vitro data preference animal species selected insilico user-selected preference use silico generated parameters vitro data missing model user-selected species honda selected IVIVE assumption (either NULL, Honda1, Honda2, Honda3, Honda4), applicable comptype user-selected subset compounds search; either \"Choose available chemicals\" \"Choose food relevant chemicals\"","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadCompsInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the drop down list of preloaded compounds available to simulate in httk — PreloadCompsInput","text":"drop list preloaded available compounds within ToCS","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadComps_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile two outputs for the 'Preloaded Compounds' card under the 'Compound Selection' card — PreloadComps_UI","title":"Compile two outputs for the 'Preloaded Compounds' card under the 'Compound Selection' card — PreloadComps_UI","text":"function presents user interface preloaded compounds section 'Preloaded Compounds' card 'Compound Selection' tab","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadComps_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile two outputs for the 'Preloaded Compounds' card under the 'Compound Selection' card — PreloadComps_UI","text":"","code":"PreloadComps_UI(func, spec, defaulthuman, model, insilicopars, honda, comptype)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadComps_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile two outputs for the 'Preloaded Compounds' card under the 'Compound Selection' card — PreloadComps_UI","text":"func User selection input$func ID; either \"Concentration-time profiles\", \"Steady state concentrations\", \"vitro vivo extrapolation (IVIVE)\", \"Parameter calculations\" spec User selection input$spec ID; either \"Dog\",\"Human\",\"Mouse\", \"Rabbit\",\"Rat\" defaulthuman User selection input$defaulttoHuman; either \"Yes\" using human vitro data place animal data \"\" using animal data model User selection input$model ID; either \"3compartmentss\", \"Schmitt\",\"1compartment\",\"3compartment\", \"pbtk\" \"fetal_pbtk\" insilicopars User selection input$insilicopars ID; either \"Yes, load silico parameters\" \", load silico parameters\" honda User selection input$HondaIVIVE ID; either \"NULL\",\"Honda1\", \"Honda2\",\"Honda3\",\"Honda4\" comptype User selection input$comptype ID; either \"Choose available chemicals\" \"Choose food relevant chemicals\"","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PreloadComps_UI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile two outputs for the 'Preloaded Compounds' card under the 'Compound Selection' card — PreloadComps_UI","text":"user interface objects (drop selections) 'Preloaded Compounds' card 'Compound Selection' tab. objects outputted vary depending user's input selection.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PrepExposureData.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the exposure data file for plotting — PrepExposureData","title":"Prepare the exposure data file for plotting — PrepExposureData","text":"function prepares user uploaded exposure data file plotting. function assures chemicals exposure data file order original chemical list, updates data model output units different default mg/kg/day, calculates maximal exposure data estimate compound. updated exposure data frame returned.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PrepExposureData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the exposure data file for plotting — PrepExposureData","text":"","code":"PrepExposureData(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PrepExposureData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the exposure data file for plotting — PrepExposureData","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/PrepExposureData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare the exposure data file for plotting — PrepExposureData","text":"data frame exposure data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Rearr_TKSumArray.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearrange the toxicokinetic (TK) array into a TK matrix — Rearr_TKSumArray","title":"Rearrange the toxicokinetic (TK) array into a TK matrix — Rearr_TKSumArray","text":"function changes inputted toxicokinetic summary array matrix assigns names matrix's rows (compartment names) columns (tkstatistic.compoundname).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Rearr_TKSumArray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearrange the toxicokinetic (TK) array into a TK matrix — Rearr_TKSumArray","text":"","code":"Rearr_TKSumArray(tk_sum_array, pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Rearr_TKSumArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearrange the toxicokinetic (TK) array into a TK matrix — Rearr_TKSumArray","text":"tk_sum_array array TK summary data page array represents TK summary particular compound rows representing model compartment columns Tmax, Cmax, AUC pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Rearr_TKSumArray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rearrange the toxicokinetic (TK) array into a TK matrix — Rearr_TKSumArray","text":"matrix rows representing model compartments 3n columns (n compounds simulated compounds) compound Tmax, Cmax, AUC column","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RemoveCols.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove columns from the concentration-time profile solution matrix — RemoveCols","title":"Remove columns from the concentration-time profile solution matrix — RemoveCols","text":"function cuts columns considered 'extra' concentration-time profile solution matrix outputted httk's solve_model function. includes columns essentially 'repeat' quantities (.e. removes column specifying amount chemical compartment concentration chemical compartment already outputted).","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RemoveCols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove columns from the concentration-time profile solution matrix — RemoveCols","text":"","code":"RemoveCols(sol, model)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RemoveCols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove columns from the concentration-time profile solution matrix — RemoveCols","text":"sol solution matrix httk's 'solve_model' function model simulated model; either \"1compartment\",\"3compartment\",\"pbtk\", \"fetal_pbtk\"","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RemoveCols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove columns from the concentration-time profile solution matrix — RemoveCols","text":"trimmed solution matrix less columns sol; columns AUC column removed model \"fetal_pbtk\" model \"fetal_pbtk\", columns Qthyroid removed.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/returntimes_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Has the user entered a beginning output time of 91 days or later? — returntimes_cond","title":"Has the user entered a beginning output time of 91 days or later? — returntimes_cond","text":"function relays user return times fetal_pbtk model must start 91 days later. restriction model outputs times 13 weeks later.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/returntimes_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has the user entered a beginning output time of 91 days or later? — returntimes_cond","text":"","code":"returntimes_cond(   value,   input,   message = \"A beginning output time of 91 days (13 weeks) or later must be entered\" )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/returntimes_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has the user entered a beginning output time of 91 days or later? — returntimes_cond","text":"value Shiny input ID corresponding input object input reactive inputs associated session message character string return user condition true","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/returntimes_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Has the user entered a beginning output time of 91 days or later? — returntimes_cond","text":"condition FALSE, return message. condition TRUE, return nothing.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_Actions.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Actions' card on the 'Run Simulation' tab — RS_Actions","title":"User interface for the 'Actions' card on the 'Run Simulation' tab — RS_Actions","text":"function outputs user interface 'Actions' card 'Run Simulation' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_Actions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Actions' card on the 'Run Simulation' tab — RS_Actions","text":"","code":"RS_Actions()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_Actions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Actions' card on the 'Run Simulation' tab — RS_Actions","text":"'Actions' card provides instructions user run simulations, two buttons user press run reset simulation, option log scale plots (applicable module chosen)","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_Results.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Results' card on the 'Run Simulation' tab — RS_Results","title":"User interface for the 'Results' card on the 'Run Simulation' tab — RS_Results","text":"function outputs user interface 'Results' card 'Run Simulation' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_Results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Results' card on the 'Run Simulation' tab — RS_Results","text":"","code":"RS_Results()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_Results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Results' card on the 'Run Simulation' tab — RS_Results","text":"'Results' card displays number drop menus filled output results depending module function chosen","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_SelectedCompounds.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the 'Selected Compounds' card on the 'Run Simulation' tab — RS_SelectedCompounds","title":"User interface for the 'Selected Compounds' card on the 'Run Simulation' tab — RS_SelectedCompounds","text":"function outputs user interface 'Selected Compounds' card 'Run Simulation' tab GUI.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_SelectedCompounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the 'Selected Compounds' card on the 'Run Simulation' tab — RS_SelectedCompounds","text":"","code":"RS_SelectedCompounds()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/RS_SelectedCompounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the 'Selected Compounds' card on the 'Run Simulation' tab — RS_SelectedCompounds","text":"'Selected Compounds' card shows table compounds selected user simulation","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_ADME_Model.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve the ADME model — Run_ADME_Model","title":"Solve the ADME model — Run_ADME_Model","text":"function solves model generate concentration-time profiles list selected compounds. concentrations generated using 'httk' package's 'solve_model' function selected model parameters.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_ADME_Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve the ADME model — Run_ADME_Model","text":"","code":"Run_ADME_Model(i, pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_ADME_Model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve the ADME model — Run_ADME_Model","text":"numerical value; index number compound simulate user selected chemical list pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_ADME_Model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve the ADME model — Run_ADME_Model","text":"matrix time course data selected model simulation parameters. first column time points remaining columns concentrations model compartment, plasma concentration, area curve plasma compartment. row represents concentration listed time.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_Simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the selected module with all user selected inputs — Run_Simulation","title":"Run the selected module with all user selected inputs — Run_Simulation","text":"function returns module-appropriate output 'Results' card 'Run Simulation' tab, form either plots/table/text error message user select/fix errors input parameters uploaded files.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_Simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the selected module with all user selected inputs — Run_Simulation","text":"","code":"Run_Simulation(   parent_adme_iv,   parent_ss_iv,   parent_ivive_iv,   parent_pc_iv,   input,   AllInputs )"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_Simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the selected module with all user selected inputs — Run_Simulation","text":"parent_adme_iv shiny input validator object concentration- time profile module inputs parent_ss_iv shiny input validator object steady state concentration module inputs parent_ivive_iv shiny input validator object IVIVE module inputs parent_pc_iv shiny input validator object parameter calculations module inputs input 'input' object used prefix ID's (entered 'input') AllInputs named list parameter values created GUI, named accordingly parnames()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Run_Simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the selected module with all user selected inputs — Run_Simulation","text":"module outputs selected module error notification indicating missing invalid parameters","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/run_ToCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the ToCS App — run_ToCS","title":"Run the ToCS App — run_ToCS","text":"primary function run ToCS app ToCS package loaded R opened web.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/run_ToCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the ToCS App — run_ToCS","text":"","code":"run_ToCS()"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/run_ToCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the ToCS App — run_ToCS","text":"ToCS interface","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/scat_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a scatter plot of steady state concentrations for the steady state concentrations module — scat_plot","title":"Create a scatter plot of steady state concentrations for the steady state concentrations module — scat_plot","text":"function generates scatter plot ggplot object containing steady state concentrations simulated compounds. plot log10 y-axis scale desired user.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/scat_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a scatter plot of steady state concentrations for the steady state concentrations module — scat_plot","text":"","code":"scat_plot(sol, pars, logscale)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/scat_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a scatter plot of steady state concentrations for the steady state concentrations module — scat_plot","text":"sol data frame steady state concentrations pars list user input parameters entire app logscale log10 y-axis scale checkbox input signify whether user wants plot log10 y-axis scale","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/scat_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a scatter plot of steady state concentrations for the steady state concentrations module — scat_plot","text":"scatter plot object steady state concentrations, either linear log10 scale y-axis","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_AdjFub.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of chemical fraction unbound in plasma calculation preferences for the user to select from — selectInput_AdjFub","title":"Generates a drop down list of chemical fraction unbound in plasma calculation preferences for the user to select from — selectInput_AdjFub","text":"Generates drop list chemical fraction unbound plasma calculation preferences user select ","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_AdjFub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of chemical fraction unbound in plasma calculation preferences for the user to select from — selectInput_AdjFub","text":"","code":"selectInput_AdjFub(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_AdjFub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of chemical fraction unbound in plasma calculation preferences for the user to select from — selectInput_AdjFub","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_AdjFub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of chemical fraction unbound in plasma calculation preferences for the user to select from — selectInput_AdjFub","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_AdjFub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of chemical fraction unbound in plasma calculation preferences for the user to select from — selectInput_AdjFub","text":"","code":"selectInput_AdjFub(\"adj_fub\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"adj_fub-label\" for=\"adj_fub\">Select whether to adjust the chemical fraction unbound #>                       in presence of plasma proteins for lipid binding.<\/label> #>   <div> #>     <select id=\"adj_fub\" class=\"shiny-input-select\"><option value=\"Yes, adjust the fraction of unbound plasma (default)\" selected>Yes, adjust the fraction of unbound plasma (default)<\/option> #> <option value=\"No, do not adjust the fraction of unbound plasma\">No, do not adjust the fraction of unbound plasma<\/option><\/select> #>     <script type=\"application/json\" data-for=\"adj_fub\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ADMEdoseunits.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a drop down list of dose units to select from — selectInput_ADMEdoseunits","title":"Generate a drop down list of dose units to select from — selectInput_ADMEdoseunits","text":"Generate drop list dose units select ","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ADMEdoseunits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a drop down list of dose units to select from — selectInput_ADMEdoseunits","text":"","code":"selectInput_ADMEdoseunits(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ADMEdoseunits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a drop down list of dose units to select from — selectInput_ADMEdoseunits","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ADMEdoseunits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a drop down list of dose units to select from — selectInput_ADMEdoseunits","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ADMEdoseunits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a drop down list of dose units to select from — selectInput_ADMEdoseunits","text":"","code":"selectInput_ADMEdoseunits(\"doseunits\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"doseunits-label\" for=\"doseunits\">Select the units of the administered dose(s).<\/label> #>   <div> #>     <select id=\"doseunits\" class=\"shiny-input-select\"><option value=\"mg/kg\" selected>mg/kg<\/option> #> <option value=\"mg\">mg<\/option> #> <option value=\"umol\">umol<\/option><\/select> #>     <script type=\"application/json\" data-for=\"doseunits\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Bioactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of options for the user to select which chemical concentration is treated as bioactive in vivo — selectInput_Bioactive","title":"Generates a drop down list of options for the user to select which chemical concentration is treated as bioactive in vivo — selectInput_Bioactive","text":"Generates drop list options user select chemical concentration treated bioactive vivo","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Bioactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of options for the user to select which chemical concentration is treated as bioactive in vivo — selectInput_Bioactive","text":"","code":"selectInput_Bioactive(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Bioactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of options for the user to select which chemical concentration is treated as bioactive in vivo — selectInput_Bioactive","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Bioactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of options for the user to select which chemical concentration is treated as bioactive in vivo — selectInput_Bioactive","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Bioactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of options for the user to select which chemical concentration is treated as bioactive in vivo — selectInput_Bioactive","text":"","code":"selectInput_Bioactive(\"bioactiveIVIVE\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"bioactiveIVIVE-label\" for=\"bioactiveIVIVE\">Select which chemical concentration is treated as #>                       bioactive in vivo.<\/label> #>   <div> #>     <select id=\"bioactiveIVIVE\" class=\"shiny-input-select\"><option value=\"Total chemical concentration (default)\" selected>Total chemical concentration (default)<\/option> #> <option value=\"Unbound (free) plasma concentration\">Unbound (free) plasma concentration<\/option><\/select> #>     <script type=\"application/json\" data-for=\"bioactiveIVIVE\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_CompPreference.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the drop down menu where the user can specify the types of chemicals to choose from — selectInput_CompPreference","title":"Generate the drop down menu where the user can specify the types of chemicals to choose from — selectInput_CompPreference","text":"Generate drop menu user can specify types chemicals choose ","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_CompPreference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the drop down menu where the user can specify the types of chemicals to choose from — selectInput_CompPreference","text":"","code":"selectInput_CompPreference(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_CompPreference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the drop down menu where the user can specify the types of chemicals to choose from — selectInput_CompPreference","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_CompPreference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the drop down menu where the user can specify the types of chemicals to choose from — selectInput_CompPreference","text":"Drop menu options either set simulated chemicals demo list, select chemicals entire available list, select chemicals list food food-related chemicals ","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_CompPreference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the drop down menu where the user can specify the types of chemicals to choose from — selectInput_CompPreference","text":"","code":"selectInput_CompPreference(\"PreferredCompLst\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"PreferredCompLst-label\" for=\"PreferredCompLst\">Select the types of compounds you want to simulate.<\/label> #>   <div> #>     <select id=\"PreferredCompLst\" class=\"shiny-input-select\"><option value=\"Choose from all available chemicals\" selected>Choose from all available chemicals<\/option> #> <option value=\"Choose from only food relevant chemicals\">Choose from only food relevant chemicals<\/option><\/select> #>     <script type=\"application/json\" data-for=\"PreferredCompLst\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DefaultToHuman.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the 'use of human data in place of animal data if unavailable' drop down menu — selectInput_DefaultToHuman","title":"Generate the 'use of human data in place of animal data if unavailable' drop down menu — selectInput_DefaultToHuman","text":"Generate 'use human data place animal data unavailable' drop menu","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DefaultToHuman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the 'use of human data in place of animal data if unavailable' drop down menu — selectInput_DefaultToHuman","text":"","code":"selectInput_DefaultToHuman(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DefaultToHuman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the 'use of human data in place of animal data if unavailable' drop down menu — selectInput_DefaultToHuman","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DefaultToHuman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the 'use of human data in place of animal data if unavailable' drop down menu — selectInput_DefaultToHuman","text":"Drop menu human data preference use ToCS, applicable","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DefaultToHuman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the 'use of human data in place of animal data if unavailable' drop down menu — selectInput_DefaultToHuman","text":"","code":"selectInput_DefaultToHuman(\"defaulttohuman\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"defaulttohuman-label\" for=\"defaulttohuman\">Do you want to use human in vitro data if in vitro data for #>                       the selected species is missing?<\/label> #>   <div> #>     <select id=\"defaulttohuman\" class=\"shiny-input-select\"><option value=\"Yes\" selected>Yes<\/option> #> <option value=\"No\">No<\/option><\/select> #>     <script type=\"application/json\" data-for=\"defaulttohuman\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DoseRoute.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a drop down menu for administration method of compounds during ADME simulation — selectInput_DoseRoute","title":"Generate a drop down menu for administration method of compounds during ADME simulation — selectInput_DoseRoute","text":"Generate drop menu administration method compounds ADME simulation","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DoseRoute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a drop down menu for administration method of compounds during ADME simulation — selectInput_DoseRoute","text":"","code":"selectInput_DoseRoute(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DoseRoute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a drop down menu for administration method of compounds during ADME simulation — selectInput_DoseRoute","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DoseRoute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a drop down menu for administration method of compounds during ADME simulation — selectInput_DoseRoute","text":"drop drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_DoseRoute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a drop down menu for administration method of compounds during ADME simulation — selectInput_DoseRoute","text":"","code":"selectInput_DoseRoute(\"doseroute\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"doseroute-label\" for=\"doseroute\">Select the administration method of the compound(s).<\/label> #>   <div> #>     <select id=\"doseroute\" class=\"shiny-input-select\"><option value=\"oral\" selected>oral<\/option><\/select> #>     <script type=\"application/json\" data-for=\"doseroute\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose absorbed from the gut lumen into the gut if bioavailability data is unavailable — selectInput_Fabs","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose absorbed from the gut lumen into the gut if bioavailability data is unavailable — selectInput_Fabs","text":"Generates drop list user can select preference whether caco-2 apical--basal value defined numericInput_CacoDefault() used estimate vivo measured fraction oral dose absorbed gut lumen gut bioavailability data unavailable","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose absorbed from the gut lumen into the gut if bioavailability data is unavailable — selectInput_Fabs","text":"","code":"selectInput_Fabs(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose absorbed from the gut lumen into the gut if bioavailability data is unavailable — selectInput_Fabs","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose absorbed from the gut lumen into the gut if bioavailability data is unavailable — selectInput_Fabs","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose absorbed from the gut lumen into the gut if bioavailability data is unavailable — selectInput_Fabs","text":"","code":"selectInput_Fabs(\"caco_fabs\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"caco_fabs-label\" for=\"caco_fabs\">Select whether to use the Caco2.Pab value set above #>                       to estimate F_abs (the in vivo measured fraction of an #>                       oral dose absorbed from the gut lumen into the gut) if #>                       bioavailability data is unavailable.<\/label> #>   <div> #>     <select id=\"caco_fabs\" class=\"shiny-input-select\"><option value=\"Use the Caco2.Pab value selected above (default)\" selected>Use the Caco2.Pab value selected above (default)<\/option> #> <option value=\"Do not use the Caco2.Pab value selected above\">Do not use the Caco2.Pab value selected above<\/option><\/select> #>     <script type=\"application/json\" data-for=\"caco_fabs\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fgut.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose that passes gut metabolism and clearance if bioavailability data is unavailable — selectInput_Fgut","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose that passes gut metabolism and clearance if bioavailability data is unavailable — selectInput_Fgut","text":"Generates drop list user can select preference whether caco-2 apical--basal value defined numericInput_CacoDefault() used estimate vivo measured fraction oral dose passes gut metabolism clearance bioavailability data unavailable","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fgut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose that passes gut metabolism and clearance if bioavailability data is unavailable — selectInput_Fgut","text":"","code":"selectInput_Fgut(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fgut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose that passes gut metabolism and clearance if bioavailability data is unavailable — selectInput_Fgut","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fgut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose that passes gut metabolism and clearance if bioavailability data is unavailable — selectInput_Fgut","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Fgut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list where the user can select their preference for whether the caco-2 apical-to-basal value defined in numericInput_CacoDefault() should be used to estimate the in vivo measured fraction of an oral dose that passes gut metabolism and clearance if bioavailability data is unavailable — selectInput_Fgut","text":"","code":"selectInput_Fgut(\"caco_fgut\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"caco_fgut-label\" for=\"caco_fgut\">Select whether to use the Caco2.Pab value set above to #>                       calculate F_gut (the in vivo measured fraction of an oral #>                       dose that passes gut metabolism and clearance) if #>                       bioavailability data is unavailable.<\/label> #>   <div> #>     <select id=\"caco_fgut\" class=\"shiny-input-select\"><option value=\"Use the Caco2.Pab value selected above (default)\" selected>Use the Caco2.Pab value selected above (default)<\/option> #> <option value=\"Do not use the Caco2.Pab value selected above\">Do not use the Caco2.Pab value selected above<\/option><\/select> #>     <script type=\"application/json\" data-for=\"caco_fgut\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Function.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the 'Output' drop down menu — selectInput_Function","title":"Generate the 'Output' drop down menu — selectInput_Function","text":"Generate 'Output' drop menu","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the 'Output' drop down menu — selectInput_Function","text":"","code":"selectInput_Function(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the 'Output' drop down menu — selectInput_Function","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the 'Output' drop down menu — selectInput_Function","text":"Drop menu desired output ToCS","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the 'Output' drop down menu — selectInput_Function","text":"","code":"selectInput_Function(\"func\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"func-label\" for=\"func\">Select the desired output.<\/label> #>   <div> #>     <select id=\"func\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"Concentration-time profiles\">Concentration-time profiles<\/option> #> <option value=\"Steady state concentrations\">Steady state concentrations<\/option> #> <option value=\"In vitro in vivo extrapolation (IVIVE)\">In vitro in vivo extrapolation (IVIVE)<\/option> #> <option value=\"Parameter calculations\">Parameter calculations<\/option><\/select> #>     <script type=\"application/json\" data-for=\"func\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_HondaCond.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of IVIVE assumptions for the user to select from during the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_HondaCond","title":"Generates a drop down list of IVIVE assumptions for the user to select from during the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_HondaCond","text":"Generates drop list IVIVE assumptions user select vitro vivo extrapolation (IVIVE) simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_HondaCond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of IVIVE assumptions for the user to select from during the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_HondaCond","text":"","code":"selectInput_HondaCond(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_HondaCond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of IVIVE assumptions for the user to select from during the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_HondaCond","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_HondaCond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of IVIVE assumptions for the user to select from during the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_HondaCond","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_HondaCond.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of IVIVE assumptions for the user to select from during the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_HondaCond","text":"","code":"selectInput_HondaCond(\"HondaIVIVE\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"HondaIVIVE-label\" for=\"HondaIVIVE\">Select an IVIVE assumption to implement. For any input #>                       nominal bioactive concentration in vitro, the Honda1 #>                       assumption is recommended. Leave on 'NULL' if no #>                       assumptions are to be applied. See the 'IVIVE Simulation Examples' vignette for the #>                       description of the below assumption categories.<\/label> #>   <div> #>     <select id=\"HondaIVIVE\" class=\"shiny-input-select\"><option value=\"NULL\" selected>NULL<\/option> #> <option value=\"Honda1\">Honda1<\/option> #> <option value=\"Honda2\">Honda2<\/option> #> <option value=\"Honda3\">Honda3<\/option> #> <option value=\"Honda4\">Honda4<\/option><\/select> #>     <script type=\"application/json\" data-for=\"HondaIVIVE\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InitialCondCustom.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of options for whether the user wants to customize initial condition — selectInput_InitialCondCustom","title":"Generates a drop down list of options for whether the user wants to customize initial condition — selectInput_InitialCondCustom","text":"Generates drop list options whether user wants customize initial condition","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InitialCondCustom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of options for whether the user wants to customize initial condition — selectInput_InitialCondCustom","text":"","code":"selectInput_InitialCondCustom(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InitialCondCustom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of options for whether the user wants to customize initial condition — selectInput_InitialCondCustom","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InitialCondCustom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of options for whether the user wants to customize initial condition — selectInput_InitialCondCustom","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InitialCondCustom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of options for whether the user wants to customize initial condition — selectInput_InitialCondCustom","text":"","code":"selectInput_InitialCondCustom(\"init_cond_opts\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"init_cond_opts-label\" for=\"init_cond_opts\">Would you like to change the initial compound amount in #>                       each compartment from its default value of 0 (no compound #>                       in the compartment when the simulation begins)?<\/label> #>   <div> #>     <select id=\"init_cond_opts\" class=\"shiny-input-select\"><option value=\"No, keep the default amounts (default)\" selected>No, keep the default amounts (default)<\/option> #> <option value=\"Yes, enter my own initial amounts\">Yes, enter my own initial amounts<\/option><\/select> #>     <script type=\"application/json\" data-for=\"init_cond_opts\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InSilicoPars.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the 'In silico parameter preference' drop down menu — selectInput_InSilicoPars","title":"Generate the 'In silico parameter preference' drop down menu — selectInput_InSilicoPars","text":"Generate 'silico parameter preference' drop menu","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InSilicoPars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the 'In silico parameter preference' drop down menu — selectInput_InSilicoPars","text":"","code":"selectInput_InSilicoPars(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InSilicoPars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the 'In silico parameter preference' drop down menu — selectInput_InSilicoPars","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InSilicoPars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the 'In silico parameter preference' drop down menu — selectInput_InSilicoPars","text":"Drop menu options either use silico generated clint (instrinic hepatic clearance) fup (fraction unbound plasma) absence vitro data selected species","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_InSilicoPars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the 'In silico parameter preference' drop down menu — selectInput_InSilicoPars","text":"","code":"selectInput_InSilicoPars(\"insilicopars\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"insilicopars-label\" for=\"insilicopars\">Select whether to use in silico generated parameters for #>                       compounds with missing in vitro data. These parameters will #>                       not overwrite existing in vitro data, and it will expand #>                       the number of compounds available.<\/label> #>   <div> #>     <select id=\"insilicopars\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"Yes, load in silico parameters\">Yes, load in silico parameters<\/option> #> <option value=\"No, do not load in silico parameters\">No, do not load in silico parameters<\/option><\/select> #>     <script type=\"application/json\" data-for=\"insilicopars\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_IVIVEoutunits.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of dose output units for the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_IVIVEoutunits","title":"Generates a drop down list of dose output units for the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_IVIVEoutunits","text":"Generates drop list dose output units vitro vivo extrapolation (IVIVE) simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_IVIVEoutunits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of dose output units for the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_IVIVEoutunits","text":"","code":"selectInput_IVIVEoutunits(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_IVIVEoutunits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of dose output units for the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_IVIVEoutunits","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_IVIVEoutunits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of dose output units for the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_IVIVEoutunits","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_IVIVEoutunits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of dose output units for the in vitro in vivo extrapolation (IVIVE) simulations — selectInput_IVIVEoutunits","text":"","code":"selectInput_IVIVEoutunits(\"modelIVIVEout_units\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"modelIVIVEout_units-label\" for=\"modelIVIVEout_units\">Select the dose output units from either mg/kg BW/day #>                       (mgpkgpday) (default) or umol/kg BW/day (umolpkgpday).<\/label> #>   <div> #>     <select id=\"modelIVIVEout_units\" class=\"shiny-input-select\"><option value=\"mgpkgpday\" selected>mgpkgpday<\/option> #> <option value=\"umolpkgpday\">umolpkgpday<\/option><\/select> #>     <script type=\"application/json\" data-for=\"modelIVIVEout_units\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Keep100.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list where the user can select their preference for whether to keep F_abs and F_gut at 100% availability — selectInput_Keep100","title":"Generates a drop down list where the user can select their preference for whether to keep F_abs and F_gut at 100% availability — selectInput_Keep100","text":"Generates drop list user can select preference whether keep F_abs F_gut 100% availability","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Keep100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list where the user can select their preference for whether to keep F_abs and F_gut at 100% availability — selectInput_Keep100","text":"","code":"selectInput_Keep100(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Keep100.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list where the user can select their preference for whether to keep F_abs and F_gut at 100% availability — selectInput_Keep100","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Keep100.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list where the user can select their preference for whether to keep F_abs and F_gut at 100% availability — selectInput_Keep100","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Keep100.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list where the user can select their preference for whether to keep F_abs and F_gut at 100% availability — selectInput_Keep100","text":"","code":"selectInput_Keep100(\"caco_keep100\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"caco_keep100-label\" for=\"caco_keep100\">Select whether to keep F_abs and F_gut at 100% #>                       availability (which overwrites all other bioavailability #>                       parameter settings above).<\/label> #>   <div> #>     <select id=\"caco_keep100\" class=\"shiny-input-select\"><option value=\"Do not keep Fabs and Fgut at 100% availability (default)\" selected>Do not keep Fabs and Fgut at 100% availability (default)<\/option> #> <option value=\"Keep Fabs and Fgut at 100% availability\">Keep Fabs and Fgut at 100% availability<\/option><\/select> #>     <script type=\"application/json\" data-for=\"caco_keep100\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_MultipleDosesQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a drop down list of multiple dosing frequency options for ADME simulations — selectInput_MultipleDosesQ","title":"Generate a drop down list of multiple dosing frequency options for ADME simulations — selectInput_MultipleDosesQ","text":"Generate drop list multiple dosing frequency options ADME simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_MultipleDosesQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a drop down list of multiple dosing frequency options for ADME simulations — selectInput_MultipleDosesQ","text":"","code":"selectInput_MultipleDosesQ(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_MultipleDosesQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a drop down list of multiple dosing frequency options for ADME simulations — selectInput_MultipleDosesQ","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_MultipleDosesQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a drop down list of multiple dosing frequency options for ADME simulations — selectInput_MultipleDosesQ","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_MultipleDosesQ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a drop down list of multiple dosing frequency options for ADME simulations — selectInput_MultipleDosesQ","text":"","code":"selectInput_MultipleDosesQ(\"multdose\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"multdose-label\" for=\"multdose\">Are equal doses given evenly across a 24 hour period? #>                       For example, 1 mg/kg BW every 8 hours.<\/label> #>   <div> #>     <select id=\"multdose\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"Yes\">Yes<\/option> #> <option value=\"No\">No<\/option><\/select> #>     <script type=\"application/json\" data-for=\"multdose\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_NumDoses.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a drop down list that describes the dosing frequency for ADME simulations — selectInput_NumDoses","title":"Generate a drop down list that describes the dosing frequency for ADME simulations — selectInput_NumDoses","text":"Generate drop list describes dosing frequency ADME simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_NumDoses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a drop down list that describes the dosing frequency for ADME simulations — selectInput_NumDoses","text":"","code":"selectInput_NumDoses(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_NumDoses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a drop down list that describes the dosing frequency for ADME simulations — selectInput_NumDoses","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_NumDoses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a drop down list that describes the dosing frequency for ADME simulations — selectInput_NumDoses","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_NumDoses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a drop down list that describes the dosing frequency for ADME simulations — selectInput_NumDoses","text":"","code":"selectInput_NumDoses(\"dosenum\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"dosenum-label\" for=\"dosenum\">Select the dosing frequency.<\/label> #>   <div> #>     <select id=\"dosenum\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"Single Dose\">Single Dose<\/option> #> <option value=\"Multiple Doses\">Multiple Doses<\/option><\/select> #>     <script type=\"application/json\" data-for=\"dosenum\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ODEmethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of options for the ODE solver method for concentration-time profile simulations — selectInput_ODEmethod","title":"Generates a drop down list of options for the ODE solver method for concentration-time profile simulations — selectInput_ODEmethod","text":"Generates drop list options ODE solver method concentration-time profile simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ODEmethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of options for the ODE solver method for concentration-time profile simulations — selectInput_ODEmethod","text":"","code":"selectInput_ODEmethod(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ODEmethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of options for the ODE solver method for concentration-time profile simulations — selectInput_ODEmethod","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ODEmethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of options for the ODE solver method for concentration-time profile simulations — selectInput_ODEmethod","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ODEmethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of options for the ODE solver method for concentration-time profile simulations — selectInput_ODEmethod","text":"","code":"selectInput_ODEmethod(\"odemethod\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"odemethod-label\" for=\"odemethod\">Select the ODE solver method. See R documentation on the #>                       'deSolve' function for method details.<\/label> #>   <div> #>     <select id=\"odemethod\" class=\"shiny-input-select\"><option value=\"lsoda\" selected>lsoda<\/option> #> <option value=\"lsode\">lsode<\/option> #> <option value=\"lsodes\">lsodes<\/option> #> <option value=\"lsodar\">lsodar<\/option> #> <option value=\"vode\">vode<\/option> #> <option value=\"daspk\">daspk<\/option> #> <option value=\"euler\">euler<\/option> #> <option value=\"rk4\">rk4<\/option> #> <option value=\"ode23\">ode23<\/option> #> <option value=\"ode45\">ode45<\/option> #> <option value=\"radau\">radau<\/option> #> <option value=\"bdf\">bdf<\/option> #> <option value=\"bdf_d\">bdf_d<\/option> #> <option value=\"adams\">adams<\/option> #> <option value=\"impAdams\">impAdams<\/option> #> <option value=\"impAdams_d\">impAdams_d<\/option> #> <option value=\"iteration\">iteration<\/option><\/select> #>     <script type=\"application/json\" data-for=\"odemethod\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_OutConc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of the output concentration type for the steady state concentration and IVIVE outputs — selectInput_OutConc","title":"Generates a drop down list of the output concentration type for the steady state concentration and IVIVE outputs — selectInput_OutConc","text":"Generates drop list output concentration type steady state concentration IVIVE outputs","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_OutConc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of the output concentration type for the steady state concentration and IVIVE outputs — selectInput_OutConc","text":"","code":"selectInput_OutConc(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_OutConc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of the output concentration type for the steady state concentration and IVIVE outputs — selectInput_OutConc","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_OutConc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of the output concentration type for the steady state concentration and IVIVE outputs — selectInput_OutConc","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_OutConc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of the output concentration type for the steady state concentration and IVIVE outputs — selectInput_OutConc","text":"","code":"selectInput_OutConc(\"output_concSS\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"output_concSS-label\" for=\"output_concSS\">Select the output concentration type. Selecting 'Tissue' #>                       for the 3compartmentss model will return the whole body #>                       plasma concentration.<\/label> #>   <div> #>     <select id=\"output_concSS\" class=\"shiny-input-select\"><option value=\"blood\">blood<\/option> #> <option value=\"plasma\" selected>plasma<\/option> #> <option value=\"tissue\">tissue<\/option><\/select> #>     <script type=\"application/json\" data-for=\"output_concSS\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div> selectInput_OutConc(\"output_concIVIVE\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"output_concIVIVE-label\" for=\"output_concIVIVE\">Select the output concentration type. Selecting 'Tissue' #>                       for the 3compartmentss model will return the whole body #>                       plasma concentration.<\/label> #>   <div> #>     <select id=\"output_concIVIVE\" class=\"shiny-input-select\"><option value=\"blood\">blood<\/option> #> <option value=\"plasma\" selected>plasma<\/option> #> <option value=\"tissue\">tissue<\/option><\/select> #>     <script type=\"application/json\" data-for=\"output_concIVIVE\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Overwrite.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list where the user can select their preference for whether to overwrite in vivo F_abs and F_gut data (if available) — selectInput_Overwrite","title":"Generates a drop down list where the user can select their preference for whether to overwrite in vivo F_abs and F_gut data (if available) — selectInput_Overwrite","text":"Generates drop list user can select preference whether overwrite vivo F_abs F_gut data (available)","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Overwrite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list where the user can select their preference for whether to overwrite in vivo F_abs and F_gut data (if available) — selectInput_Overwrite","text":"","code":"selectInput_Overwrite(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Overwrite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list where the user can select their preference for whether to overwrite in vivo F_abs and F_gut data (if available) — selectInput_Overwrite","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Overwrite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list where the user can select their preference for whether to overwrite in vivo F_abs and F_gut data (if available) — selectInput_Overwrite","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Overwrite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list where the user can select their preference for whether to overwrite in vivo F_abs and F_gut data (if available) — selectInput_Overwrite","text":"","code":"selectInput_Overwrite(\"caco_overwriteinvivo\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"caco_overwriteinvivo-label\" for=\"caco_overwriteinvivo\">Select whether to overwrite in vivo F_abs and F_gut data #>                       (if available).<\/label> #>   <div> #>     <select id=\"caco_overwriteinvivo\" class=\"shiny-input-select\"><option value=\"Do not overwrite in vivo values (default)\" selected>Do not overwrite in vivo values (default)<\/option> #> <option value=\"Overwrite in vivo values\">Overwrite in vivo values<\/option><\/select> #>     <script type=\"application/json\" data-for=\"caco_overwriteinvivo\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_rb2p.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list where the user selects its ratio of blood to plasma preferences for the specified model — selectInput_rb2p","title":"Generates a drop down list where the user selects its ratio of blood to plasma preferences for the specified model — selectInput_rb2p","text":"Generates drop list user selects ratio blood plasma preferences specified model","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_rb2p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list where the user selects its ratio of blood to plasma preferences for the specified model — selectInput_rb2p","text":"","code":"selectInput_rb2p(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_rb2p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list where the user selects its ratio of blood to plasma preferences for the specified model — selectInput_rb2p","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_rb2p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list where the user selects its ratio of blood to plasma preferences for the specified model — selectInput_rb2p","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_rb2p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list where the user selects its ratio of blood to plasma preferences for the specified model — selectInput_rb2p","text":"","code":"selectInput_rb2p(\"rb2p\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"rb2p-label\" for=\"rb2p\">Select whether to recalculate the chemical concentration #>                       blood to plasma ratio from its in vitro or estimated value #>                       using the hematocrit, fraction unbound in presence of #>                       plasma proteins, and red blood cell partition coefficient.<\/label> #>   <div> #>     <select id=\"rb2p\" class=\"shiny-input-select\"><option value=\"Recalculate\">Recalculate<\/option> #> <option value=\"Do not recalculate (default)\" selected>Do not recalculate (default)<\/option><\/select> #>     <script type=\"application/json\" data-for=\"rb2p\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list where the user chooses their preference on whether regressions are used in the calculation of partition coefficients — selectInput_Regression","title":"Generates a drop down list where the user chooses their preference on whether regressions are used in the calculation of partition coefficients — selectInput_Regression","text":"Generates drop list user chooses preference whether regressions used calculation partition coefficients","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list where the user chooses their preference on whether regressions are used in the calculation of partition coefficients — selectInput_Regression","text":"","code":"selectInput_Regression(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list where the user chooses their preference on whether regressions are used in the calculation of partition coefficients — selectInput_Regression","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list where the user chooses their preference on whether regressions are used in the calculation of partition coefficients — selectInput_Regression","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list where the user chooses their preference on whether regressions are used in the calculation of partition coefficients — selectInput_Regression","text":"","code":"selectInput_Regression(\"regression\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"regression-label\" for=\"regression\">Select whether to use regressions when calculating #>                       partition coefficients.<\/label> #>   <div> #>     <select id=\"regression\" class=\"shiny-input-select\"><option value=\"Use regressions (default)\" selected>Use regressions (default)<\/option> #> <option value=\"Do not use regressions\">Do not use regressions<\/option><\/select> #>     <script type=\"application/json\" data-for=\"regression\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_RestrictClear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of clearance method preferences for the user to select from — selectInput_RestrictClear","title":"Generates a drop down list of clearance method preferences for the user to select from — selectInput_RestrictClear","text":"Generates drop list clearance method preferences user select ","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_RestrictClear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of clearance method preferences for the user to select from — selectInput_RestrictClear","text":"","code":"selectInput_RestrictClear(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_RestrictClear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of clearance method preferences for the user to select from — selectInput_RestrictClear","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_RestrictClear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of clearance method preferences for the user to select from — selectInput_RestrictClear","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_RestrictClear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of clearance method preferences for the user to select from — selectInput_RestrictClear","text":"","code":"selectInput_RestrictClear(\"restrict_clear\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"restrict_clear-label\" for=\"restrict_clear\">Select whether protein binding is taken into account in #>                       liver clearance.<\/label> #>   <div> #>     <select id=\"restrict_clear\" class=\"shiny-input-select\"><option value=\"Yes, include protein binding (default)\" selected>Yes, include protein binding (default)<\/option> #> <option value=\"No, do not include protein binding\">No, do not include protein binding<\/option><\/select> #>     <script type=\"application/json\" data-for=\"restrict_clear\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ReturnSamps.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list for the user to select whether the want to return only a single OED estimate or all OED estimates for the in vitro in vivo extrapolation (IVIVE) simulation — selectInput_ReturnSamps","title":"Generates a drop down list for the user to select whether the want to return only a single OED estimate or all OED estimates for the in vitro in vivo extrapolation (IVIVE) simulation — selectInput_ReturnSamps","text":"Generates drop list user select whether want return single OED estimate OED estimates vitro vivo extrapolation (IVIVE) simulation","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ReturnSamps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list for the user to select whether the want to return only a single OED estimate or all OED estimates for the in vitro in vivo extrapolation (IVIVE) simulation — selectInput_ReturnSamps","text":"","code":"selectInput_ReturnSamps(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ReturnSamps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list for the user to select whether the want to return only a single OED estimate or all OED estimates for the in vitro in vivo extrapolation (IVIVE) simulation — selectInput_ReturnSamps","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ReturnSamps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list for the user to select whether the want to return only a single OED estimate or all OED estimates for the in vitro in vivo extrapolation (IVIVE) simulation — selectInput_ReturnSamps","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_ReturnSamps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list for the user to select whether the want to return only a single OED estimate or all OED estimates for the in vitro in vivo extrapolation (IVIVE) simulation — selectInput_ReturnSamps","text":"","code":"selectInput_ReturnSamps(\"returnsamples\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"returnsamples-label\" for=\"returnsamples\">Select whether to return all oral equivalent #>                       dose (OED) samples for each compound or a selected quantile.<\/label> #>   <div> #>     <select id=\"returnsamples\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"Only return a specified dose quantile (default)\">Only return a specified dose quantile (default)<\/option> #> <option value=\"Return all OED samples (will also return the 5th dose quantile)\">Return all OED samples (will also return the 5th dose quantile)<\/option><\/select> #>     <script type=\"application/json\" data-for=\"returnsamples\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Species.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the 'Species' drop down menu — selectInput_Species","title":"Generate the 'Species' drop down menu — selectInput_Species","text":"Generate 'Species' drop menu","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the 'Species' drop down menu — selectInput_Species","text":"","code":"selectInput_Species(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the 'Species' drop down menu — selectInput_Species","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the 'Species' drop down menu — selectInput_Species","text":"Drop menu desired species simulate ToCS","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the 'Species' drop down menu — selectInput_Species","text":"","code":"selectInput_Species(\"spec\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"spec-label\" for=\"spec\">Select the species to analyze.<\/label> #>   <div> #>     <select id=\"spec\" class=\"shiny-input-select\"><option value=\"Select\" selected>Select<\/option> #> <option value=\"Dog\">Dog<\/option> #> <option value=\"Human\">Human<\/option> #> <option value=\"Mouse\">Mouse<\/option> #> <option value=\"Rabbit\">Rabbit<\/option> #> <option value=\"Rat\">Rat<\/option><\/select> #>     <script type=\"application/json\" data-for=\"spec\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_SSoutunits.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of potential output concentrations for the steady state concentrations output — selectInput_SSoutunits","title":"Generates a drop down list of potential output concentrations for the steady state concentrations output — selectInput_SSoutunits","text":"Generates drop list potential output concentrations steady state concentrations output","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_SSoutunits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of potential output concentrations for the steady state concentrations output — selectInput_SSoutunits","text":"","code":"selectInput_SSoutunits(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_SSoutunits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of potential output concentrations for the steady state concentrations output — selectInput_SSoutunits","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_SSoutunits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of potential output concentrations for the steady state concentrations output — selectInput_SSoutunits","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_SSoutunits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of potential output concentrations for the steady state concentrations output — selectInput_SSoutunits","text":"","code":"selectInput_SSoutunits(\"modelSSout_units\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"modelSSout_units-label\" for=\"modelSSout_units\">Select the output concentration units.<\/label> #>   <div> #>     <select id=\"modelSSout_units\" class=\"shiny-input-select\"><option value=\"uM\" selected>uM<\/option> #> <option value=\"mg/L\">mg/L<\/option><\/select> #>     <script type=\"application/json\" data-for=\"modelSSout_units\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Tissue.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a drop down list of tissue types for the steady state concentration and IVIVE outputs — selectInput_Tissue","title":"Generates a drop down list of tissue types for the steady state concentration and IVIVE outputs — selectInput_Tissue","text":"Generates drop list tissue types steady state concentration IVIVE outputs","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Tissue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a drop down list of tissue types for the steady state concentration and IVIVE outputs — selectInput_Tissue","text":"","code":"selectInput_Tissue(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Tissue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a drop down list of tissue types for the steady state concentration and IVIVE outputs — selectInput_Tissue","text":"id Shiny identifier","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Tissue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a drop down list of tissue types for the steady state concentration and IVIVE outputs — selectInput_Tissue","text":"drop list","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/selectInput_Tissue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a drop down list of tissue types for the steady state concentration and IVIVE outputs — selectInput_Tissue","text":"","code":"selectInput_Tissue(\"tissueSS\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"tissueSS-label\" for=\"tissueSS\">Select a tissue you want the output concentration in. #>                       Leave on 'NULL' if the whole body concentration is desired.<\/label> #>   <div> #>     <select id=\"tissueSS\" class=\"shiny-input-select\"><option value=\"NULL\" selected>NULL<\/option> #> <option value=\"adipose\">adipose<\/option> #> <option value=\"bone\">bone<\/option> #> <option value=\"brain\">brain<\/option> #> <option value=\"gut\">gut<\/option> #> <option value=\"heart\">heart<\/option> #> <option value=\"kidney\">kidney<\/option> #> <option value=\"liver\">liver<\/option> #> <option value=\"lung\">lung<\/option> #> <option value=\"muscle\">muscle<\/option> #> <option value=\"skin\">skin<\/option> #> <option value=\"spleen\">spleen<\/option> #> <option value=\"rest\">rest<\/option><\/select> #>     <script type=\"application/json\" data-for=\"tissueSS\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div> selectInput_Tissue(\"tissueIVIVE\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"tissueIVIVE-label\" for=\"tissueIVIVE\">Select a tissue you want the output concentration in. #>                       Leave on 'NULL' if the whole body concentration is desired.<\/label> #>   <div> #>     <select id=\"tissueIVIVE\" class=\"shiny-input-select\"><option value=\"NULL\" selected>NULL<\/option> #> <option value=\"adipose\">adipose<\/option> #> <option value=\"bone\">bone<\/option> #> <option value=\"brain\">brain<\/option> #> <option value=\"gut\">gut<\/option> #> <option value=\"heart\">heart<\/option> #> <option value=\"kidney\">kidney<\/option> #> <option value=\"liver\">liver<\/option> #> <option value=\"lung\">lung<\/option> #> <option value=\"muscle\">muscle<\/option> #> <option value=\"skin\">skin<\/option> #> <option value=\"spleen\">spleen<\/option> #> <option value=\"rest\">rest<\/option><\/select> #>     <script type=\"application/json\" data-for=\"tissueIVIVE\" data-nonempty=\"\">{\"plugins\":[\"selectize-plugin-a11y\"]}<\/script> #>   <\/div> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SetArraySize.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the dimensions of the arrays for the model solution and the toxicokinetic summary data — SetArraySize","title":"Set the dimensions of the arrays for the model solution and the toxicokinetic summary data — SetArraySize","text":"function creates arrays (filled zeros) used store outputted model solution httk's solve_model outputted toxicokinetic summary information.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SetArraySize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the dimensions of the arrays for the model solution and the toxicokinetic summary data — SetArraySize","text":"","code":"SetArraySize(modelsol, n)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SetArraySize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the dimensions of the arrays for the model solution and the toxicokinetic summary data — SetArraySize","text":"modelsol matrix resulting solve_model, rows represent time step columns represent model compartment n number compounds simulated","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SetArraySize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the dimensions of the arrays for the model solution and the toxicokinetic summary data — SetArraySize","text":"list two arrays, one model solution toxicokinetic summary data","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Individ_Plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove current plot legend and generate individual plot legends — Set_Individ_Plot","title":"Remove current plot legend and generate individual plot legends — Set_Individ_Plot","text":"function extracts plotting legend individ_plt_lst, creates new plotting object just legend, removes legends remaining plot.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Individ_Plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove current plot legend and generate individual plot legends — Set_Individ_Plot","text":"","code":"Set_Individ_Plot(individ_plt_lst, n_states)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Individ_Plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove current plot legend and generate individual plot legends — Set_Individ_Plot","text":"individ_plt_lst list ggplot2 plotting objects list element plot single compound composed subplots n_states Number model compartments/outputs","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Individ_Plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove current plot legend and generate individual plot legends — Set_Individ_Plot","text":"list containing inputted plot list legends compound plot removed new subplot plotting legend","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Plot_Legend_Color.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove plot legends and determine plot color — Set_Plot_Legend_Color","title":"Remove plot legends and determine plot color — Set_Plot_Legend_Color","text":"function extracts line color legend plot, transfers legend new panel plot, removes legends plot one legend entire plot.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Plot_Legend_Color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove plot legends and determine plot color — Set_Plot_Legend_Color","text":"","code":"Set_Plot_Legend_Color(plt_lst, n_states)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Plot_Legend_Color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove plot legends and determine plot color — Set_Plot_Legend_Color","text":"plt_lst list ggplot2 plotting objects. list element ggplot2 plotting object single compound composed subplots n_states Number model compartments/outputs simulated model httk's 'solve_model' function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/Set_Plot_Legend_Color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove plot legends and determine plot color — Set_Plot_Legend_Color","text":"list containing two elements. first one inputted plot list legends compound plot removed new subplot plotting legend. second element data frame hexadecimal RGB triplet colors defines plotting color compound.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_ATol.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a slider input where the user can specify the ODE solver's absolute tolerance for concentration-time profile simulations — sliderInput_ATol","title":"Generates a slider input where the user can specify the ODE solver's absolute tolerance for concentration-time profile simulations — sliderInput_ATol","text":"Generates slider input user can specify ODE solver's absolute tolerance concentration-time profile simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_ATol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a slider input where the user can specify the ODE solver's absolute tolerance for concentration-time profile simulations — sliderInput_ATol","text":"","code":"sliderInput_ATol(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_ATol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a slider input where the user can specify the ODE solver's absolute tolerance for concentration-time profile simulations — sliderInput_ATol","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_ATol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a slider input where the user can specify the ODE solver's absolute tolerance for concentration-time profile simulations — sliderInput_ATol","text":"slider input","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_ATol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a slider input where the user can specify the ODE solver's absolute tolerance for concentration-time profile simulations — sliderInput_ATol","text":"","code":"sliderInput_ATol(\"atol\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"atol-label\" for=\"atol\">Select the exponent (power of 10) of the desired absolute #>                       tolerance for the ODE solver.<\/label> #>   <input class=\"js-range-slider\" id=\"atol\" data-skin=\"shiny\" data-min=\"-20\" data-max=\"-1\" data-from=\"-12\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.5\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_MultiDoseTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a slider input bar to select how often a uniform dose of compound is administered during an ADME simulation — sliderInput_MultiDoseTime","title":"Generate a slider input bar to select how often a uniform dose of compound is administered during an ADME simulation — sliderInput_MultiDoseTime","text":"Generate slider input bar select often uniform dose compound administered ADME simulation","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_MultiDoseTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a slider input bar to select how often a uniform dose of compound is administered during an ADME simulation — sliderInput_MultiDoseTime","text":"","code":"sliderInput_MultiDoseTime(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_MultiDoseTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a slider input bar to select how often a uniform dose of compound is administered during an ADME simulation — sliderInput_MultiDoseTime","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_MultiDoseTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a slider input bar to select how often a uniform dose of compound is administered during an ADME simulation — sliderInput_MultiDoseTime","text":"slider input","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_MultiDoseTime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a slider input bar to select how often a uniform dose of compound is administered during an ADME simulation — sliderInput_MultiDoseTime","text":"","code":"sliderInput_MultiDoseTime(\"mult_dosetime\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"mult_dosetime-label\" for=\"mult_dosetime\">Select how often the above dose is administered (every ____ hours).<\/label> #>   <input class=\"js-range-slider\" id=\"mult_dosetime\" data-skin=\"shiny\" data-min=\"0\" data-max=\"24\" data-from=\"6\" data-step=\"0.5\" data-grid=\"true\" data-grid-num=\"9.6\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_RTol.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a slider input where the user can specify the ODE solver's relative tolerance for concentration-time profile simulations — sliderInput_RTol","title":"Generates a slider input where the user can specify the ODE solver's relative tolerance for concentration-time profile simulations — sliderInput_RTol","text":"Generates slider input user can specify ODE solver's relative tolerance concentration-time profile simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_RTol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a slider input where the user can specify the ODE solver's relative tolerance for concentration-time profile simulations — sliderInput_RTol","text":"","code":"sliderInput_RTol(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_RTol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a slider input where the user can specify the ODE solver's relative tolerance for concentration-time profile simulations — sliderInput_RTol","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_RTol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a slider input where the user can specify the ODE solver's relative tolerance for concentration-time profile simulations — sliderInput_RTol","text":"slider input","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/sliderInput_RTol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a slider input where the user can specify the ODE solver's relative tolerance for concentration-time profile simulations — sliderInput_RTol","text":"","code":"sliderInput_RTol(\"rtol\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"rtol-label\" for=\"rtol\">Select the exponent (power of 10) of the relative tolerance #>                       for the ODE solver.<\/label> #>   <input class=\"js-range-slider\" id=\"rtol\" data-skin=\"shiny\" data-min=\"-20\" data-max=\"-1\" data-from=\"-8\" data-step=\"1\" data-grid=\"true\" data-grid-num=\"9.5\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the steady state concentrations plot — SS_ConcPlot_server","title":"Server function for the steady state concentrations plot — SS_ConcPlot_server","text":"function contains output elements steady state concentrations plot. server contains three output elements: download button, plot, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the steady state concentrations plot — SS_ConcPlot_server","text":"","code":"SS_ConcPlot_server(id, ss_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the steady state concentrations plot — SS_ConcPlot_server","text":"id Shiny identifier name; must match identifier SS_ConcPlot_ui() ss_args Shiny reactive list output SS_sol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the steady state concentrations plot — SS_ConcPlot_server","text":"Server function steady state concentrations plot includes four elements: plot download button, steady state concentrations plot, plot caption","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the steady state concentrations plot — SS_ConcPlot_ui","title":"User interface for the steady state concentrations plot — SS_ConcPlot_ui","text":"function contains user interface elements steady state concentrations plot. interface contains three UI elements: download button, plot, plot caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the steady state concentrations plot — SS_ConcPlot_ui","text":"","code":"SS_ConcPlot_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface for the steady state concentrations plot — SS_ConcPlot_ui","text":"id Shiny identifier name; must match identifier SS_ConcPlot_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcPlot_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the steady state concentrations plot — SS_ConcPlot_ui","text":"User interface steady state concentrations plot includes four elements: plot download button, steady state concentrations plot, plot caption","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server function for the steady state concentrations table — SS_ConcTable_server","title":"Server function for the steady state concentrations table — SS_ConcTable_server","text":"function contains output elements steady state concentrations table. server contains four output elements: table download button, simulation download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server function for the steady state concentrations table — SS_ConcTable_server","text":"","code":"SS_ConcTable_server(id, ss_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server function for the steady state concentrations table — SS_ConcTable_server","text":"id Shiny identifier name; must match identifier SS_ConcTable_ui() ss_args Shiny reactive list output SS_sol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server function for the steady state concentrations table — SS_ConcTable_server","text":"Server outputs steady state concentrations table includes four elements: table download button, simulation parameters download button, steady state concentrations table, table caption","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the steady state concentrations table — SS_ConcTable_ui","title":"User interface for the steady state concentrations table — SS_ConcTable_ui","text":"function contains user interface elements steady state concentrations table. interface contains four UI elements: table download button, simulation parameters download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the steady state concentrations table — SS_ConcTable_ui","text":"","code":"SS_ConcTable_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface for the steady state concentrations table — SS_ConcTable_ui","text":"id Shiny identifier name; must match identifier SS_ConcTable_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ConcTable_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the steady state concentrations table — SS_ConcTable_ui","text":"User interface steady state concentrations table includes four elements: table download button, simulation parameters download button, steady state concentrations table, table caption","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_server.html","id":null,"dir":"Reference","previous_headings":"","what":"The server function for the days to steady state table — SS_DayTable_server","title":"The server function for the days to steady state table — SS_DayTable_server","text":"function contains output elements days steady state table. server contains three output elements: table download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The server function for the days to steady state table — SS_DayTable_server","text":"","code":"SS_DayTable_server(id, ss_args)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The server function for the days to steady state table — SS_DayTable_server","text":"id Shiny identifier name; identifier must match SS_DayTable_ui() ss_args Shiny reactive list output SS_sol(), shiny parameters pars(), logscale() input user","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The server function for the days to steady state table — SS_DayTable_server","text":"server function days steady state table includes three outputs: table download button, table, table caption","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface for the days to steady state table — SS_DayTable_ui","title":"User interface for the days to steady state table — SS_DayTable_ui","text":"function contains user interface elements days steady state table. interface contains three UI elements: table download button, table, table caption.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface for the days to steady state table — SS_DayTable_ui","text":"","code":"SS_DayTable_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface for the days to steady state table — SS_DayTable_ui","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_DayTable_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface for the days to steady state table — SS_DayTable_ui","text":"user interface days steady state table includes three outputs: table download button, table, table caption","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Server output for the steady state concentrations module and is composed of three submodules — SS_server","title":"Server output for the steady state concentrations module and is composed of three submodules — SS_server","text":"function acts main function fill user interface steady state concentrations module. server outputs include three elements: plot two tables. server element server function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server output for the steady state concentrations module and is composed of three submodules — SS_server","text":"","code":"SS_server(id, pars, runsim, logscale)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server output for the steady state concentrations module and is composed of three submodules — SS_server","text":"id Shiny identifier name; must match identifier SS_ui() pars list user input parameters entire app runsim Action button titled 'Run Simulation' pressed user logscale Checkbox input value indicating user wanted y-axis plots log10 scale","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server output for the steady state concentrations module and is composed of three submodules — SS_server","text":"Server output steady state concentrations module 'Run Simulation' tab; includes one plot two table drop panels","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_sol.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the steady state concentration solutions — SS_sol","title":"Calculate the steady state concentration solutions — SS_sol","text":"function main steady state module solution function server outputs derived. function orders calculation steady state concentrations number days steady state. formats outputs appropriate display interface.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_sol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the steady state concentration solutions — SS_sol","text":"","code":"SS_sol(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_sol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the steady state concentration solutions — SS_sol","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_sol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the steady state concentration solutions — SS_sol","text":"list steady state concentrations, steady state characteristics, simulation chemical-physical parameters used simulation","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"User interface layout for the steady state concentrations module and is composed of three submodules — SS_ui","title":"User interface layout for the steady state concentrations module and is composed of three submodules — SS_ui","text":"function acts main function set user interface steady state concentrations module. UI layout includes three elements: plot two tables. UI element UI function.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User interface layout for the steady state concentrations module and is composed of three submodules — SS_ui","text":"","code":"SS_ui(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User interface layout for the steady state concentrations module and is composed of three submodules — SS_ui","text":"id Shiny identifier name; must match identifier SS_server()","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/SS_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User interface layout for the steady state concentrations module and is composed of three submodules — SS_ui","text":"User interface layout steady state concentrations module 'Run Simulation' tab; includes one plot two table drop panels","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_ADME.html","id":null,"dir":"Reference","previous_headings":"","what":"Store simulation parameters and physical-chemical data of compounds simulated — StorePars_ADME","title":"Store simulation parameters and physical-chemical data of compounds simulated — StorePars_ADME","text":"function collects user-selected parameters compound data relevant concentration-time profile simulation compiles one data frame.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_ADME.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store simulation parameters and physical-chemical data of compounds simulated — StorePars_ADME","text":"","code":"StorePars_ADME(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_ADME.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store simulation parameters and physical-chemical data of compounds simulated — StorePars_ADME","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_ADME.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store simulation parameters and physical-chemical data of compounds simulated — StorePars_ADME","text":"data frame relevant simulation parameters chosen user physical-chemical data used simulated compounds","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_IVIVE.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile the simulation parameters and physical-chemical data used into one data frame — StorePars_IVIVE","title":"Compile the simulation parameters and physical-chemical data used into one data frame — StorePars_IVIVE","text":"function combines used simulation parameters chemical-physical data simulated compounds one data frame. returned parameters used generate simulation, chemical-physical data retrieved 'httk' package's 'chem.physical_and_invitro.data' data frame.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_IVIVE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile the simulation parameters and physical-chemical data used into one data frame — StorePars_IVIVE","text":"","code":"StorePars_IVIVE(pars, bioactive_df)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_IVIVE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile the simulation parameters and physical-chemical data used into one data frame — StorePars_IVIVE","text":"pars list user input parameters entire app bioactive_df data frame chemical name, CAS number, bioactive concentration (uM units) chemical simulate","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_IVIVE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile the simulation parameters and physical-chemical data used into one data frame — StorePars_IVIVE","text":"data frame simulation parameters physical-chemical data simulated compounds","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_PC.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame that stores all simulation parameters and physical-chemical data for simulated compounds — StorePars_PC","title":"Create a data frame that stores all simulation parameters and physical-chemical data for simulated compounds — StorePars_PC","text":"function creates data frame contains simulated user-selected parameters well chemical-physical compound data simulated compounds. Chemical-physical data taken 'httk' package's chem.physical_and_invitro.data data frame, data either uploaded GUI user already present httk loaded.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_PC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame that stores all simulation parameters and physical-chemical data for simulated compounds — StorePars_PC","text":"","code":"StorePars_PC(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_PC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame that stores all simulation parameters and physical-chemical data for simulated compounds — StorePars_PC","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_PC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame that stores all simulation parameters and physical-chemical data for simulated compounds — StorePars_PC","text":"data frame simulation parameters physical-chemical data compounds simulated","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_SS.html","id":null,"dir":"Reference","previous_headings":"","what":"Store all relevant module parameters and physical-chemical in a data frame for user download — StorePars_SS","title":"Store all relevant module parameters and physical-chemical in a data frame for user download — StorePars_SS","text":"function stores user-selected simulation parameters steady state concentrations module well physical-chemical data simulated compounds one data frame.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_SS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store all relevant module parameters and physical-chemical in a data frame for user download — StorePars_SS","text":"","code":"StorePars_SS(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_SS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store all relevant module parameters and physical-chemical in a data frame for user download — StorePars_SS","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/StorePars_SS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store all relevant module parameters and physical-chemical in a data frame for user download — StorePars_SS","text":"data frame simulation parameters chemical-physical data chemicals simulated","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_DoseMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a text input where users can enter a dosing regimen of times and doses to administer of compounds selected for concentration-time profile simulations — textInput_DoseMatrix","title":"Generate a text input where users can enter a dosing regimen of times and doses to administer of compounds selected for concentration-time profile simulations — textInput_DoseMatrix","text":"Generate text input users can enter dosing regimen times doses administer compounds selected concentration-time profile simulations","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_DoseMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a text input where users can enter a dosing regimen of times and doses to administer of compounds selected for concentration-time profile simulations — textInput_DoseMatrix","text":"","code":"textInput_DoseMatrix(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_DoseMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a text input where users can enter a dosing regimen of times and doses to administer of compounds selected for concentration-time profile simulations — textInput_DoseMatrix","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_DoseMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a text input where users can enter a dosing regimen of times and doses to administer of compounds selected for concentration-time profile simulations — textInput_DoseMatrix","text":"text input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_DoseMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a text input where users can enter a dosing regimen of times and doses to administer of compounds selected for concentration-time profile simulations — textInput_DoseMatrix","text":"","code":"textInput_DoseMatrix(\"multdose_odd\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"multdose_odd-label\" for=\"multdose_odd\">Enter a list of dose amounts (in the specified units) and #>                     times (in days) administered. The list must be entered as #>                     time1, time2, dose1, dose2, etc. For example, if at 0, 0.5, #>                     and 2 days the doses of 1, 3, and 4 mg/kg/BW were given, #>                     respectively, enter 0, 0.5, 2, 1, 3, 4 in the box.<\/label> #>   <input id=\"multdose_odd\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_OutputTimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a text input box for the user to enter concentration-time profile output times, if desired — textInput_OutputTimes","title":"Generates a text input box for the user to enter concentration-time profile output times, if desired — textInput_OutputTimes","text":"Generates text input box user enter concentration-time profile output times, desired","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_OutputTimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a text input box for the user to enter concentration-time profile output times, if desired — textInput_OutputTimes","text":"","code":"textInput_OutputTimes(id)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_OutputTimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a text input box for the user to enter concentration-time profile output times, if desired — textInput_OutputTimes","text":"id Shiny identifier name","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_OutputTimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a text input box for the user to enter concentration-time profile output times, if desired — textInput_OutputTimes","text":"text input box","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/textInput_OutputTimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a text input box for the user to enter concentration-time profile output times, if desired — textInput_OutputTimes","text":"","code":"textInput_OutputTimes(\"returntimes\") #> <div class=\"form-group shiny-input-container\"> #>   <label class=\"control-label\" id=\"returntimes-label\" for=\"returntimes\">Enter the times (in days) to output concentrations. Leave #>                     blank if no specific times are needed. Enter a comma-separated #>                     list, such as 0, 1, 2, ... signifying output 0, 1, and 2 days #>                     after dosing begins.<\/label> #>   <input id=\"returntimes\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/> #> <\/div>"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/TKsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a toxicokinetic (TK) summary of each compound — TKsummary","title":"Generate a toxicokinetic (TK) summary of each compound — TKsummary","text":"function generates matrix TK summary consisting Tmax (time maximal concentration), Cmax (maximal concentration), AUC (area curve) compound model output compartments. AUC calculated using AUC function 'DescTools' R package trapezoid method","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/TKsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a toxicokinetic (TK) summary of each compound — TKsummary","text":"","code":"TKsummary(modsol)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/TKsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a toxicokinetic (TK) summary of each compound — TKsummary","text":"modsol concentrations-time profile matrix resulting solve_model, rows represent time step columns represent model compartment","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/TKsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a toxicokinetic (TK) summary of each compound — TKsummary","text":"matrix TK summary values three columns (Tmax, Cmax, AUC) number rows equal number model output compartments (number columns modelsol)","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/type_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if the data type is appropriate — type_func","title":"Determine if the data type is appropriate — type_func","text":"Determines whether data type y acceptable within list data types x.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/type_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if the data type is appropriate — type_func","text":"","code":"type_func(x, y)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/type_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if the data type is appropriate — type_func","text":"x vector y vector","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/type_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if the data type is appropriate — type_func","text":"TRUE FALSE","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateComps.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset the ","title":"Reset the ","text":"function updates preloaded compound selections default human, silico parameters, model selections changed original selection.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateComps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset the ","text":"","code":"UpdateComps(session)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateComps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset the ","text":"session Shiny session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateComps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset the ","text":"Clear \"preloaded compounds\" selection return default value","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateFunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset inputs if a new main GUI function is selected — UpdateFunc","title":"Reset inputs if a new main GUI function is selected — UpdateFunc","text":"function updates model, insilico parameters, preloaded compound selections 'output' function changed original selection.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateFunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset inputs if a new main GUI function is selected — UpdateFunc","text":"","code":"UpdateFunc(session)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateFunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset inputs if a new main GUI function is selected — UpdateFunc","text":"session Shiny session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateFunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset inputs if a new main GUI function is selected — UpdateFunc","text":"Clear \"model\", \"silico parameter preference\", \"preloaded compounds\" selections return default values","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function to update inputs when a trigger input is changed — UpdateInputs","title":"Main function to update inputs when a trigger input is changed — UpdateInputs","text":"function resets user-selected values certain parameters depending change another main parameters. function ensures user makes appropriate parameter selections based parameters selected.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function to update inputs when a trigger input is changed — UpdateInputs","text":"","code":"UpdateInputs(input, session)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function to update inputs when a trigger input is changed — UpdateInputs","text":"input 'input' object used prefix ID's (entered 'input') session Shiny session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function to update inputs when a trigger input is changed — UpdateInputs","text":"Cleared inputs applicable function main input changed","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdatePars.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a final list of all parameters — UpdatePars","title":"Compile a final list of all parameters — UpdatePars","text":"function creates final list user-selected parameters use simulation. adjusts parameters user selection function-ready input simulation modules.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdatePars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a final list of all parameters — UpdatePars","text":"","code":"UpdatePars(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdatePars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile a final list of all parameters — UpdatePars","text":"pars list parameter values encompassing user inputs modules","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdatePars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile a final list of all parameters — UpdatePars","text":"list parameters pass modules","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset inputs if a new species is selected — UpdateSpec","title":"Reset inputs if a new species is selected — UpdateSpec","text":"function updates model preloaded compound selections 'species' function changed original selection.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset inputs if a new species is selected — UpdateSpec","text":"","code":"UpdateSpec(session)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset inputs if a new species is selected — UpdateSpec","text":"session Shiny session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UpdateSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset inputs if a new species is selected — UpdateSpec","text":"Clear \"model\" \"preloaded compounds\" selections return default values","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UploadComps_Check.html","id":null,"dir":"Reference","previous_headings":"","what":"Are there any formatting or data errors in the new compounds file uploaded by the user? — UploadComps_Check","title":"Are there any formatting or data errors in the new compounds file uploaded by the user? — UploadComps_Check","text":"function checks uploaded file containing physical-chemical data compounds simulate. file checked correct formatting, missing data, correct data types.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UploadComps_Check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are there any formatting or data errors in the new compounds file uploaded by the user? — UploadComps_Check","text":"","code":"UploadComps_Check(value, input)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UploadComps_Check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are there any formatting or data errors in the new compounds file uploaded by the user? — UploadComps_Check","text":"value Shiny input ID corresponding input object input reactive inputs associated session","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/UploadComps_Check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are there any formatting or data errors in the new compounds file uploaded by the user? — UploadComps_Check","text":"condition FALSE, return message. condition TRUE, return nothing.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_ADME.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any inputs specific to the concentration-time profile module are invalid or missing — validate_text_ADME","title":"Check if any inputs specific to the concentration-time profile module are invalid or missing — validate_text_ADME","text":"function validates user-selected parameters across concentration-time profile module acceptable. , simulator compute errors inputs fixed.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_ADME.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any inputs specific to the concentration-time profile module are invalid or missing — validate_text_ADME","text":"","code":"validate_text_ADME(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_ADME.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any inputs specific to the concentration-time profile module are invalid or missing — validate_text_ADME","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_ADME.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if any inputs specific to the concentration-time profile module are invalid or missing — validate_text_ADME","text":"blank error message user halts computation user fixes input error.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_Common.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any inputs that are common among all four modules are invalid or missing — validate_text_Common","title":"Check if any inputs that are common among all four modules are invalid or missing — validate_text_Common","text":"function validates common user-selected parameters across modules acceptable. , simulator compute errors inputs fixed.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_Common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any inputs that are common among all four modules are invalid or missing — validate_text_Common","text":"","code":"validate_text_Common(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_Common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any inputs that are common among all four modules are invalid or missing — validate_text_Common","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_Common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if any inputs that are common among all four modules are invalid or missing — validate_text_Common","text":"blank error message user halts computation user fixes input error.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_IVIVE.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any inputs specific to the in vitro in vivo extrapolation (IVIVE) module are invalid or missing — validate_text_IVIVE","title":"Check if any inputs specific to the in vitro in vivo extrapolation (IVIVE) module are invalid or missing — validate_text_IVIVE","text":"function validates user-selected parameters across IVIVE module acceptable. , simulator compute errors inputs fixed.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_IVIVE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any inputs specific to the in vitro in vivo extrapolation (IVIVE) module are invalid or missing — validate_text_IVIVE","text":"","code":"validate_text_IVIVE(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_IVIVE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any inputs specific to the in vitro in vivo extrapolation (IVIVE) module are invalid or missing — validate_text_IVIVE","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_IVIVE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if any inputs specific to the in vitro in vivo extrapolation (IVIVE) module are invalid or missing — validate_text_IVIVE","text":"blank error message user halts computation user fixes input error.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_PC.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any inputs specific to the parameter calculations module are invalid or missing — validate_text_PC","title":"Check if any inputs specific to the parameter calculations module are invalid or missing — validate_text_PC","text":"function validates user-selected parameters across parameter calculations module acceptable. , simulator compute errors inputs fixed.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_PC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any inputs specific to the parameter calculations module are invalid or missing — validate_text_PC","text":"","code":"validate_text_PC(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_PC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any inputs specific to the parameter calculations module are invalid or missing — validate_text_PC","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_PC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if any inputs specific to the parameter calculations module are invalid or missing — validate_text_PC","text":"blank error message user halts computation user fixes input error.","code":""},{"path":[]},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_SS.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any inputs specific to the steady state concentrations module are invalid or missing — validate_text_SS","title":"Check if any inputs specific to the steady state concentrations module are invalid or missing — validate_text_SS","text":"function validates user-selected parameters across steady state concentrations module acceptable. , simulator compute errors inputs fixed.","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_SS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any inputs specific to the steady state concentrations module are invalid or missing — validate_text_SS","text":"","code":"validate_text_SS(pars)"},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_SS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any inputs specific to the steady state concentrations module are invalid or missing — validate_text_SS","text":"pars list user input parameters entire app","code":""},{"path":"https://kristenwindoloski.github.io/ToCS/reference/validate_text_SS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if any inputs specific to the steady state concentrations module are invalid or missing — validate_text_SS","text":"blank error message user halts computation user fixes input error.","code":""},{"path":[]}]
